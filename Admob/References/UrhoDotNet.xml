<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UrhoDotNet</name>
    </assembly>
    <members>
        <member name="P:Urho.Desktop.DesktopUrhoInitializer.AssetsDirectory">
             <summary>
             Path to a folder containing "Data" folder. CurrentDirectory if null
             </summary>
            </member>
        <member name="T:Urho.Application">
             <summary>
             Base class for creating applications which initialize the Urho3D engine and run a main loop until exited.
             </summary>
            </member>
        <member name="P:Urho.Application.Options">
             <summary>
             Application options
             </summary>
            </member>
        <member name="P:Urho.Application.IsFrameRendering">
             <summary>
             True means Urho3D is somewhere between E_BEGINFRAME and E_ENDFRAME in Engine::RunFrame()
             </summary>
            </member>
        <member name="E:Urho.Application.Update">
             <summary>
             Frame update event
             </summary>
            </member>
        <member name="M:Urho.Application.InvokeOnMain(System.Action)">
             <summary>
             Invoke actions in the Main Thread (the next Update call)
             </summary>
            </member>
        <member name="M:Urho.Application.ToMainThreadAsync">
             <summary>
             Dispatch to OnUpdate
             </summary>
            </member>
        <member name="M:Urho.Application.InvokeOnMainAsync(System.Action)">
             <summary>
             Invoke actions in the Main Thread (the next Update call)
             </summary>
            </member>
        <member name="M:Urho.Application.Run">
             <summary>
             Initialize the engine and run the main loop, then return the application exit code. Catch out-of-memory exceptions while running.
             </summary>
            </member>
        <member name="M:Urho.Application.ErrorExit(System.String)">
             <summary>
             Show an error message (last log message if empty), terminate the main loop, and set failure exit code.
             </summary>
            </member>
        <member name="T:Urho.ApplicationOptions">
             <summary>
             Application options, see full description at:
             http://urho3d.github.io/documentation/1.5/_running.html 
             </summary>
            </member>
        <member name="M:Urho.ApplicationOptions.#ctor(System.String)">
             <param name="assetsFolder">usually it's "Data". Can be null if built-in assets are enough for you</param>
            </member>
        <member name="P:Urho.ApplicationOptions.Width">
             <summary>
             Desktop only
             </summary>
            </member>
        <member name="P:Urho.ApplicationOptions.Height">
             <summary>
             Desktop only
             </summary>
            </member>
        <member name="P:Urho.ApplicationOptions.WindowedMode">
             <summary>
             Desktop only
             </summary>
            </member>
        <member name="P:Urho.ApplicationOptions.ResizableWindow">
             <summary>
             Desktop only
             </summary>
            </member>
        <member name="P:Urho.ApplicationOptions.LimitFps">
             <summary>
             With limit enabled: 200 fps for Desktop (and always 60 fps for mobile despite of the flag)
             </summary>
            </member>
        <member name="P:Urho.ApplicationOptions.NoSound">
             <summary>
             Disable sound output
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member P:Urho.ApplicationOptions.Orientation-->
        <member name="P:Urho.ApplicationOptions.ResourcePaths">
             <summary>
             Resource path(s) to use (default: Data, CoreData)
             </summary>
            </member>
        <member name="P:Urho.ApplicationOptions.ResourcePackagesPaths">
             <summary>
             Resource package files to use (default: empty)
             </summary>
            </member>
        <member name="P:Urho.ApplicationOptions.TouchEmulation">
             <summary>
             Touch emulation on desktop platform
             </summary>
            </member>
        <member name="P:Urho.ApplicationOptions.HighDpi">
             <summary>
             Enable high DPI, only supported by Apple platforms (OSX, iOS, and tvOS)
             </summary>
            </member>
        <member name="P:Urho.ApplicationOptions.AdditionalFlags">
             <summary>
             Add any flag listed here: http://urho3d.github.io/documentation/1.7/_running.html 
             </summary>
            </member>
        <member name="P:Urho.ApplicationOptions.ExternalWindow">
             <summary>
             Windows: external window handle (WinForms Panel.Handle) to use in order to display Urho game
             You can use it in WPF via WindowsFormsHost (and a WF panel inside it)
             </summary>
            </member>
        <member name="T:Urho.BillboardSet">
             <summary>
             %Billboard component.
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.GetUpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.SetMaterial(Urho.Material)">
             <summary>
             Set material.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.SetNumBillboards(System.UInt32)">
             <summary>
             Set number of billboards.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.SetRelative(System.Boolean)">
             <summary>
             Set whether billboards are relative to the scene node. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.SetScaled(System.Boolean)">
             <summary>
             Set whether scene node scale affects billboards' size. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.SetSorted(System.Boolean)">
             <summary>
             Set whether billboards are sorted by distance. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.SetFixedScreenSize(System.Boolean)">
             <summary>
             Set whether billboards have fixed size on screen (measured in pixels) regardless of distance to camera. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.SetFaceCameraMode(Urho.FaceCameraMode)">
             <summary>
             Set how the billboards should rotate in relation to the camera. Default is to follow camera rotation on all axes (FC_ROTATE_XYZ).
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.SetMinAngle(System.Single)">
             <summary>
             Set minimal angle between billboard normal and look-at direction.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.SetAnimationLodBias(System.Single)">
             <summary>
             Set animation LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.Commit">
             <summary>
             Mark for bounding box and vertex buffer update. Call after modifying the billboards.
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.GetMaterial">
             <summary>
             Return material.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.GetNumBillboards">
             <summary>
             Return number of billboards.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.GetBillboard(System.UInt32)">
             <summary>
             Return billboard by index.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.IsRelative">
             <summary>
             Return whether billboards are relative to the scene node.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.IsScaled">
             <summary>
             Return whether scene node scale affects billboards' size.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.IsSorted">
             <summary>
             Return whether billboards are sorted.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.IsFixedScreenSize">
             <summary>
             Return whether billboards are fixed screen size.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.GetFaceCameraMode">
             <summary>
             Return how the billboards rotate in relation to the camera.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.GetMinAngle">
             <summary>
             Return minimal angle between billboard normal and look-at direction.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.GetAnimationLodBias">
             <summary>
             Return animation LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.BillboardSet.GetMaterialAttr">
             <summary>
             Return material attribute.
             </summary>
            </member>
        <member name="P:Urho.BillboardSet.UpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="P:Urho.BillboardSet.Material">
             <summary>
             Return material.
             
             Or
             Set material.
             
             </summary>
            </member>
        <member name="P:Urho.BillboardSet.NumBillboards">
             <summary>
             Return number of billboards.
             
             Or
             Set number of billboards.
             
             </summary>
            </member>
        <member name="P:Urho.BillboardSet.Relative">
             <summary>
             Return whether billboards are relative to the scene node.
             
             Or
             Set whether billboards are relative to the scene node. Default true.
             
             </summary>
            </member>
        <member name="P:Urho.BillboardSet.Scaled">
             <summary>
             Return whether scene node scale affects billboards' size.
             
             Or
             Set whether scene node scale affects billboards' size. Default true.
             
             </summary>
            </member>
        <member name="P:Urho.BillboardSet.Sorted">
             <summary>
             Return whether billboards are sorted.
             
             Or
             Set whether billboards are sorted by distance. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.BillboardSet.FixedScreenSize">
             <summary>
             Return whether billboards are fixed screen size.
             
             Or
             Set whether billboards have fixed size on screen (measured in pixels) regardless of distance to camera. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.BillboardSet.FaceCameraMode">
             <summary>
             Return how the billboards rotate in relation to the camera.
             
             Or
             Set how the billboards should rotate in relation to the camera. Default is to follow camera rotation on all axes (FC_ROTATE_XYZ).
             
             </summary>
            </member>
        <member name="P:Urho.BillboardSet.MinAngle">
             <summary>
             Return minimal angle between billboard normal and look-at direction.
             
             Or
             Set minimal angle between billboard normal and look-at direction.
             
             </summary>
            </member>
        <member name="P:Urho.BillboardSet.AnimationLodBias">
             <summary>
             Return animation LOD bias.
             
             Or
             Set animation LOD bias.
             
             </summary>
            </member>
        <member name="P:Urho.BillboardSet.MaterialAttr">
             <summary>
             Return material attribute.
             </summary>
            </member>
        <member name="T:Urho.Audio.BufferedSoundStream">
             <summary>
             %Sound stream that supports manual buffering of data from the main thread.
             </summary>
            </member>
        <member name="M:Urho.Audio.BufferedSoundStream.GetData(System.SByte*,System.UInt32)">
             <summary>
             Produce sound data into destination. Return number of bytes produced. Called by SoundSource from the mixing thread.
             </summary>
            </member>
        <member name="M:Urho.Audio.BufferedSoundStream.AddData(System.IntPtr,System.UInt32)">
             <summary>
             Buffer sound data. Makes a copy of it.
             </summary>
            </member>
        <member name="M:Urho.Audio.BufferedSoundStream.Clear">
             <summary>
             Remove all buffered audio data.
             </summary>
            </member>
        <member name="M:Urho.Audio.BufferedSoundStream.GetBufferNumBytes">
             <summary>
             Return amount of buffered (unplayed) sound data in bytes.
             </summary>
            </member>
        <member name="M:Urho.Audio.BufferedSoundStream.GetBufferLength">
             <summary>
             Return length of buffered (unplayed) sound data in seconds.
             </summary>
            </member>
        <member name="P:Urho.Audio.BufferedSoundStream.BufferNumBytes">
             <summary>
             Return amount of buffered (unplayed) sound data in bytes.
             </summary>
            </member>
        <member name="P:Urho.Audio.BufferedSoundStream.BufferLength">
             <summary>
             Return length of buffered (unplayed) sound data in seconds.
             </summary>
            </member>
        <member name="T:Urho.Camera">
             <summary>
             %Camera component.
             </summary>
            </member>
        <member name="M:Urho.Camera.SetViewOverrideFlags(System.UInt32)">
             <summary>
             Set view override flags.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetViewOverrideFlags">
             <summary>
             Return view override flags.
             </summary>
            </member>
        <member name="P:Urho.Camera.ViewOverrideFlags">
             <summary>
             Return view override flags.
             Or
             Set view override flags.
             </summary>
            </member>
        <member name="M:Urho.Camera.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Camera.SetNearClip(System.Single)">
             <summary>
             Set near clip distance.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetFarClip(System.Single)">
             <summary>
             Set far clip distance.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetFov(System.Single)">
             <summary>
             Set vertical field of view in degrees.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetOrthoSize(System.Single)">
             <summary>
             Set orthographic mode view uniform size.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetOrthoSize(Urho.Vector2)">
             <summary>
             Set orthographic mode view non-uniform size. Disables the auto aspect ratio -mode.
             </summary>
            </member>
        <member name="M:Urho.Camera.SetAspectRatio(System.Single)">
             <summary>
             Set aspect ratio manually. Disables the auto aspect ratio -mode.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetFillMode(Urho.FillMode)">
             <summary>
             Set polygon fill mode to use when rendering a scene.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetZoom(System.Single)">
             <summary>
             Set zoom.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetLodBias(System.Single)">
             <summary>
             Set LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetViewMask(System.UInt32)">
             <summary>
             Set view mask. Will be and'ed with object's view mask to see if the object should be rendered.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetOrthographic(System.Boolean)">
             <summary>
             Set orthographic mode enabled/disabled.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetAutoAspectRatio(System.Boolean)">
             <summary>
             Set automatic aspect ratio based on viewport dimensions. Enabled by default.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetProjectionOffset(Urho.Vector2)">
             <summary>
             Set projection offset. It needs to be calculated as (offset in pixels) / (viewport dimensions).
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetUseReflection(System.Boolean)">
             <summary>
             Set reflection mode.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetReflectionPlane(Urho.Plane)">
             <summary>
             Set reflection plane in world space for reflection mode.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetUseClipping(System.Boolean)">
             <summary>
             Set whether to use a custom clip plane.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetClipPlane(Urho.Plane)">
             <summary>
             Set custom clipping plane in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.SetFlipVertical(System.Boolean)">
             <summary>
             Set vertical flipping mode. Called internally by View to resolve OpenGL / Direct3D9 rendertarget sampling differences.
             </summary>
            </member>
        <member name="M:Urho.Camera.SetProjection(Urho.Matrix4)">
             <summary>
             Set custom projection matrix, which should be specified in D3D convention with depth range 0 - 1. Disables auto aspect ratio.
             
             Change any of the standard view parameters (FOV, far clip, zoom, etc.) to revert to the standard projection.
             Note that the custom projection is not serialized or replicated through the network.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetFarClip">
             <summary>
             Return far clip distance. If a custom projection matrix is in use, is calculated from it instead of the value assigned with SetFarClip().
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetNearClip">
             <summary>
             Return near clip distance. If a custom projection matrix is in use, is calculated from it instead of the value assigned with SetNearClip().
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetFov">
             <summary>
             Return vertical field of view in degrees.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetOrthoSize">
             <summary>
             Return orthographic mode size.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetAspectRatio">
             <summary>
             Return aspect ratio.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetZoom">
             <summary>
             Return zoom.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetLodBias">
             <summary>
             Return LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetViewMask">
             <summary>
             Return view mask.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetFillMode">
             <summary>
             Return fill mode.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.IsOrthographic">
             <summary>
             Return orthographic flag.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetAutoAspectRatio">
             <summary>
             Return auto aspect ratio flag.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetFrustum">
             <summary>
             Return frustum in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetProjection">
             <summary>
             Return projection matrix. It's in D3D convention with depth range 0 - 1.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetGPUProjection">
             <summary>
             Return projection matrix converted to API-specific format for use as a shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetView">
             <summary>
             Return view matrix.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetHalfViewSize">
             <summary>
             Return half view size.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetSplitFrustum(System.Single,System.Single)">
             <summary>
             Return frustum split by custom near and far clip distances.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetViewSpaceFrustum">
             <summary>
             Return frustum in view space.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetViewSpaceSplitFrustum(System.Single,System.Single)">
             <summary>
             Return split frustum in view space.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetScreenRay(System.Single,System.Single)">
             <summary>
             Return ray corresponding to normalized screen coordinates (0 - 1), with origin on the near clip plane.
             </summary>
            </member>
        <member name="M:Urho.Camera.WorldToScreenPoint(Urho.Vector3)">
             <summary>
             Convert a world space point to normalized screen coordinates (0 - 1).
             </summary>
            </member>
        <member name="M:Urho.Camera.ScreenToWorldPoint(Urho.Vector3)">
             <summary>
             Convert normalized screen coordinates (0 - 1) and distance along view Z axis (in Z coordinate) to a world space point. The distance can not be closer than the near clip plane.
             Note that a HitDistance() from the camera screen ray is not the same as distance along the view Z axis, as under a perspective projection the ray is likely to not be Z-aligned.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetProjectionOffset">
             <summary>
             Return projection offset.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetUseReflection">
             <summary>
             Return whether is using reflection.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetReflectionPlane">
             <summary>
             Return the reflection plane.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetUseClipping">
             <summary>
             Return whether is using a custom clipping plane.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetClipPlane">
             <summary>
             Return the custom clipping plane.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.GetFlipVertical">
             <summary>
             Return vertical flipping mode.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetReverseCulling">
             <summary>
             Return whether to reverse culling; affected by vertical flipping and reflection.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetDistance(Urho.Vector3)">
             <summary>
             Return distance to position. In orthographic mode uses only Z coordinate.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetDistanceSquared(Urho.Vector3)">
             <summary>
             Return squared distance to position. In orthographic mode uses only Z coordinate.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetLodDistance(System.Single,System.Single,System.Single)">
             <summary>
             Return a scene node's LOD scaled distance.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetFaceCameraRotation(Urho.Vector3,Urho.Quaternion,Urho.FaceCameraMode,System.Single)">
             <summary>
             Return a world rotation for facing a camera on certain axes based on the existing world rotation.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetEffectiveWorldTransform">
             <summary>
             Get effective world transform for matrix and frustum calculations including reflection but excluding node scaling.
             
             </summary>
            </member>
        <member name="M:Urho.Camera.IsProjectionValid">
             <summary>
             Return if projection parameters are valid for rendering and raycasting.
             </summary>
            </member>
        <member name="M:Urho.Camera.SetAspectRatioInternal(System.Single)">
             <summary>
             Set aspect ratio without disabling the "auto aspect ratio" mode. Called internally by View.
             </summary>
            </member>
        <member name="M:Urho.Camera.SetOrthoSizeAttr(System.Single)">
             <summary>
             Set orthographic size attribute without forcing the aspect ratio.
             </summary>
            </member>
        <member name="M:Urho.Camera.SetReflectionPlaneAttr(Urho.Vector4)">
             <summary>
             Set reflection plane attribute.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetReflectionPlaneAttr">
             <summary>
             Return reflection plane attribute.
             </summary>
            </member>
        <member name="M:Urho.Camera.SetClipPlaneAttr(Urho.Vector4)">
             <summary>
             Set clipping plane attribute.
             </summary>
            </member>
        <member name="M:Urho.Camera.GetClipPlaneAttr">
             <summary>
             Return clipping plane attribute.
             </summary>
            </member>
        <member name="P:Urho.Camera.NearClip">
             <summary>
             Return near clip distance. If a custom projection matrix is in use, is calculated from it instead of the value assigned with SetNearClip().
             
             Or
             Set near clip distance.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.FarClip">
             <summary>
             Return far clip distance. If a custom projection matrix is in use, is calculated from it instead of the value assigned with SetFarClip().
             
             Or
             Set far clip distance.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.Fov">
             <summary>
             Return vertical field of view in degrees.
             
             Or
             Set vertical field of view in degrees.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.OrthoSize">
             <summary>
             Return orthographic mode size.
             
             Or
             Set orthographic mode view uniform size.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.AspectRatio">
             <summary>
             Return aspect ratio.
             
             Or
             Set aspect ratio manually. Disables the auto aspect ratio -mode.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.FillMode">
             <summary>
             Return fill mode.
             
             Or
             Set polygon fill mode to use when rendering a scene.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.Zoom">
             <summary>
             Return zoom.
             
             Or
             Set zoom.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.LodBias">
             <summary>
             Return LOD bias.
             
             Or
             Set LOD bias.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.ViewMask">
             <summary>
             Return view mask.
             
             Or
             Set view mask. Will be and'ed with object's view mask to see if the object should be rendered.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.Orthographic">
             <summary>
             Return orthographic flag.
             
             Or
             Set orthographic mode enabled/disabled.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.AutoAspectRatio">
             <summary>
             Return auto aspect ratio flag.
             
             Or
             Set automatic aspect ratio based on viewport dimensions. Enabled by default.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.ProjectionOffset">
             <summary>
             Return projection offset.
             
             Or
             Set projection offset. It needs to be calculated as (offset in pixels) / (viewport dimensions).
             
             </summary>
            </member>
        <member name="P:Urho.Camera.UseReflection">
             <summary>
             Return whether is using reflection.
             
             Or
             Set reflection mode.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.ReflectionPlane">
             <summary>
             Return the reflection plane.
             
             Or
             Set reflection plane in world space for reflection mode.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.UseClipping">
             <summary>
             Return whether is using a custom clipping plane.
             
             Or
             Set whether to use a custom clip plane.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.ClipPlane">
             <summary>
             Return the custom clipping plane.
             
             Or
             Set custom clipping plane in world space.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.FlipVertical">
             <summary>
             Return vertical flipping mode.
             Or
             Set vertical flipping mode. Called internally by View to resolve OpenGL / Direct3D9 rendertarget sampling differences.
             </summary>
            </member>
        <member name="P:Urho.Camera.Projection">
             <summary>
             Return projection matrix. It's in D3D convention with depth range 0 - 1.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.Frustum">
             <summary>
             Return frustum in world space.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.GPUProjection">
             <summary>
             Return projection matrix converted to API-specific format for use as a shader parameter.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.View">
             <summary>
             Return view matrix.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.HalfViewSize">
             <summary>
             Return half view size.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.ViewSpaceFrustum">
             <summary>
             Return frustum in view space.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.ReverseCulling">
             <summary>
             Return whether to reverse culling; affected by vertical flipping and reflection.
             </summary>
            </member>
        <member name="P:Urho.Camera.EffectiveWorldTransform">
             <summary>
             Get effective world transform for matrix and frustum calculations including reflection but excluding node scaling.
             
             </summary>
            </member>
        <member name="P:Urho.Camera.ProjectionValid">
             <summary>
             Return if projection parameters are valid for rendering and raycasting.
             </summary>
            </member>
        <member name="P:Urho.Camera.ReflectionPlaneAttr">
             <summary>
             Return reflection plane attribute.
             </summary>
            </member>
        <member name="P:Urho.Camera.ClipPlaneAttr">
             <summary>
             Return clipping plane attribute.
             </summary>
            </member>
        <member name="T:Urho.Component">
             <summary>
             Base class for components. Components can be created to scene nodes.
             </summary>
            </member>
        <member name="M:Urho.Component.OnUpdate(System.Single)">
             <summary>
             Make sure you set SubscribeToSceneUpdate property to true in order to receive Update events
             </summary>
            </member>
        <member name="M:Urho.Component.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Component.Save(Urho.IO.File)">
             <summary>
             Save as binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Component.Save(Urho.MemoryBuffer)">
             <summary>
             Save as binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Component.SaveXml(Urho.Resources.XmlElement)">
             <summary>
             Save as XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Component.MarkNetworkUpdate">
             <summary>
             Mark for attribute check on the next network update.
             </summary>
            </member>
        <member name="M:Urho.Component.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Component.SetEnabled(System.Boolean)">
             <summary>
             Set enabled/disabled state.
             
             </summary>
            </member>
        <member name="M:Urho.Component.Remove">
             <summary>
             Remove from the scene node. If no other shared pointer references exist, causes immediate deletion.
             </summary>
            </member>
        <member name="M:Urho.Component.GetID">
             <summary>
             Return ID.
             
             </summary>
            </member>
        <member name="M:Urho.Component.IsReplicated">
             <summary>
             Return whether the component is replicated or local to a scene.
             
             </summary>
            </member>
        <member name="M:Urho.Component.GetNode">
             <summary>
             Return scene node.
             
             </summary>
            </member>
        <member name="M:Urho.Component.GetScene">
             <summary>
             Return the scene the node belongs to.
             </summary>
            </member>
        <member name="M:Urho.Component.IsEnabled">
             <summary>
             Return whether is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Component.IsEnabledEffective">
             <summary>
             Return whether is effectively enabled (node is also enabled).
             
             </summary>
            </member>
        <member name="M:Urho.Component.GetComponent(Urho.StringHash)">
             <summary>
             Return component in the same scene node by type. If there are several, returns the first.
             </summary>
            </member>
        <member name="M:Urho.Component.AddReplicationState(Urho.ComponentReplicationState*)">
             <summary>
             Add a replication state that is tracking this component.
             </summary>
            </member>
        <member name="M:Urho.Component.PrepareNetworkUpdate">
             <summary>
             Prepare network update by comparing attributes and marking replication states dirty as necessary.
             </summary>
            </member>
        <member name="M:Urho.Component.CleanupConnection(Urho.Network.Connection)">
             <summary>
             Clean up all references to a network connection that is about to be removed.
             
             </summary>
            </member>
        <member name="P:Urho.Component.Enabled">
             <summary>
             Return whether is enabled.
             
             Or
             Set enabled/disabled state.
             
             </summary>
            </member>
        <member name="P:Urho.Component.ID">
             <summary>
             Return ID.
             
             </summary>
            </member>
        <member name="P:Urho.Component.Replicated">
             <summary>
             Return whether the component is replicated or local to a scene.
             
             </summary>
            </member>
        <member name="P:Urho.Component.Node">
             <summary>
             Return scene node.
             
             </summary>
            </member>
        <member name="P:Urho.Component.Scene">
             <summary>
             Return the scene the node belongs to.
             </summary>
            </member>
        <member name="P:Urho.Component.EnabledEffective">
             <summary>
             Return whether is effectively enabled (node is also enabled).
             
             </summary>
            </member>
        <member name="T:Urho.Network.Connection">
             <summary>
             %Connection to a remote network host.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetPacketType(System.Boolean,System.Boolean)">
             <summary>
             Get packet type based on the message parameters
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SendMessage(System.Int32,System.Boolean,System.Boolean,System.Byte*,System.UInt32,System.UInt32)">
             <summary>
             Send a message.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SetScene(Urho.Scene)">
             <summary>
             Assign scene. On the server, this will cause the client to load it.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SetPosition(Urho.Vector3)">
             <summary>
             Set the observer position for interest management, to be sent to the server.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SetRotation(Urho.Quaternion)">
             <summary>
             Set the observer rotation for interest management, to be sent to the server. Note: not used by the NetworkPriority component.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SetConnectPending(System.Boolean)">
             <summary>
             Set the connection pending status. Called by Network.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SetLogStatistics(System.Boolean)">
             <summary>
             Set whether to log data in/out statistics.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.Disconnect(System.Int32)">
             <summary>
             Disconnect. If wait time is non-zero, will block while waiting for disconnect to finish.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SendServerUpdate">
             <summary>
             Send scene update messages. Called by Network.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SendClientUpdate">
             <summary>
             Send latest controls from the client. Called by Network.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SendRemoteEvents">
             <summary>
             Send queued remote events. Called by Network.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SendPackages">
             <summary>
             Send package files to client. Called by network.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SendBuffer(Urho.PacketType)">
             <summary>
             Send out buffered messages by their type
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SendAllBuffers">
             <summary>
             Send out all buffered messages
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.ProcessPendingLatestData">
             <summary>
             Process pending latest data for nodes and components.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.Ban">
             <summary>
             Ban this connections IP address.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetScene">
             <summary>
             Return the scene used by this connection.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetTimeStamp">
             <summary>
             Return the controls timestamp, sent from client to server along each control update.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetPosition">
             <summary>
             Return the observer position sent by the client for interest management.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetRotation">
             <summary>
             Return the observer rotation sent by the client for interest management.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.IsClient">
             <summary>
             Return whether is a client connection.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.IsConnected">
             <summary>
             Return whether is fully connected.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.IsConnectPending">
             <summary>
             Return whether connection is pending.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.IsSceneLoaded">
             <summary>
             Return whether the scene is loaded and ready to receive server updates.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetLogStatistics">
             <summary>
             Return whether to log data in/out statistics.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetAddress">
             <summary>
             Return remote address.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetPort">
             <summary>
             Return remote port.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetRoundTripTime">
             <summary>
             Return the connection's round trip time in milliseconds.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetLastHeardTime">
             <summary>
             Return the time since last received data from the remote host in milliseconds.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetBytesInPerSec">
             <summary>
             Return bytes received per second.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetBytesOutPerSec">
             <summary>
             Return bytes sent per second.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetPacketsInPerSec">
             <summary>
             Return packets received per second.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetPacketsOutPerSec">
             <summary>
             Return packets sent per second.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.ToDebugString">
             <summary>
             Return an address:port string.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetNumDownloads">
             <summary>
             Return number of package downloads remaining.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetDownloadName">
             <summary>
             Return name of current package download, or empty if no downloads.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.GetDownloadProgress">
             <summary>
             Return progress of current package download, or 1.0 if no downloads.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SendPackageToClient(Urho.IO.PackageFile)">
             <summary>
             Trigger client connection to download a package file from the server. Can be used to download additional resource packages when client is already joined in a scene. The package must have been added as a requirement to the scene the client is joined in, or else the eventual download will fail.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.ConfigureNetworkSimulator(System.Int32,System.Single)">
             <summary>
             Set network simulation parameters. Called by Network.
             </summary>
            </member>
        <member name="M:Urho.Network.Connection.SetPacketSizeLimit(System.Int32)">
             <summary>
             Buffered packet size limit, when reached, packet is sent out immediately
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.Scene">
             <summary>
             Return the scene used by this connection.
             
             Or
             Assign scene. On the server, this will cause the client to load it.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.Position">
             <summary>
             Return the observer position sent by the client for interest management.
             
             Or
             Set the observer position for interest management, to be sent to the server.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.Rotation">
             <summary>
             Return the observer rotation sent by the client for interest management.
             
             Or
             Set the observer rotation for interest management, to be sent to the server. Note: not used by the NetworkPriority component.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.ConnectPending">
             <summary>
             Return whether connection is pending.
             
             Or
             Set the connection pending status. Called by Network.
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.LogStatistics">
             <summary>
             Return whether to log data in/out statistics.
             
             Or
             Set whether to log data in/out statistics.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.TimeStamp">
             <summary>
             Return the controls timestamp, sent from client to server along each control update.
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.Client">
             <summary>
             Return whether is a client connection.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.Connected">
             <summary>
             Return whether is fully connected.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.SceneLoaded">
             <summary>
             Return whether the scene is loaded and ready to receive server updates.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.Address">
             <summary>
             Return remote address.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.Port">
             <summary>
             Return remote port.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.RoundTripTime">
             <summary>
             Return the connection's round trip time in milliseconds.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.LastHeardTime">
             <summary>
             Return the time since last received data from the remote host in milliseconds.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.BytesInPerSec">
             <summary>
             Return bytes received per second.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.BytesOutPerSec">
             <summary>
             Return bytes sent per second.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.PacketsInPerSec">
             <summary>
             Return packets received per second.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.PacketsOutPerSec">
             <summary>
             Return packets sent per second.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.NumDownloads">
             <summary>
             Return number of package downloads remaining.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.DownloadName">
             <summary>
             Return name of current package download, or empty if no downloads.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Connection.DownloadProgress">
             <summary>
             Return progress of current package download, or 1.0 if no downloads.
             
             </summary>
            </member>
        <member name="T:Urho.CoreAssets.Models.LinePrimitives">
             <summary>
             Line primitives. Could be very useful models for debug, user interface etc.
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.AmbientStartColor">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L10
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.AmbientEndColor">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L11
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.BillboardRot">
             <summary>
             Type: mat3, Defined in Uniforms.glsl:L12
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.CameraPos">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L13
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.NearClip">
             <summary>
             Type: float, Defined in Uniforms.glsl:L14
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.FarClip">
             <summary>
             Type: float, Defined in Uniforms.glsl:L15
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.DepthMode">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L16
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.FrustumSize">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L17
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.DeltaTime">
             <summary>
             Type: float, Defined in Uniforms.glsl:L18
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ElapsedTime">
             <summary>
             Type: float, Defined in Uniforms.glsl:L19
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.GBufferOffsets">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L20
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.LightPos">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L21
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.LightDir">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L22
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.NormalOffsetScale">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L23
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.Model">
             <summary>
             Type: mat4, Defined in Uniforms.glsl:L24
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.View">
             <summary>
             Type: mat4, Defined in Uniforms.glsl:L25
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ViewInv">
             <summary>
             Type: mat4, Defined in Uniforms.glsl:L26
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ViewProj">
             <summary>
             Type: mat4, Defined in Uniforms.glsl:L27
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.UOffset">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L28
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.VOffset">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L29
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.Zone">
             <summary>
             Type: mat4, Defined in Uniforms.glsl:L30
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ClipPlane">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L43
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.AmbientColor">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L54
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.CameraPosPS">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L55
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.DeltaTimePS">
             <summary>
             Type: float, Defined in Uniforms.glsl:L56
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.DepthReconstruct">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L57
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ElapsedTimePS">
             <summary>
             Type: float, Defined in Uniforms.glsl:L58
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.FogParams">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L59
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.FogColor">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L60
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.GBufferInvSize">
             <summary>
             Type: vec2, Defined in Uniforms.glsl:L61
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.LightColor">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L62
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.LightPosPS">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L63
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.LightDirPS">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L64
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.NormalOffsetScalePS">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L65
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.MatDiffColor">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L66
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.MatEmissiveColor">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L67
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.MatEnvMapColor">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L68
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.MatSpecColor">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L69
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.PBR.Roughness">
             <summary>
             Type: float, Defined in Uniforms.glsl:L71
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.PBR.Metallic">
             <summary>
             Type: float, Defined in Uniforms.glsl:L72
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.PBR.LightRad">
             <summary>
             Type: float, Defined in Uniforms.glsl:L73
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.PBR.LightLength">
             <summary>
             Type: float, Defined in Uniforms.glsl:L74
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ZoneMin">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L76
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ZoneMax">
             <summary>
             Type: vec3, Defined in Uniforms.glsl:L77
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.NearClipPS">
             <summary>
             Type: float, Defined in Uniforms.glsl:L78
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.FarClipPS">
             <summary>
             Type: float, Defined in Uniforms.glsl:L79
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ShadowCubeAdjust">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L80
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ShadowDepthFade">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L81
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ShadowIntensity">
             <summary>
             Type: vec2, Defined in Uniforms.glsl:L82
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ShadowMapInvSize">
             <summary>
             Type: vec2, Defined in Uniforms.glsl:L83
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.ShadowSplits">
             <summary>
             Type: vec4, Defined in Uniforms.glsl:L84
             </summary>
            </member>
        <member name="F:Urho.CoreAssets.ShaderParameters.VSMShadowParams">
             <summary>
             Type: vec2, Defined in Uniforms.glsl:L87
             </summary>
            </member>
        <member name="T:Urho.SQLite">
             <summary>
             % SQlite Database connection.
             </summary>
            </member>
        <member name="T:Urho.DbConnection">
             <summary>
             %Database connection.
             </summary>
             <summary>
             %Database connection.
             </summary>
            </member>
        <member name="M:Urho.DbConnection.Finalize">
             <summary>
             Finalize all prepared statements, close all BLOB handles, and finish all sqlite3_backup objects.
             </summary>
            </member>
        <member name="M:Urho.DbConnection.GetConnectionString">
             <summary>
             Return database connection string. The connection string for SQLite3 is using the URI format described in https://www.sqlite.org/uri.html, while the connection string for ODBC is using DSN format as per ODBC standard.
             </summary>
            </member>
        <member name="M:Urho.DbConnection.IsConnected">
             <summary>
             Return true when the connection object is connected to the associated database.
             </summary>
            </member>
        <member name="P:Urho.DbConnection.ConnectionString">
             <summary>
             Return database connection string. The connection string for SQLite3 is using the URI format described in https://www.sqlite.org/uri.html, while the connection string for ODBC is using DSN format as per ODBC standard.
             </summary>
            </member>
        <member name="P:Urho.DbConnection.Connected">
             <summary>
             Return true when the connection object is connected to the associated database.
             </summary>
            </member>
        <member name="F:Urho.Protocol.msg_identity">
             Client-&gt;server: send VariantMap of identity and authentication data.
            </member>
        <member name="F:Urho.Protocol.msg_controls">
             client-&gt;server: send controls (buttons and mouse movement).
            </member>
        <member name="F:Urho.Protocol.msg_sceneloaded">
             client-&gt;server: scene has been loaded and client is ready to proceed.
            </member>
        <member name="F:Urho.Protocol.msg_requestpackage">
             client-&gt;server: request a package file.
            </member>
        <member name="F:Urho.Protocol.msg_packagedata">
             server-&gt;client: package file data fragment.
            </member>
        <member name="F:Urho.Protocol.msg_loadscene">
             server-&gt;client: load new scene. in case of empty filename the client should just empty the scene.
            </member>
        <member name="F:Urho.Protocol.msg_scenechecksumerror">
             server-&gt;client: wrong scene checksum, can not participate.
            </member>
        <member name="F:Urho.Protocol.msg_createnode">
             server-&gt;client: create new node.
            </member>
        <member name="F:Urho.Protocol.msg_nodedeltaupdate">
             server-&gt;client: node delta update.
            </member>
        <member name="F:Urho.Protocol.msg_nodelatestdata">
             server-&gt;client: node latest data update.
            </member>
        <member name="F:Urho.Protocol.msg_removenode">
             server-&gt;client: remove node.
            </member>
        <member name="F:Urho.Protocol.msg_createcomponent">
             server-&gt;client: create new component.
            </member>
        <member name="F:Urho.Protocol.msg_componentdeltaupdate">
             server-&gt;client: component delta update.
            </member>
        <member name="F:Urho.Protocol.msg_componentlatestdata">
             server-&gt;client: component latest data update.
            </member>
        <member name="F:Urho.Protocol.msg_removecomponent">
             server-&gt;client: remove component.
            </member>
        <member name="F:Urho.Protocol.msg_remoteevent">
             client-&gt;server and server-&gt;client: remote event.
            </member>
        <member name="F:Urho.Protocol.msg_remotenodeevent">
             client-&gt;server and server-&gt;client: remote node event.
            </member>
        <member name="F:Urho.Protocol.msg_packageinfo">
             server-&gt;client: info about package.
            </member>
        <member name="F:Urho.Protocol.msg_packed_message">
             packet that includes all the above messages
            </member>
        <member name="F:Urho.Protocol.msg_user">
             used to define custom messages, usually of the form msg_user + x, where x is an integer value.
            </member>
        <member name="F:Urho.Protocol.controls_content_id">
             fixed content id for client controls update.
            </member>
        <member name="F:Urho.Protocol.package_fragment_size">
             package file fragment size.
            </member>
        <member name="T:Urho.IO.File">
             <summary>
             %File opened either through the filesystem or from within a package file.
             </summary>
            </member>
        <member name="M:Urho.IO.File.Read(System.IntPtr,System.UInt32)">
             <summary>
             Read bytes from the file. Return number of bytes actually read.
             </summary>
            </member>
        <member name="M:Urho.IO.File.Seek(System.UInt32)">
             <summary>
             Set position from the beginning of the file.
             </summary>
            </member>
        <member name="M:Urho.IO.File.Write(System.Void*,System.UInt32)">
             <summary>
             Write bytes to the file. Return number of bytes actually written.
             </summary>
            </member>
        <member name="M:Urho.IO.File.GetChecksum">
             <summary>
             Return a checksum of the file contents using the SDBM hash algorithm.
             </summary>
            </member>
        <member name="M:Urho.IO.File.Open(System.String,Urho.IO.FileMode)">
             <summary>
             Open a filesystem file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.IO.File.Open(Urho.IO.PackageFile,System.String)">
             <summary>
             Open from within a package file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.IO.File.Close">
             <summary>
             Close the file.
             </summary>
            </member>
        <member name="M:Urho.IO.File.Flush">
             <summary>
             Flush any buffered output to the file.
             </summary>
            </member>
        <member name="M:Urho.IO.File.GetMode">
             <summary>
             Return the open mode.
             
             </summary>
            </member>
        <member name="M:Urho.IO.File.IsOpen">
             <summary>
             Return whether is open.
             
             </summary>
            </member>
        <member name="M:Urho.IO.File.GetHandle">
             <summary>
             Return the file handle.
             </summary>
            </member>
        <member name="M:Urho.IO.File.IsPackaged">
             <summary>
             Return whether the file originates from a package.
             
             </summary>
            </member>
        <member name="P:Urho.IO.File.Checksum">
             <summary>
             Return a checksum of the file contents using the SDBM hash algorithm.
             </summary>
            </member>
        <member name="P:Urho.IO.File.Mode">
             <summary>
             Return the open mode.
             
             </summary>
            </member>
        <member name="P:Urho.IO.File.FileHandle">
             <summary>
             Return the file handle.
             </summary>
            </member>
        <member name="P:Urho.IO.File.Packaged">
             <summary>
             Return whether the file originates from a package.
             
             </summary>
            </member>
        <member name="T:Urho.Frustum">
             <summary>
             Convex constructed of 6 planes.
             </summary>
            </member>
        <member name="M:Urho.Frustum.Define(System.Single,System.Single,System.Single,System.Single,System.Single,Urho.Matrix3x4)">
             <summary>
             Define with projection parameters and a transform matrix.
             </summary>
            </member>
        <member name="M:Urho.Frustum.Define(Urho.Vector3,Urho.Vector3,Urho.Matrix3x4)">
             <summary>
             Define with near and far dimension vectors and a transform matrix.
             </summary>
            </member>
        <member name="M:Urho.Frustum.Define(Urho.BoundingBox,Urho.Matrix3x4)">
             <summary>
             Define with a bounding box and a transform matrix.
             </summary>
            </member>
        <member name="M:Urho.Frustum.Define(Urho.Matrix4)">
             <summary>
             Define from a projection or view-projection matrix.
             </summary>
            </member>
        <member name="M:Urho.Frustum.DefineOrtho(System.Single,System.Single,System.Single,System.Single,System.Single,Urho.Matrix3x4)">
             <summary>
             Define with orthographic projection parameters and a transform matrix.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Frustum.DefineSplit(Urho.Matrix4,System.Single,System.Single)-->
        <member name="M:Urho.Frustum.Transform(Urho.Matrix3)">
             <summary>
             Transform by a 3x3 matrix.
             </summary>
            </member>
        <member name="M:Urho.Frustum.Transform(Urho.Matrix3x4)">
             <summary>
             Transform by a 3x4 matrix.
             </summary>
            </member>
        <member name="M:Urho.Frustum.IsInside(Urho.Vector3)">
             <summary>
             Test if a point is inside or outside.
             </summary>
            </member>
        <member name="M:Urho.Frustum.IsInside(Urho.Sphere)">
             <summary>
             Test if a sphere is inside, outside or intersects.
             </summary>
            </member>
        <member name="M:Urho.Frustum.IsInsideFast(Urho.Sphere)">
             <summary>
             Test if a sphere if (partially) inside or outside.
             </summary>
            </member>
        <member name="M:Urho.Frustum.IsInside(Urho.BoundingBox)">
             <summary>
             Test if a bounding box is inside, outside or intersects.
             </summary>
            </member>
        <member name="M:Urho.Frustum.IsInsideFast(Urho.BoundingBox)">
             <summary>
             Test if a bounding box is (partially) inside or outside.
             </summary>
            </member>
        <member name="M:Urho.Frustum.Distance(Urho.Vector3)">
             <summary>
             Return distance of a point to the frustum, or 0 if inside.
             </summary>
            </member>
        <member name="M:Urho.Frustum.Transformed(Urho.Matrix3)">
             <summary>
             Return transformed by a 3x3 matrix.
             </summary>
            </member>
        <member name="M:Urho.Frustum.Transformed(Urho.Matrix3x4)">
             <summary>
             Return transformed by a 3x4 matrix.
             </summary>
            </member>
        <member name="M:Urho.Frustum.Projected(Urho.Matrix4)">
             <summary>
             Return projected by a 4x4 projection matrix.
             </summary>
            </member>
        <member name="M:Urho.Frustum.UpdatePlanes">
             <summary>
             Update the planes. Called internally.
             </summary>
            </member>
        <member name="T:Urho.GPUObject">
             <summary>
             Base class for GPU resources.
             </summary>
            </member>
        <member name="M:Urho.GPUObject.OnDeviceLost">
             <summary>
             Mark the GPU resource destroyed on graphics context destruction.
             </summary>
            </member>
        <member name="M:Urho.GPUObject.OnDeviceReset">
             <summary>
             Recreate the GPU resource and restore data if applicable.
             </summary>
            </member>
        <member name="M:Urho.GPUObject.Release">
             <summary>
             Unconditionally release the GPU resource.
             </summary>
            </member>
        <member name="M:Urho.GPUObject.ClearDataLost">
             <summary>
             Clear the data lost flag.
             </summary>
            </member>
        <member name="M:Urho.GPUObject.GetGraphics">
             <summary>
             Return the graphics subsystem associated with this GPU object.
             </summary>
            </member>
        <member name="M:Urho.GPUObject.GetGPUObject">
             <summary>
             Return the object pointer. Applicable only on Direct3D.
             </summary>
            </member>
        <member name="M:Urho.GPUObject.GetGPUObjectName">
             <summary>
             Return the object name. Applicable only on OpenGL.
             </summary>
            </member>
        <member name="M:Urho.GPUObject.IsDataLost">
             <summary>
             Return whether data is lost due to context loss.
             
             </summary>
            </member>
        <member name="M:Urho.GPUObject.HasPendingData">
             <summary>
             Return whether has pending data assigned while graphics context was lost.
             </summary>
            </member>
        <member name="P:Urho.GPUObject.Graphics">
             <summary>
             Return the graphics subsystem associated with this GPU object.
             </summary>
            </member>
        <member name="P:Urho.GPUObject.GPUObjectName">
             <summary>
             Return the object name. Applicable only on OpenGL.
             </summary>
            </member>
        <member name="P:Urho.GPUObject.DataLost">
             <summary>
             Return whether data is lost due to context loss.
             
             </summary>
            </member>
        <member name="T:Urho.Graphics">
             <summary>
             %Graphics subsystem. Manages the application window, rendering state and GPU resources.
             </summary>
            </member>
        <member name="P:Urho.Graphics.SdlWindow">
             <summary>
             Pointer to SDL window
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetExternalWindow(System.IntPtr)">
             <summary>
             Set external window handle. Only effective before setting the initial screen mode.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetWindowTitle(System.String)">
             <summary>
             Set window title.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetWindowIcon(Urho.Resources.Image)">
             <summary>
             Set window icon.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetWindowPosition(Urho.IntVector2)">
             <summary>
             Set window position. Sets initial position if window is not created yet.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetWindowPosition(System.Int32,System.Int32)">
             <summary>
             Set window position. Sets initial position if window is not created yet.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetScreenMode(System.Int32,System.Int32)">
             <summary>
             Set screen resolution only. Return true if successful.
             Don't use SetScreenMode if ToggleFullscreen is used directly or indirectly.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetMode(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
             <summary>
             Set default window modes. Deprecated. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetMode(System.Int32,System.Int32)">
             <summary>
             Set screen resolution only. Deprecated. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetSRGB(System.Boolean)">
             <summary>
             Set whether the main window uses sRGB conversion on write.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetDither(System.Boolean)">
             <summary>
             Set whether rendering output is dithered. Default true on OpenGL. No effect on Direct3D.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetFlushGPU(System.Boolean)">
             <summary>
             Set whether to flush the GPU command buffer to prevent multiple frames being queued and uneven frame timesteps. Default off, may decrease performance if enabled. Not currently implemented on OpenGL.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetOrientations(System.String)">
             <summary>
             Set allowed screen orientations as a space-separated list of "LandscapeLeft", "LandscapeRight", "Portrait" and "PortraitUpsideDown". Affects currently only iOS platform.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.ToggleFullscreen">
             <summary>
             Toggle between full screen and windowed mode. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Graphics.Close">
             <summary>
             Close the window.
             </summary>
            </member>
        <member name="M:Urho.Graphics.TakeScreenShot(Urho.Resources.Image)">
             <summary>
             Take a screenshot. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Graphics.BeginFrame">
             <summary>
             Begin frame rendering. Return true if device available and can render.
             </summary>
            </member>
        <member name="M:Urho.Graphics.EndFrame">
             <summary>
             End frame rendering and swap buffers.
             </summary>
            </member>
        <member name="M:Urho.Graphics.ResolveToTexture(Urho.Urho2D.Texture2D,Urho.IntRect)">
             <summary>
             Resolve multisampled backbuffer to a texture rendertarget. The texture's size should match the viewport size.
             </summary>
            </member>
        <member name="M:Urho.Graphics.ResolveToTexture(Urho.Urho2D.Texture2D)">
             <summary>
             Resolve a multisampled texture on itself.
             </summary>
            </member>
        <member name="M:Urho.Graphics.ResolveToTexture(Urho.TextureCube)">
             <summary>
             Resolve a multisampled cube texture on itself.
             </summary>
            </member>
        <member name="M:Urho.Graphics.Draw(Urho.PrimitiveType,System.UInt32,System.UInt32)">
             <summary>
             Draw non-indexed geometry.
             </summary>
            </member>
        <member name="M:Urho.Graphics.Draw(Urho.PrimitiveType,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
             <summary>
             Draw indexed geometry.
             </summary>
            </member>
        <member name="M:Urho.Graphics.Draw(Urho.PrimitiveType,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
             <summary>
             Draw indexed geometry with vertex index offset.
             </summary>
            </member>
        <member name="M:Urho.Graphics.DrawInstanced(Urho.PrimitiveType,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
             <summary>
             Draw indexed, instanced geometry. An instancing vertex buffer must be set.
             </summary>
            </member>
        <member name="M:Urho.Graphics.DrawInstanced(Urho.PrimitiveType,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
             <summary>
             Draw indexed, instanced geometry with vertex index offset.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetVertexBuffer(Urho.VertexBuffer)">
             <summary>
             Set vertex buffer.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetIndexBuffer(Urho.IndexBuffer)">
             <summary>
             Set index buffer.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaders(Urho.ShaderVariation,Urho.ShaderVariation)">
             <summary>
             Set shaders.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderParameter(Urho.StringHash,System.Single*,System.UInt32)">
             <summary>
             Set shader float constants.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderParameter(Urho.StringHash,System.Single)">
             <summary>
             Set shader float constant.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderParameter(Urho.StringHash,System.Int32)">
             <summary>
             Set shader integer constant.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderParameter(Urho.StringHash,System.Boolean)">
             <summary>
             Set shader boolean constant.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderParameter(Urho.StringHash,Urho.Color)">
             <summary>
             Set shader color constant.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderParameter(Urho.StringHash,Urho.Vector2)">
             <summary>
             Set shader 2D vector constant.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderParameter(Urho.StringHash,Urho.Matrix3)">
             <summary>
             Set shader 3x3 matrix constant.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderParameter(Urho.StringHash,Urho.Vector3)">
             <summary>
             Set shader 3D vector constant.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderParameter(Urho.StringHash,Urho.Matrix4)">
             <summary>
             Set shader 4x4 matrix constant.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderParameter(Urho.StringHash,Urho.Vector4)">
             <summary>
             Set shader 4D vector constant.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderParameter(Urho.StringHash,Urho.Matrix3x4)">
             <summary>
             Set shader 3x4 matrix constant.
             </summary>
            </member>
        <member name="M:Urho.Graphics.NeedParameterUpdate(Urho.ShaderParameterGroup,System.Void*)">
             <summary>
             Check whether a shader parameter group needs update. Does not actually check whether parameters exist in the shaders.
             </summary>
            </member>
        <member name="M:Urho.Graphics.HasShaderParameter(Urho.StringHash)">
             <summary>
             Check whether a shader parameter exists on the currently set shaders.
             </summary>
            </member>
        <member name="M:Urho.Graphics.HasTextureUnit(Urho.TextureUnit)">
             <summary>
             Check whether the current vertex or pixel shader uses a texture unit.
             </summary>
            </member>
        <member name="M:Urho.Graphics.ClearParameterSource(Urho.ShaderParameterGroup)">
             <summary>
             Clear remembered shader parameter source group.
             </summary>
            </member>
        <member name="M:Urho.Graphics.ClearParameterSources">
             <summary>
             Clear remembered shader parameter sources.
             </summary>
            </member>
        <member name="M:Urho.Graphics.ClearTransformSources">
             <summary>
             Clear remembered transform shader parameter sources.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetTexture(System.UInt32,Urho.Texture)">
             <summary>
             Set texture.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetTextureParametersDirty">
             <summary>
             Dirty texture parameters of all textures (when global settings change.)
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetDefaultTextureFilterMode(Urho.TextureFilterMode)">
             <summary>
             Set default texture filtering mode. Called by Renderer before rendering.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetDefaultTextureAnisotropy(System.UInt32)">
             <summary>
             Set default texture anisotropy level. Called by Renderer before rendering.
             </summary>
            </member>
        <member name="M:Urho.Graphics.ResetRenderTargets">
             <summary>
             Reset all rendertargets, depth-stencil surface and viewport.
             </summary>
            </member>
        <member name="M:Urho.Graphics.ResetRenderTarget(System.UInt32)">
             <summary>
             Reset specific rendertarget.
             </summary>
            </member>
        <member name="M:Urho.Graphics.ResetDepthStencil">
             <summary>
             Reset depth-stencil surface.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetRenderTarget(System.UInt32,Urho.RenderSurface)">
             <summary>
             Set rendertarget.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetRenderTarget(System.UInt32,Urho.Urho2D.Texture2D)">
             <summary>
             Set rendertarget.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetDepthStencil(Urho.RenderSurface)">
             <summary>
             Set depth-stencil surface.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetDepthStencil(Urho.Urho2D.Texture2D)">
             <summary>
             Set depth-stencil surface.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetViewport(Urho.IntRect)">
             <summary>
             Set viewport.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetBlendMode(Urho.BlendMode,System.Boolean)">
             <summary>
             Set blending and alpha-to-coverage modes. Alpha-to-coverage is not supported on Direct3D9.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetColorWrite(System.Boolean)">
             <summary>
             Set color write on/off.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetCullMode(Urho.CullMode)">
             <summary>
             Set hardware culling mode.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetDepthBias(System.Single,System.Single)">
             <summary>
             Set depth bias.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetDepthTest(Urho.CompareMode)">
             <summary>
             Set depth compare.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetDepthWrite(System.Boolean)">
             <summary>
             Set depth write on/off.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetFillMode(Urho.FillMode)">
             <summary>
             Set polygon fill mode.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetLineAntiAlias(System.Boolean)">
             <summary>
             Set line antialiasing on/off.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetScissorTest(System.Boolean,Urho.IntRect)">
             <summary>
             Set scissor test.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetStencilTest(System.Boolean,Urho.CompareMode,Urho.StencilOp,Urho.StencilOp,Urho.StencilOp,System.UInt32,System.UInt32,System.UInt32)">
             <summary>
             Set stencil test.
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetClipPlane(System.Boolean,Urho.Plane,Urho.Matrix3x4,Urho.Matrix4)">
             <summary>
             Set a custom clipping plane. The plane is specified in world space, but is dependent on the view and projection matrices.
             </summary>
            </member>
        <member name="M:Urho.Graphics.BeginDumpShaders(System.String)">
             <summary>
             Begin dumping shader variation names to an XML file for precaching.
             </summary>
            </member>
        <member name="M:Urho.Graphics.EndDumpShaders">
             <summary>
             End dumping shader variations names.
             </summary>
            </member>
        <member name="M:Urho.Graphics.PrecacheShaders(Urho.IO.File)">
             <summary>
             Precache shader variations from an XML file generated with BeginDumpShaders().
             </summary>
            </member>
        <member name="M:Urho.Graphics.PrecacheShaders(Urho.MemoryBuffer)">
             <summary>
             Precache shader variations from an XML file generated with BeginDumpShaders().
             </summary>
            </member>
        <member name="M:Urho.Graphics.SetShaderCacheDir(System.String)">
             <summary>
             Set shader cache directory, Direct3D only. This can either be an absolute path or a path within the resource system.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.IsInitialized">
             <summary>
             Return whether rendering initialized.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetImpl">
             <summary>
             Return graphics implementation, which holds the actual API-specific resources.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetExternalWindow">
             <summary>
             Return OS-specific external window handle. Null if not in use.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetWindowTitle">
             <summary>
             Return window title.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetApiName">
             <summary>
             Return graphics API name.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetWindowPosition">
             <summary>
             Return window position.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetWidth">
             <summary>
             Return window width in pixels.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetHeight">
             <summary>
             Return window height in pixels.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetMultiSample">
             <summary>
             Return multisample mode (1 = no multisampling).
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetSize">
             <summary>
             Return window size in pixels.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetFullscreen">
             <summary>
             Return whether window is fullscreen.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetBorderless">
             <summary>
             Return whether window is borderless.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetResizable">
             <summary>
             Return whether window is resizable.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetHighDPI">
             <summary>
             Return whether window is high DPI.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetVSync">
             <summary>
             Return whether vertical sync is on.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRefreshRate">
             <summary>
             Return refresh rate when using vsync in fullscreen
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetMonitor">
             <summary>
             Return the current monitor index. Effective on in fullscreen
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetTripleBuffer">
             <summary>
             Return whether triple buffering is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetSRGB">
             <summary>
             Return whether the main window is using sRGB conversion on write.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDither">
             <summary>
             Return whether rendering output is dithered.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetFlushGPU">
             <summary>
             Return whether the GPU command buffer is flushed each frame.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetOrientations">
             <summary>
             Return allowed screen orientations.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.IsDeviceLost">
             <summary>
             Return whether graphics context is lost and can not render or load GPU resources.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetNumPrimitives">
             <summary>
             Return number of primitives drawn this frame.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetNumBatches">
             <summary>
             Return number of batches drawn this frame.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDummyColorFormat">
             <summary>
             Return dummy color texture format for shadow maps. Is "NULL" (consume no video memory) if supported.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetShadowMapFormat">
             <summary>
             Return shadow map depth texture format, or 0 if not supported.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetHiresShadowMapFormat">
             <summary>
             Return 24-bit shadow map depth texture format, or 0 if not supported.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetInstancingSupport">
             <summary>
             Return whether hardware instancing is supported.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDrawBuffersSupport">
             <summary>
             Return whether multiple render targets are supported.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetLightPrepassSupport">
             <summary>
             Return whether light pre-pass rendering is supported.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDeferredSupport">
             <summary>
             Return whether deferred rendering is supported.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetHardwareShadowSupport">
             <summary>
             Return whether shadow map depth compare is done in hardware.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetReadableDepthSupport">
             <summary>
             Return whether a readable hardware depth format is available.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetSRGBSupport">
             <summary>
             Return whether sRGB conversion on texture sampling is supported.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetSRGBWriteSupport">
             <summary>
             Return whether sRGB conversion on rendertarget writing is supported.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.FindBestResolutionIndex(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             Return index of the best resolution for requested width, height and refresh rate.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDesktopResolution(System.Int32)">
             <summary>
             Return the desktop resolution.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetMonitorCount">
             <summary>
             Return the number of currently connected monitors.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetCurrentMonitor">
             <summary>
             Returns the index of the display containing the center of the window on success or a negative error code on failure.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetMaximized">
             <summary>
             Returns true if window is maximized or runs in full screen mode.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDisplayDPI(System.Int32)">
             <summary>
             Return display dpi information: (hdpi, vdpi, ddpi). On failure returns zero vector.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetFormat(Urho.Resources.CompressedFormat)">
             <summary>
             Return hardware format for a compressed image format, or 0 if unsupported.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetShader(Urho.ShaderType,System.String,System.String)">
             <summary>
             Return a shader variation by name and defines.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetVertexBuffer(System.UInt32)">
             <summary>
             Return current vertex buffer by index.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetIndexBuffer">
             <summary>
             Return current index buffer.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetVertexShader">
             <summary>
             Return current vertex shader.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetPixelShader">
             <summary>
             Return current pixel shader.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetTextureUnit(System.String)">
             <summary>
             Return texture unit index by name.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetTextureUnitName(Urho.TextureUnit)">
             <summary>
             Return texture unit name by index.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetTexture(System.UInt32)">
             <summary>
             Return current texture by texture unit index.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDefaultTextureFilterMode">
             <summary>
             Return default texture filtering mode.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDefaultTextureAnisotropy">
             <summary>
             Return default texture max. anisotropy level.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRenderTarget(System.UInt32)">
             <summary>
             Return current rendertarget by index.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDepthStencil">
             <summary>
             Return current depth-stencil surface.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetViewport">
             <summary>
             Return the viewport coordinates.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetBlendMode">
             <summary>
             Return blending mode.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetAlphaToCoverage">
             <summary>
             Return whether alpha-to-coverage is enabled.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetColorWrite">
             <summary>
             Return whether color write is enabled.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetCullMode">
             <summary>
             Return hardware culling mode.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDepthConstantBias">
             <summary>
             Return depth constant bias.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDepthSlopeScaledBias">
             <summary>
             Return depth slope scaled bias.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDepthTest">
             <summary>
             Return depth compare mode.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDepthWrite">
             <summary>
             Return whether depth write is enabled.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetFillMode">
             <summary>
             Return polygon fill mode.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetLineAntiAlias">
             <summary>
             Return whether line antialiasing is enabled.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetStencilTest">
             <summary>
             Return whether stencil test is enabled.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetScissorTest">
             <summary>
             Return whether scissor test is enabled.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetScissorRect">
             <summary>
             Return scissor rectangle coordinates.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetStencilTestMode">
             <summary>
             Return stencil compare mode.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetStencilPass">
             <summary>
             Return stencil operation to do if stencil test passes.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetStencilFail">
             <summary>
             Return stencil operation to do if stencil test fails.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetStencilZFail">
             <summary>
             Return stencil operation to do if depth compare fails.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetStencilRef">
             <summary>
             Return stencil reference value.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetStencilCompareMask">
             <summary>
             Return stencil compare bitmask.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetStencilWriteMask">
             <summary>
             Return stencil write bitmask.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetUseClipPlane">
             <summary>
             Return whether a custom clipping plane is in use.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetShaderCacheDir">
             <summary>
             Return shader cache directory, Direct3D only.
             
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRenderTargetDimensions">
             <summary>
             Return current rendertarget width and height.
             </summary>
            </member>
        <member name="M:Urho.Graphics.OnWindowResized">
             <summary>
             Window was resized through user interaction. Called by Input subsystem.
             </summary>
            </member>
        <member name="M:Urho.Graphics.OnWindowMoved">
             <summary>
             Window was moved through user interaction. Called by Input subsystem.
             </summary>
            </member>
        <member name="M:Urho.Graphics.Maximize">
             <summary>
             Maximize the window.
             </summary>
            </member>
        <member name="M:Urho.Graphics.Minimize">
             <summary>
             Minimize the window.
             </summary>
            </member>
        <member name="M:Urho.Graphics.Raise">
             <summary>
             Raises window if it was minimized.
             </summary>
            </member>
        <member name="M:Urho.Graphics.AddGPUObject(System.IntPtr)">
             <summary>
             Add a GPU object to keep track of. Called by GPUObject.
             </summary>
            </member>
        <member name="M:Urho.Graphics.RemoveGPUObject(System.IntPtr)">
             <summary>
             Remove a GPU object. Called by GPUObject.
             </summary>
            </member>
        <member name="M:Urho.Graphics.ReserveScratchBuffer(System.UInt32)">
             <summary>
             Reserve a CPU-side scratch buffer.
             </summary>
            </member>
        <member name="M:Urho.Graphics.FreeScratchBuffer(System.IntPtr)">
             <summary>
             Free a CPU-side scratch buffer.
             </summary>
            </member>
        <member name="M:Urho.Graphics.CleanupScratchBuffers">
             <summary>
             Clean up too large scratch buffers.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRendererName">
             <summary>
             Get Renderer name. Used on OpenGL
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetVersionString">
             <summary>
             Get Version string. Used on OpenGL
             </summary>
            </member>
        <member name="M:Urho.Graphics.glOESStandardDerivativesSupport">
             <summary>
             Return whether  the extention GL_OES_standard_derivatives is supported
             </summary>
            </member>
        <member name="M:Urho.Graphics.clipDistanceEXTSupport">
             <summary>
             Return whether GL_EXT_clip_cull_distance is supproted in shader
             </summary>
            </member>
        <member name="M:Urho.Graphics.clipDistanceAPPLESupport">
             <summary>
             Return whether GL_APPLE_clip_distance is supported
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetAlphaFormat">
             <summary>
             Return the API-specific alpha texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetLuminanceFormat">
             <summary>
             Return the API-specific luminance texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetLuminanceAlphaFormat">
             <summary>
             Return the API-specific luminance alpha texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRGBFormat">
             <summary>
             Return the API-specific RGB texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRGBAFormat">
             <summary>
             Return the API-specific RGBA texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRGBA16Format">
             <summary>
             Return the API-specific RGBA 16-bit texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRGBAFloat16Format">
             <summary>
             Return the API-specific RGBA 16-bit float texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRGBAFloat32Format">
             <summary>
             Return the API-specific RGBA 32-bit float texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRG16Format">
             <summary>
             Return the API-specific RG 16-bit texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRGFloat16Format">
             <summary>
             Return the API-specific RG 16-bit float texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetRGFloat32Format">
             <summary>
             Return the API-specific RG 32-bit float texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetFloat16Format">
             <summary>
             Return the API-specific single channel 16-bit float texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetFloat32Format">
             <summary>
             Return the API-specific single channel 32-bit float texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetLinearDepthFormat">
             <summary>
             Return the API-specific linear depth texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetDepthStencilFormat">
             <summary>
             Return the API-specific hardware depth-stencil texture format.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetReadableDepthFormat">
             <summary>
             Return the API-specific readable hardware depth format, or 0 if not supported.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetFormat(System.String)">
             <summary>
             Return the API-specific texture format from a textual description, for example "rgb".
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetPixelUVOffset">
             <summary>
             Return UV offset required for pixel perfect rendering.
             </summary>
            </member>
        <member name="M:Urho.Graphics.GetMaxBones">
             <summary>
             Return maximum number of supported bones for skinning.
             </summary>
            </member>
        <member name="P:Urho.Graphics.ExternalWindow">
             <summary>
             Return OS-specific external window handle. Null if not in use.
             Or
             Set external window handle. Only effective before setting the initial screen mode.
             </summary>
            </member>
        <member name="P:Urho.Graphics.WindowTitle">
             <summary>
             Return window title.
             
             Or
             Set window title.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.WindowPosition">
             <summary>
             Return window position.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.SRGB">
             <summary>
             Return whether the main window is using sRGB conversion on write.
             
             Or
             Set whether the main window uses sRGB conversion on write.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.Dither">
             <summary>
             Return whether rendering output is dithered.
             
             Or
             Set whether rendering output is dithered. Default true on OpenGL. No effect on Direct3D.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.FlushGPU">
             <summary>
             Return whether the GPU command buffer is flushed each frame.
             
             Or
             Set whether to flush the GPU command buffer to prevent multiple frames being queued and uneven frame timesteps. Default off, may decrease performance if enabled. Not currently implemented on OpenGL.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.Orientations">
             <summary>
             Return allowed screen orientations.
             
             Or
             Set allowed screen orientations as a space-separated list of "LandscapeLeft", "LandscapeRight", "Portrait" and "PortraitUpsideDown". Affects currently only iOS platform.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.IndexBuffer">
             <summary>
             Return current index buffer.
             Or
             Set index buffer.
             </summary>
            </member>
        <member name="P:Urho.Graphics.DefaultTextureFilterMode">
             <summary>
             Return default texture filtering mode.
             Or
             Set default texture filtering mode. Called by Renderer before rendering.
             </summary>
            </member>
        <member name="P:Urho.Graphics.DefaultTextureAnisotropy">
             <summary>
             Return default texture max. anisotropy level.
             Or
             Set default texture anisotropy level. Called by Renderer before rendering.
             </summary>
            </member>
        <member name="P:Urho.Graphics.DepthStencil">
             <summary>
             Return current depth-stencil surface.
             Or
             Set depth-stencil surface.
             </summary>
            </member>
        <member name="P:Urho.Graphics.Viewport">
             <summary>
             Return the viewport coordinates.
             </summary>
            </member>
        <member name="P:Urho.Graphics.ColorWrite">
             <summary>
             Return whether color write is enabled.
             Or
             Set color write on/off.
             </summary>
            </member>
        <member name="P:Urho.Graphics.CullMode">
             <summary>
             Return hardware culling mode.
             Or
             Set hardware culling mode.
             </summary>
            </member>
        <member name="P:Urho.Graphics.DepthTest">
             <summary>
             Return depth compare mode.
             Or
             Set depth compare.
             </summary>
            </member>
        <member name="P:Urho.Graphics.DepthWrite">
             <summary>
             Return whether depth write is enabled.
             Or
             Set depth write on/off.
             </summary>
            </member>
        <member name="P:Urho.Graphics.FillMode">
             <summary>
             Return polygon fill mode.
             Or
             Set polygon fill mode.
             </summary>
            </member>
        <member name="P:Urho.Graphics.LineAntiAlias">
             <summary>
             Return whether line antialiasing is enabled.
             Or
             Set line antialiasing on/off.
             </summary>
            </member>
        <member name="P:Urho.Graphics.ShaderCacheDir">
             <summary>
             Return shader cache directory, Direct3D only.
             
             Or
             Set shader cache directory, Direct3D only. This can either be an absolute path or a path within the resource system.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.Initialized">
             <summary>
             Return whether rendering initialized.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.Impl">
             <summary>
             Return graphics implementation, which holds the actual API-specific resources.
             </summary>
            </member>
        <member name="P:Urho.Graphics.ApiName">
             <summary>
             Return graphics API name.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.Width">
             <summary>
             Return window width in pixels.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.Height">
             <summary>
             Return window height in pixels.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.MultiSample">
             <summary>
             Return multisample mode (1 = no multisampling).
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.Size">
             <summary>
             Return window size in pixels.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.Fullscreen">
             <summary>
             Return whether window is fullscreen.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.Borderless">
             <summary>
             Return whether window is borderless.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.Resizable">
             <summary>
             Return whether window is resizable.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.HighDPI">
             <summary>
             Return whether window is high DPI.
             </summary>
            </member>
        <member name="P:Urho.Graphics.VSync">
             <summary>
             Return whether vertical sync is on.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.RefreshRate">
             <summary>
             Return refresh rate when using vsync in fullscreen
             </summary>
            </member>
        <member name="P:Urho.Graphics.Monitor">
             <summary>
             Return the current monitor index. Effective on in fullscreen
             </summary>
            </member>
        <member name="P:Urho.Graphics.TripleBuffer">
             <summary>
             Return whether triple buffering is enabled.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.DeviceLost">
             <summary>
             Return whether graphics context is lost and can not render or load GPU resources.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.NumPrimitives">
             <summary>
             Return number of primitives drawn this frame.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.NumBatches">
             <summary>
             Return number of batches drawn this frame.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.DummyColorFormat">
             <summary>
             Return dummy color texture format for shadow maps. Is "NULL" (consume no video memory) if supported.
             </summary>
            </member>
        <member name="P:Urho.Graphics.ShadowMapFormat">
             <summary>
             Return shadow map depth texture format, or 0 if not supported.
             </summary>
            </member>
        <member name="P:Urho.Graphics.HiresShadowMapFormat">
             <summary>
             Return 24-bit shadow map depth texture format, or 0 if not supported.
             </summary>
            </member>
        <member name="P:Urho.Graphics.InstancingSupport">
             <summary>
             Return whether hardware instancing is supported.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.DrawBuffersSupport">
             <summary>
             Return whether multiple render targets are supported.
             </summary>
            </member>
        <member name="P:Urho.Graphics.LightPrepassSupport">
             <summary>
             Return whether light pre-pass rendering is supported.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.DeferredSupport">
             <summary>
             Return whether deferred rendering is supported.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.HardwareShadowSupport">
             <summary>
             Return whether shadow map depth compare is done in hardware.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.ReadableDepthSupport">
             <summary>
             Return whether a readable hardware depth format is available.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.SRGBSupport">
             <summary>
             Return whether sRGB conversion on texture sampling is supported.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.SRGBWriteSupport">
             <summary>
             Return whether sRGB conversion on rendertarget writing is supported.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.MonitorCount">
             <summary>
             Return the number of currently connected monitors.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.CurrentMonitor">
             <summary>
             Returns the index of the display containing the center of the window on success or a negative error code on failure.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.Maximized">
             <summary>
             Returns true if window is maximized or runs in full screen mode.
             
             </summary>
            </member>
        <member name="P:Urho.Graphics.VertexShader">
             <summary>
             Return current vertex shader.
             </summary>
            </member>
        <member name="P:Urho.Graphics.PixelShader">
             <summary>
             Return current pixel shader.
             </summary>
            </member>
        <member name="P:Urho.Graphics.BlendMode">
             <summary>
             Return blending mode.
             </summary>
            </member>
        <member name="P:Urho.Graphics.AlphaToCoverage">
             <summary>
             Return whether alpha-to-coverage is enabled.
             </summary>
            </member>
        <member name="P:Urho.Graphics.DepthConstantBias">
             <summary>
             Return depth constant bias.
             </summary>
            </member>
        <member name="P:Urho.Graphics.DepthSlopeScaledBias">
             <summary>
             Return depth slope scaled bias.
             </summary>
            </member>
        <member name="P:Urho.Graphics.StencilTest">
             <summary>
             Return whether stencil test is enabled.
             </summary>
            </member>
        <member name="P:Urho.Graphics.ScissorTest">
             <summary>
             Return whether scissor test is enabled.
             </summary>
            </member>
        <member name="P:Urho.Graphics.ScissorRect">
             <summary>
             Return scissor rectangle coordinates.
             </summary>
            </member>
        <member name="P:Urho.Graphics.StencilTestMode">
             <summary>
             Return stencil compare mode.
             </summary>
            </member>
        <member name="P:Urho.Graphics.StencilPass">
             <summary>
             Return stencil operation to do if stencil test passes.
             </summary>
            </member>
        <member name="P:Urho.Graphics.StencilFail">
             <summary>
             Return stencil operation to do if stencil test fails.
             </summary>
            </member>
        <member name="P:Urho.Graphics.StencilZFail">
             <summary>
             Return stencil operation to do if depth compare fails.
             </summary>
            </member>
        <member name="P:Urho.Graphics.StencilRef">
             <summary>
             Return stencil reference value.
             </summary>
            </member>
        <member name="P:Urho.Graphics.StencilCompareMask">
             <summary>
             Return stencil compare bitmask.
             </summary>
            </member>
        <member name="P:Urho.Graphics.StencilWriteMask">
             <summary>
             Return stencil write bitmask.
             </summary>
            </member>
        <member name="P:Urho.Graphics.UseClipPlane">
             <summary>
             Return whether a custom clipping plane is in use.
             </summary>
            </member>
        <member name="P:Urho.Graphics.RenderTargetDimensions">
             <summary>
             Return current rendertarget width and height.
             </summary>
            </member>
        <member name="P:Urho.Graphics.RendererName">
             <summary>
             Get Renderer name. Used on OpenGL
             </summary>
            </member>
        <member name="P:Urho.Graphics.VersionString">
             <summary>
             Get Version string. Used on OpenGL
             </summary>
            </member>
        <member name="P:Urho.Graphics.AlphaFormat">
             <summary>
             Return the API-specific alpha texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.LuminanceFormat">
             <summary>
             Return the API-specific luminance texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.LuminanceAlphaFormat">
             <summary>
             Return the API-specific luminance alpha texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.RGBFormat">
             <summary>
             Return the API-specific RGB texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.RGBAFormat">
             <summary>
             Return the API-specific RGBA texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.RGBA16Format">
             <summary>
             Return the API-specific RGBA 16-bit texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.RGBAFloat16Format">
             <summary>
             Return the API-specific RGBA 16-bit float texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.RGBAFloat32Format">
             <summary>
             Return the API-specific RGBA 32-bit float texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.RG16Format">
             <summary>
             Return the API-specific RG 16-bit texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.RGFloat16Format">
             <summary>
             Return the API-specific RG 16-bit float texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.RGFloat32Format">
             <summary>
             Return the API-specific RG 32-bit float texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.Float16Format">
             <summary>
             Return the API-specific single channel 16-bit float texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.Float32Format">
             <summary>
             Return the API-specific single channel 32-bit float texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.LinearDepthFormat">
             <summary>
             Return the API-specific linear depth texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.DepthStencilFormat">
             <summary>
             Return the API-specific hardware depth-stencil texture format.
             </summary>
            </member>
        <member name="P:Urho.Graphics.ReadableDepthFormat">
             <summary>
             Return the API-specific readable hardware depth format, or 0 if not supported.
             </summary>
            </member>
        <member name="P:Urho.Graphics.PixelUVOffset">
             <summary>
             Return UV offset required for pixel perfect rendering.
             </summary>
            </member>
        <member name="P:Urho.Graphics.MaxBones">
             <summary>
             Return maximum number of supported bones for skinning.
             </summary>
            </member>
        <member name="T:Urho.Resources.Image">
             <summary>
             %Image resource.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.Save(Urho.IO.File)">
             <summary>
             Save the image to a stream. Regardless of original format, the image is saved as png. Compressed image data is not supported. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.Save(Urho.MemoryBuffer)">
             <summary>
             Save the image to a stream. Regardless of original format, the image is saved as png. Compressed image data is not supported. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SaveFile(System.String)">
             <summary>
             Save the image to a file. Format of the image is determined by file extension. JPG is saved with maximum quality.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SetSize(System.Int32,System.Int32,System.UInt32)">
             <summary>
             Set 2D size and number of color components. Old image data will be destroyed and new data is undefined. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SetSize(System.Int32,System.Int32,System.Int32,System.UInt32)">
             <summary>
             Set 3D size and number of color components. Old image data will be destroyed and new data is undefined. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SetData(System.Byte*)">
             <summary>
             Set new image data.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SetPixel(System.Int32,System.Int32,Urho.Color)">
             <summary>
             Set a 2D pixel.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SetPixel(System.Int32,System.Int32,System.Int32,Urho.Color)">
             <summary>
             Set a 3D pixel.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SetPixelInt(System.Int32,System.Int32,System.UInt32)">
             <summary>
             Set a 2D pixel with an integer color. R component is in the 8 lowest bits.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SetPixelInt(System.Int32,System.Int32,System.Int32,System.UInt32)">
             <summary>
             Set a 3D pixel with an integer color. R component is in the 8 lowest bits.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.LoadColorLUT(Urho.IO.File)">
             <summary>
             Load as color LUT. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.LoadColorLUT(Urho.MemoryBuffer)">
             <summary>
             Load as color LUT. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.FlipHorizontal">
             <summary>
             Flip image horizontally. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.FlipVertical">
             <summary>
             Flip image vertically. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.Resize(System.Int32,System.Int32)">
             <summary>
             Resize image by bilinear resampling. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.Clear(Urho.Color)">
             <summary>
             Clear the image with a color.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.ClearInt(System.UInt32)">
             <summary>
             Clear the image with an integer color. R component is in the 8 lowest bits.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SaveBMP(System.String)">
             <summary>
             Save in BMP format. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SavePNG(System.String)">
             <summary>
             Save in PNG format. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SaveTGA(System.String)">
             <summary>
             Save in TGA format. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SaveJPG(System.String,System.Int32)">
             <summary>
             Save in JPG format with specified quality. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SaveDDS(System.String)">
             <summary>
             Save in DDS format. Only uncompressed RGBA images are supported. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SaveWEBP(System.String,System.Single)">
             <summary>
             Save in WebP format with minimum (fastest) or specified compression. Return true if successful. Fails always if WebP support is not compiled in.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.IsCubemap">
             <summary>
             Whether this texture is detected as a cubemap, only relevant for DDS.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.IsArray">
             <summary>
             Whether this texture has been detected as a volume, only relevant for DDS.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.IsSRGB">
             <summary>
             Whether this texture is in sRGB, only relevant for DDS.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetPixel(System.Int32,System.Int32)">
             <summary>
             Return a 2D pixel color.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetPixel(System.Int32,System.Int32,System.Int32)">
             <summary>
             Return a 3D pixel color.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetPixelInt(System.Int32,System.Int32)">
             <summary>
             Return a 2D pixel integer color. R component is in the 8 lowest bits.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetPixelInt(System.Int32,System.Int32,System.Int32)">
             <summary>
             Return a 3D pixel integer color. R component is in the 8 lowest bits.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetPixelBilinear(System.Single,System.Single)">
             <summary>
             Return a bilinearly sampled 2D pixel color. X and Y have the range 0-1.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetPixelTrilinear(System.Single,System.Single,System.Single)">
             <summary>
             Return a trilinearly sampled 3D pixel color. X, Y and Z have the range 0-1.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetWidth">
             <summary>
             Return width.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetHeight">
             <summary>
             Return height.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetDepth">
             <summary>
             Return depth.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetComponents">
             <summary>
             Return number of color components.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetData">
             <summary>
             Return pixel data.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.IsCompressed">
             <summary>
             Return whether is compressed.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetCompressedFormat">
             <summary>
             Return compressed format.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetNumCompressedLevels">
             <summary>
             Return number of compressed mip levels. Returns 0 if the image is has not been loaded from a source file containing multiple mip levels.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetNextLevel">
             <summary>
             Return next mip level by bilinear filtering. Note that if the image is already 1x1x1, will keep returning an image of that size.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetNextSibling">
             <summary>
             Return the next sibling image of an array or cubemap.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.ConvertToRGBA">
             <summary>
             Return image converted to 4-component (RGBA) to circumvent modern rendering API's not supporting e.g. the luminance-alpha format.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetCompressedLevel(System.UInt32)">
             <summary>
             Return a compressed mip level.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetDecompressedImage">
             <summary>
             Return decompressed image data in RGBA format.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.GetSubimage(Urho.IntRect)">
             <summary>
             Return subimage from the image by the defined rect or null if failed. 3D images are not supported. You must free the subimage yourself.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.PrecalculateLevels">
             <summary>
             Precalculate the mip levels. Used by asynchronous texture loading.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.HasAlphaChannel">
             <summary>
             Whether this texture has an alpha channel.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.SetSubimage(Urho.Resources.Image,Urho.IntRect)">
             <summary>
             Copy contents of the image into the defined rect, scaling if necessary. This image should already be large enough to include the rect. Compressed and 3D images are not supported.
             </summary>
            </member>
        <member name="M:Urho.Resources.Image.CleanupLevels">
             <summary>
             Clean up the mip levels.
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.Data">
             <summary>
             Return pixel data.
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.Cubemap">
             <summary>
             Whether this texture is detected as a cubemap, only relevant for DDS.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.Array">
             <summary>
             Whether this texture has been detected as a volume, only relevant for DDS.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.SRGB">
             <summary>
             Whether this texture is in sRGB, only relevant for DDS.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.Width">
             <summary>
             Return width.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.Height">
             <summary>
             Return height.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.Depth">
             <summary>
             Return depth.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.Components">
             <summary>
             Return number of color components.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.Compressed">
             <summary>
             Return whether is compressed.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.CompressedFormat">
             <summary>
             Return compressed format.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.NumCompressedLevels">
             <summary>
             Return number of compressed mip levels. Returns 0 if the image is has not been loaded from a source file containing multiple mip levels.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.NextLevel">
             <summary>
             Return next mip level by bilinear filtering. Note that if the image is already 1x1x1, will keep returning an image of that size.
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.NextSibling">
             <summary>
             Return the next sibling image of an array or cubemap.
             </summary>
            </member>
        <member name="P:Urho.Resources.Image.DecompressedImage">
             <summary>
             Return decompressed image data in RGBA format.
             </summary>
            </member>
        <member name="T:Urho.IndexBuffer">
             <summary>
             Hardware index buffer.
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.OnDeviceLost">
             <summary>
             Mark the buffer destroyed on graphics context destruction. May be a no-op depending on the API.
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.Release">
             <summary>
             Release buffer.
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.SetShadowed(System.Boolean)">
             <summary>
             Enable shadowing in CPU memory. Shadowing is forced on if the graphics subsystem does not exist.
             
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.SetSize(System.UInt32,System.Boolean,System.Boolean)">
             <summary>
             Set size and vertex elements and dynamic mode. Previous data will be lost.
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.SetData(System.Void*)">
             <summary>
             Set all data in the buffer.
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.SetDataRange(System.Void*,System.UInt32,System.UInt32,System.Boolean)">
             <summary>
             Set a data range in the buffer. Optionally discard data outside the range.
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.Lock(System.UInt32,System.UInt32,System.Boolean)">
             <summary>
             Lock the buffer for write-only editing. Return data pointer if successful. Optionally discard data outside the range.
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.Unlock">
             <summary>
             Unlock the buffer and apply changes to the GPU buffer.
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.IsShadowed">
             <summary>
             Return whether CPU memory shadowing is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.IsDynamic">
             <summary>
             Return whether is dynamic.
             
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.IsLocked">
             <summary>
             Return whether is currently locked.
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.GetIndexCount">
             <summary>
             Return number of indices.
             
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.GetIndexSize">
             <summary>
             Return index size in bytes.
             
             </summary>
            </member>
        <member name="M:Urho.IndexBuffer.GetShadowData">
             <summary>
             Return CPU memory shadow data.
             </summary>
            </member>
        <member name="P:Urho.IndexBuffer.Shadowed">
             <summary>
             Return whether CPU memory shadowing is enabled.
             
             Or
             Enable shadowing in CPU memory. Shadowing is forced on if the graphics subsystem does not exist.
             
             </summary>
            </member>
        <member name="P:Urho.IndexBuffer.Dynamic">
             <summary>
             Return whether is dynamic.
             
             </summary>
            </member>
        <member name="P:Urho.IndexBuffer.Locked">
             <summary>
             Return whether is currently locked.
             </summary>
            </member>
        <member name="P:Urho.IndexBuffer.IndexCount">
             <summary>
             Return number of indices.
             
             </summary>
            </member>
        <member name="P:Urho.IndexBuffer.IndexSize">
             <summary>
             Return index size in bytes.
             
             </summary>
            </member>
        <member name="P:Urho.IndexBuffer.ShadowData">
             <summary>
             Return CPU memory shadow data.
             </summary>
            </member>
        <member name="T:Urho.Input">
             <summary>
             %Input subsystem. Converts operating system window messages to input state and events.
             </summary>
            </member>
        <member name="M:Urho.Input.Update">
             <summary>
             Poll for window messages. Called by HandleBeginFrame().
             </summary>
            </member>
        <member name="M:Urho.Input.SetToggleFullscreen(System.Boolean)">
             <summary>
             Set whether ALT-ENTER fullscreen toggle is enabled.
             </summary>
            </member>
        <member name="M:Urho.Input.SetMouseVisible(System.Boolean,System.Boolean)">
             <summary>
             Set whether the operating system mouse cursor is visible. When not visible (default), is kept centered to prevent leaving the window. Mouse visibility event can be suppressed-- this also recalls any unsuppressed SetMouseVisible which can be returned by ResetMouseVisible().
             </summary>
            </member>
        <member name="M:Urho.Input.ResetMouseVisible">
             <summary>
             Reset last mouse visibility that was not suppressed in SetMouseVisible.
             </summary>
            </member>
        <member name="M:Urho.Input.SetMouseGrabbed(System.Boolean,System.Boolean)">
             <summary>
             Set whether the mouse is currently being grabbed by an operation.
             </summary>
            </member>
        <member name="M:Urho.Input.ResetMouseGrabbed">
             <summary>
             Reset the mouse grabbed to the last unsuppressed SetMouseGrabbed call.
             </summary>
            </member>
        <member name="M:Urho.Input.SetMouseMode(Urho.MouseMode,System.Boolean)">
             <summary>
             Set the mouse mode.
             Set the mouse mode behaviour.
             MM_ABSOLUTE is the default behaviour, allowing the toggling of operating system cursor visibility and allowing the cursor to escape the window when visible.
             When the operating system cursor is invisible in absolute mouse mode, the mouse is confined to the window.
             If the operating system and UI cursors are both invisible, interaction with the Urho UI will be limited (eg: drag move / drag end events will not trigger).
             SetMouseMode(MM_ABSOLUTE) will call SetMouseGrabbed(false).
             MM_RELATIVE sets the operating system cursor to invisible and confines the cursor to the window.
             The operating system cursor cannot be set to be visible in this mode via SetMouseVisible(), however changes are tracked and will be restored when another mouse mode is set.
             When the virtual cursor is also invisible, UI interaction will still function as normal (eg: drag events will trigger).
             SetMouseMode(MM_RELATIVE) will call SetMouseGrabbed(true).
             MM_WRAP grabs the mouse from the operating system and confines the operating system cursor to the window, wrapping the cursor when it is near the edges.
             SetMouseMode(MM_WRAP) will call SetMouseGrabbed(true).
             MM_FREE does not grab/confine the mouse cursor even when it is hidden. This can be used for cases where the cursor should render using the operating system
             outside the window, and perform custom rendering (with SetMouseVisible(false)) inside.
             </summary>
            </member>
        <member name="M:Urho.Input.ResetMouseMode">
             <summary>
             Reset the last mouse mode that wasn't suppressed in SetMouseMode.
             </summary>
            </member>
        <member name="M:Urho.Input.AddScreenJoystick(Urho.Resources.XmlFile,Urho.Resources.XmlFile)">
             <summary>
             Add screen joystick.
             Return the joystick instance ID when successful or negative on error.
             If layout file is not given, use the default screen joystick layout.
             If style file is not given, use the default style file from root UI element.
             This method should only be called in main thread.
             </summary>
            </member>
        <member name="M:Urho.Input.RemoveScreenJoystick(System.Int32)">
             <summary>
             Remove screen joystick by instance ID.
             Return true if successful.
             This method should only be called in main thread.
             </summary>
            </member>
        <member name="M:Urho.Input.SetScreenJoystickVisible(System.Int32,System.Boolean)">
             <summary>
             Set whether the virtual joystick is visible.
             </summary>
            </member>
        <member name="M:Urho.Input.SetScreenKeyboardVisible(System.Boolean)">
             <summary>
             Show or hide on-screen keyboard on platforms that support it. When shown, keypresses from it are delivered as key events.
             </summary>
            </member>
        <member name="M:Urho.Input.SetTouchEmulation(System.Boolean)">
             <summary>
             Set touch emulation by mouse. Only available on desktop platforms. When enabled, actual mouse events are no longer sent and the mouse cursor is forced visible.
             </summary>
            </member>
        <member name="M:Urho.Input.RecordGesture">
             <summary>
             Begin recording a touch gesture. Return true if successful. The E_GESTURERECORDED event (which contains the ID for the new gesture) will be sent when recording finishes.
             </summary>
            </member>
        <member name="M:Urho.Input.SaveGestures(Urho.IO.File)">
             <summary>
             Save all in-memory touch gestures. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Input.SaveGestures(Urho.MemoryBuffer)">
             <summary>
             Save all in-memory touch gestures. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Input.SaveGesture(Urho.IO.File,System.UInt32)">
             <summary>
             Save a specific in-memory touch gesture to a file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Input.SaveGesture(Urho.MemoryBuffer,System.UInt32)">
             <summary>
             Save a specific in-memory touch gesture to a file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Input.LoadGestures(Urho.IO.File)">
             <summary>
             Load touch gestures from a file. Return number of loaded gestures, or 0 on failure.
             </summary>
            </member>
        <member name="M:Urho.Input.LoadGestures(Urho.MemoryBuffer)">
             <summary>
             Load touch gestures from a file. Return number of loaded gestures, or 0 on failure.
             </summary>
            </member>
        <member name="M:Urho.Input.RemoveGesture(System.UInt32)">
             <summary>
             Remove an in-memory gesture by ID. Return true if was found.
             </summary>
            </member>
        <member name="M:Urho.Input.RemoveAllGestures">
             <summary>
             Remove all in-memory gestures.
             </summary>
            </member>
        <member name="M:Urho.Input.SetMousePosition(Urho.IntVector2)">
             <summary>
             Set the mouse cursor position. Uses the backbuffer (Graphics width/height) coordinates.
             </summary>
            </member>
        <member name="M:Urho.Input.CenterMousePosition">
             <summary>
             Center the mouse position.
             </summary>
            </member>
        <member name="M:Urho.Input.GetKeyFromName(System.String)">
             <summary>
             Return keycode from key name.
             </summary>
            </member>
        <member name="M:Urho.Input.GetKeyFromScancode(Urho.Scancode)">
             <summary>
             Return keycode from scancode.
             </summary>
            </member>
        <member name="M:Urho.Input.GetKeyName(Urho.Key)">
             <summary>
             Return name of key from keycode.
             </summary>
            </member>
        <member name="M:Urho.Input.GetScancodeFromKey(Urho.Key)">
             <summary>
             Return scancode from keycode.
             </summary>
            </member>
        <member name="M:Urho.Input.GetScancodeFromName(System.String)">
             <summary>
             Return scancode from key name.
             </summary>
            </member>
        <member name="M:Urho.Input.GetScancodeName(Urho.Scancode)">
             <summary>
             Return name of key from scancode.
             </summary>
            </member>
        <member name="M:Urho.Input.GetKeyDown(Urho.Key)">
             <summary>
             Check if a key is held down.
             </summary>
            </member>
        <member name="M:Urho.Input.GetKeyPress(Urho.Key)">
             <summary>
             Check if a key has been pressed on this frame.
             </summary>
            </member>
        <member name="M:Urho.Input.GetScancodeDown(Urho.Scancode)">
             <summary>
             Check if a key is held down by scancode.
             </summary>
            </member>
        <member name="M:Urho.Input.GetScancodePress(Urho.Scancode)">
             <summary>
             Check if a key has been pressed on this frame by scancode.
             </summary>
            </member>
        <member name="M:Urho.Input.GetQualifierDown(Urho.Qualifier)">
             <summary>
             Check if a qualifier key is held down.
             </summary>
            </member>
        <member name="M:Urho.Input.GetQualifierPress(Urho.Qualifier)">
             <summary>
             Check if a qualifier key has been pressed on this frame.
             </summary>
            </member>
        <member name="M:Urho.Input.GetMousePosition">
             <summary>
             Return mouse position within window. Should only be used with a visible mouse cursor. Uses the backbuffer (Graphics width/height) coordinates.
             </summary>
            </member>
        <member name="M:Urho.Input.GetMouseMove">
             <summary>
             Return mouse movement since last frame.
             </summary>
            </member>
        <member name="M:Urho.Input.GetMouseMoveX">
             <summary>
             Return horizontal mouse movement since last frame.
             </summary>
            </member>
        <member name="M:Urho.Input.GetMouseMoveY">
             <summary>
             Return vertical mouse movement since last frame.
             </summary>
            </member>
        <member name="M:Urho.Input.GetMouseMoveWheel">
             <summary>
             Return mouse wheel movement since last frame.
             </summary>
            </member>
        <member name="M:Urho.Input.GetInputScale">
             <summary>
             Return input coordinate scaling. Should return non-unity on High DPI display.
             </summary>
            </member>
        <member name="M:Urho.Input.GetNumTouches">
             <summary>
             Return number of active finger touches.
             </summary>
            </member>
        <member name="M:Urho.Input.GetTouch(System.UInt32)">
             <summary>
             Return active finger touch by index.
             </summary>
            </member>
        <member name="M:Urho.Input.GetNumJoysticks">
             <summary>
             Return number of connected joysticks.
             </summary>
            </member>
        <member name="M:Urho.Input.Input_GetJoystickByIndex(System.IntPtr,System.UInt32)">
             <summary>
             Return joystick state by ID, or null if does not exist.
             </summary>
            </member>
        <member name="M:Urho.Input.GetJoystickByIndex(System.UInt32)">
             <summary>
             Return joystick state by index, or null if does not exist. 0 = first connected joystick.
             </summary>
            </member>
        <member name="M:Urho.Input.GetJoystickByName(System.String)">
             <summary>
             Return joystick state by name, or null if does not exist.
             </summary>
            </member>
        <member name="M:Urho.Input.GetToggleFullscreen">
             <summary>
             Return whether fullscreen toggle is enabled.
             </summary>
            </member>
        <member name="M:Urho.Input.IsScreenJoystickVisible(System.Int32)">
             <summary>
             Return whether a virtual joystick is visible.
             </summary>
            </member>
        <member name="M:Urho.Input.GetScreenKeyboardSupport">
             <summary>
             Return whether on-screen keyboard is supported.
             </summary>
            </member>
        <member name="M:Urho.Input.IsScreenKeyboardVisible">
             <summary>
             Return whether on-screen keyboard is being shown.
             </summary>
            </member>
        <member name="M:Urho.Input.GetTouchEmulation">
             <summary>
             Return whether touch emulation is enabled.
             </summary>
            </member>
        <member name="M:Urho.Input.IsMouseVisible">
             <summary>
             Return whether the operating system mouse cursor is visible.
             </summary>
            </member>
        <member name="M:Urho.Input.IsMouseGrabbed">
             <summary>
             Return whether the mouse is currently being grabbed by an operation.
             </summary>
            </member>
        <member name="M:Urho.Input.IsMouseLocked">
             <summary>
             Return whether the mouse is locked to the window.
             </summary>
            </member>
        <member name="M:Urho.Input.GetMouseMode">
             <summary>
             Return the mouse mode.
             </summary>
            </member>
        <member name="M:Urho.Input.HasFocus">
             <summary>
             Return whether application window has input focus.
             </summary>
            </member>
        <member name="M:Urho.Input.IsMinimized">
             <summary>
             Return whether application window is minimized.
             </summary>
            </member>
        <member name="P:Urho.Input.ToggleFullscreen">
             <summary>
             Return whether fullscreen toggle is enabled.
             Or
             Set whether ALT-ENTER fullscreen toggle is enabled.
             </summary>
            </member>
        <member name="P:Urho.Input.ScreenKeyboardVisible">
             <summary>
             Return whether on-screen keyboard is being shown.
             Or
             Show or hide on-screen keyboard on platforms that support it. When shown, keypresses from it are delivered as key events.
             </summary>
            </member>
        <member name="P:Urho.Input.TouchEmulation">
             <summary>
             Return whether touch emulation is enabled.
             Or
             Set touch emulation by mouse. Only available on desktop platforms. When enabled, actual mouse events are no longer sent and the mouse cursor is forced visible.
             </summary>
            </member>
        <member name="P:Urho.Input.MousePosition">
             <summary>
             Return mouse position within window. Should only be used with a visible mouse cursor. Uses the backbuffer (Graphics width/height) coordinates.
             </summary>
            </member>
        <member name="P:Urho.Input.MouseMove">
             <summary>
             Return mouse movement since last frame.
             </summary>
            </member>
        <member name="P:Urho.Input.MouseMoveX">
             <summary>
             Return horizontal mouse movement since last frame.
             </summary>
            </member>
        <member name="P:Urho.Input.MouseMoveY">
             <summary>
             Return vertical mouse movement since last frame.
             </summary>
            </member>
        <member name="P:Urho.Input.MouseMoveWheel">
             <summary>
             Return mouse wheel movement since last frame.
             </summary>
            </member>
        <member name="P:Urho.Input.InputScale">
             <summary>
             Return input coordinate scaling. Should return non-unity on High DPI display.
             </summary>
            </member>
        <member name="P:Urho.Input.NumTouches">
             <summary>
             Return number of active finger touches.
             </summary>
            </member>
        <member name="P:Urho.Input.NumJoysticks">
             <summary>
             Return number of connected joysticks.
             </summary>
            </member>
        <member name="P:Urho.Input.ScreenKeyboardSupport">
             <summary>
             Return whether on-screen keyboard is supported.
             </summary>
            </member>
        <member name="P:Urho.Input.MouseVisible">
             <summary>
             Return whether the operating system mouse cursor is visible.
             </summary>
            </member>
        <member name="P:Urho.Input.MouseGrabbed">
             <summary>
             Return whether the mouse is currently being grabbed by an operation.
             </summary>
            </member>
        <member name="P:Urho.Input.MouseLocked">
             <summary>
             Return whether the mouse is locked to the window.
             </summary>
            </member>
        <member name="P:Urho.Input.MouseMode">
             <summary>
             Return the mouse mode.
             </summary>
            </member>
        <member name="P:Urho.Input.Minimized">
             <summary>
             Return whether application window is minimized.
             </summary>
            </member>
        <member name="M:Urho.Input.GetMouseButtonDown(Urho.MouseButton)">
             <summary>
             Check if a mouse button is held down.
             </summary>
            </member>
        <member name="M:Urho.Input.GetMouseButtonPress(Urho.MouseButton)">
             <summary>
             Check if a mouse button has been pressed on this frame.
             </summary>
            </member>
        <member name="T:Urho.KinematicCharacterController">
             <summary>
             Construct.
             </summary>
             <summary>
             Construct.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetTransform(Urho.Vector3@,Urho.Quaternion@)">
             <summary>
             Set character position and rotation in world space as an atomic operation.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.RegisterObject(Urho.Context)">
             <summary>
             Register object factory and attributes.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.ApplyAttributes">
             <summary>
             Perform post-load after deserialization. Acquire the components from the scene nodes.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetPosition">
             <summary>
             Return character position in world space.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetRotation">
             <summary>
             Return character rotation in world space.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetTransform(Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set character position and rotation in world space as an atomic operation.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetCollisionLayer(System.UInt32)">
             <summary>
             Set collision layer.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetCollisionLayer">
             <summary>
             Return collision layer.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetCollisionMask(System.UInt32)">
             <summary>
             Set collision mask.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetCollisionMask">
             <summary>
             Return collision mask.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetCollisionLayerAndMask(System.UInt32,System.UInt32)">
             <summary>
             Set collision group and mask.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetGravity(Urho.Vector3)">
             <summary>
             Set gravity.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetGravity">
             <summary>
             Get gravity.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetLinearDamping(System.Single)">
             <summary>
             Set linear velocity damping factor.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetLinearDamping">
             <summary>
             Return linear velocity damping factor.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetAngularDamping(System.Single)">
             <summary>
             Set angular velocity damping factor.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetAngularDamping">
             <summary>
             Return linear velocity damping factor.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetStepHeight(System.Single)">
             <summary>
             Set step height.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetStepHeight">
             <summary>
             Return step height.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetMaxJumpHeight(System.Single)">
             <summary>
             Set max jump height.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetMaxJumpHeight">
             <summary>
             Return max jump height.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetFallSpeed(System.Single)">
             <summary>
             Set fall speed (terminal velocity).
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetFallSpeed">
             <summary>
             Return fall speed (terminal velocity).
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetJumpSpeed(System.Single)">
             <summary>
             Set jump speed.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetJumpSpeed">
             <summary>
             Return jump speed.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetMaxSlope(System.Single)">
             <summary>
             Set max slope angle in degrees.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetMaxSlope">
             <summary>
             Return max slope angle in degrees.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetWalkDirection(Urho.Vector3)">
             <summary>
             Set walk direction. This is neither a direction nor a velocity, but the amount to increment the position each simulation iteration, regardless of dt.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.OnGround">
             <summary>
             Check if character in on the ground.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.Jump(Urho.Vector3)">
             <summary>
             Jump.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.ApplyImpulse(Urho.Vector3)">
             <summary>
             ApplyImpulse is same as Jump
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.CanJump">
             <summary>
             Check if character can jump.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetAngularVelocity(Urho.Vector3)">
             <summary>
             Set angular velocity.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetAngularVelocity">
             <summary>
             Return angular velocity.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.SetLinearVelocity(Urho.Vector3)">
             <summary>
             Set linear velocity.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.GetLinearVelocity">
             <summary>
             Return linear velocity.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.Warp(Urho.Vector3)">
             <summary>
             Teleport character into new position.
             </summary>
            </member>
        <member name="M:Urho.KinematicCharacterController.DrawDebugGeometry">
             <summary>
             Draw debug geometry.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.Position">
             <summary>
             Return character position in world space.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.Rotation">
             <summary>
             Return character rotation in world space.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.CollisionLayer">
             <summary>
             Return collision layer.
             Or
             Set collision layer.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.CollisionMask">
             <summary>
             Return collision mask.
             Or
             Set collision mask.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.Gravity">
             <summary>
             Get gravity.
             Or
             Set gravity.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.LinearDamping">
             <summary>
             Return linear velocity damping factor.
             Or
             Set linear velocity damping factor.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.AngularDamping">
             <summary>
             Return linear velocity damping factor.
             Or
             Set angular velocity damping factor.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.StepHeight">
             <summary>
             Return step height.
             Or
             Set step height.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.MaxJumpHeight">
             <summary>
             Return max jump height.
             Or
             Set max jump height.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.FallSpeed">
             <summary>
             Return fall speed (terminal velocity).
             Or
             Set fall speed (terminal velocity).
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.JumpSpeed">
             <summary>
             Return jump speed.
             Or
             Set jump speed.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.MaxSlope">
             <summary>
             Return max slope angle in degrees.
             Or
             Set max slope angle in degrees.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.AngularVelocity">
             <summary>
             Return angular velocity.
             </summary>
            </member>
        <member name="P:Urho.KinematicCharacterController.LinearVelocity">
             <summary>
             Return linear velocity.
             </summary>
            </member>
        <member name="T:Urho.IO.Log">
             <summary>
             Logging subsystem.
             </summary>
            </member>
        <member name="M:Urho.IO.Log.Open(System.String)">
             <summary>
             Open the log file.
             </summary>
            </member>
        <member name="M:Urho.IO.Log.Close">
             <summary>
             Close the log file.
             </summary>
            </member>
        <member name="M:Urho.IO.Log.SetLevel(System.Int32)">
             <summary>
             Set logging level.
             
             </summary>
            </member>
        <member name="M:Urho.IO.Log.SetTimeStamp(System.Boolean)">
             <summary>
             Set whether to timestamp log messages.
             
             </summary>
            </member>
        <member name="M:Urho.IO.Log.SetQuiet(System.Boolean)">
             <summary>
             Set quiet mode ie. only print error entries to standard error stream (which is normally redirected to console also). Output to log file is not affected by this mode.
             
             </summary>
            </member>
        <member name="M:Urho.IO.Log.GetLevel">
             <summary>
             Return logging level.
             
             </summary>
            </member>
        <member name="M:Urho.IO.Log.GetTimeStamp">
             <summary>
             Return whether log messages are timestamped.
             
             </summary>
            </member>
        <member name="M:Urho.IO.Log.GetLastMessage">
             <summary>
             Return last log message.
             
             </summary>
            </member>
        <member name="M:Urho.IO.Log.IsQuiet">
             <summary>
             Return whether log is in quiet mode (only errors printed to standard error stream).
             
             </summary>
            </member>
        <member name="M:Urho.IO.Log.Write(Urho.LogLevel,System.String)">
             <summary>
             Write to the log. If logging level is higher than the level of the message, the message is ignored.
             
             </summary>
            </member>
        <member name="M:Urho.IO.Log.WriteRaw(System.String,System.Boolean)">
             <summary>
             Write raw output to the log.
             </summary>
            </member>
        <member name="P:Urho.IO.Log.Level">
             <summary>
             Return logging level.
             
             Or
             Set logging level.
             
             </summary>
            </member>
        <member name="P:Urho.IO.Log.TimeStamp">
             <summary>
             Return whether log messages are timestamped.
             
             Or
             Set whether to timestamp log messages.
             
             </summary>
            </member>
        <member name="P:Urho.IO.Log.Quiet">
             <summary>
             Return whether log is in quiet mode (only errors printed to standard error stream).
             
             Or
             Set quiet mode ie. only print error entries to standard error stream (which is normally redirected to console also). Output to log file is not affected by this mode.
             
             </summary>
            </member>
        <member name="P:Urho.IO.Log.LastMessage">
             <summary>
             Return last log message.
             
             </summary>
            </member>
        <member name="T:Urho.LogicComponent">
             <summary>
             Helper base class for user-defined game logic components that hooks up to update events and forwards them to virtual functions similar to ScriptInstance class.
             </summary>
             <summary>
             Helper base class for user-defined game logic components that hooks up to update events and forwards them to virtual functions similar to ScriptInstance class.
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.OnUpdate(System.Single)">
             <summary>
             Make sure you set ReceiveSceneUpdates property to true in order to receive Update events (this porperty is true by default)
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.OnStart">
             <summary>
             Called before the first update. At this point all other components of the node should exist.
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.OnFixedUpdate(Urho.Physics.PhysicsPreStepEventArgs)">
             <summary>
             Called on physics post-update
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.OnFixedPostUpdate(Urho.Physics.PhysicsPostStepEventArgs)">
             <summary>
             Called on physics update
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.OnPostUpdate(Urho.ScenePostUpdateEventArgs)">
             <summary>
             Called on scene post-update,
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change. Changes update event subscription.
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.Start">
             <summary>
             Called when the component is added to a scene node. Other components may not yet exist.
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.DelayedStart">
             <summary>
             Called before the first update. At this point all other components of the node should exist. Will also be called if update events are not wanted; in that case the event is immediately unsubscribed afterward.
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.Stop">
             <summary>
             Called when the component is detached from a scene node, usually on destruction. Note that you will no longer have access to the node and scene at that point.
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.Update(System.Single)">
             <summary>
             Called on scene update, variable timestep.
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.PostUpdate(System.Single)">
             <summary>
             Called on scene post-update, variable timestep.
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.FixedUpdate(System.Single)">
             <summary>
             Called on physics update, fixed timestep.
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.FixedPostUpdate(System.Single)">
             <summary>
             Called on physics post-update, fixed timestep.
             </summary>
            </member>
        <member name="M:Urho.LogicComponent.IsDelayedStartCalled">
             <summary>
             Return whether the DelayedStart() function has been called.
             </summary>
            </member>
        <member name="P:Urho.LogicComponent.DelayedStartCalled">
             <summary>
             Return whether the DelayedStart() function has been called.
             </summary>
            </member>
        <member name="T:Urho.Material">
             <summary>
             Describes how to render 3D geometries.
             </summary>
            </member>
        <member name="M:Urho.Material.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Material.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Material.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Material.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Material.Save(Urho.IO.File)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Material.Save(Urho.MemoryBuffer)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Material.Load(Urho.Resources.XmlElement)">
             <summary>
             Load from an XML element. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Material.Save(Urho.Resources.XmlElement)">
             <summary>
             Save to an XML element. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Material.SetNumTechniques(System.UInt32)">
             <summary>
             Set number of techniques.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetTechnique(System.UInt32,Urho.Technique,Urho.MaterialQuality,System.Single)">
             <summary>
             Set technique.
             </summary>
            </member>
        <member name="M:Urho.Material.SetVertexShaderDefines(System.String)">
             <summary>
             Set additional vertex shader defines. Separate multiple defines with spaces. Setting defines at the material level causes technique(s) to be cloned as necessary.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetPixelShaderDefines(System.String)">
             <summary>
             Set additional pixel shader defines. Separate multiple defines with spaces. Setting defines at the material level causes technique(s) to be cloned as necessary.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,Urho.Vector3)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,Urho.IntRect)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,Urho.Color)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,Urho.Vector2)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,Urho.Vector4)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,Urho.IntVector2)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,Urho.Quaternion)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,Urho.Matrix4)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,Urho.Matrix3)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,Urho.Matrix3x4)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,System.Int32)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,System.Single)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,System.String)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameter(System.String,System.Boolean)">
             <summary>
             Set shader parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameterAnimation(System.String,Urho.ValueAnimation,Urho.WrapMode,System.Single)">
             <summary>
             Set shader parameter animation.
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameterAnimationWrapMode(System.String,Urho.WrapMode)">
             <summary>
             Set shader parameter animation wrap mode.
             </summary>
            </member>
        <member name="M:Urho.Material.SetShaderParameterAnimationSpeed(System.String,System.Single)">
             <summary>
             Set shader parameter animation speed.
             </summary>
            </member>
        <member name="M:Urho.Material.SetTexture(Urho.TextureUnit,Urho.Texture)">
             <summary>
             Set texture.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetUVTransform(Urho.Vector2,System.Single,Urho.Vector2)">
             <summary>
             Set texture coordinate transform.
             </summary>
            </member>
        <member name="M:Urho.Material.SetUVTransform(Urho.Vector2,System.Single,System.Single)">
             <summary>
             Set texture coordinate transform.
             </summary>
            </member>
        <member name="M:Urho.Material.SetCullMode(Urho.CullMode)">
             <summary>
             Set culling mode.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetShadowCullMode(Urho.CullMode)">
             <summary>
             Set culling mode for shadows.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetFillMode(Urho.FillMode)">
             <summary>
             Set polygon fill mode. Interacts with the camera's fill mode setting so that the "least filled" mode will be used.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetDepthBias(Urho.BiasParameters)">
             <summary>
             Set depth bias parameters for depth write and compare. Note that the normal offset parameter is not used and will not be saved, as it affects only shadow map sampling during light rendering.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetAlphaToCoverage(System.Boolean)">
             <summary>
             Set alpha-to-coverage mode on all passes.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetLineAntiAlias(System.Boolean)">
             <summary>
             Set line antialiasing on/off. Has effect only on models that consist of line lists.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetRenderOrder(System.Byte)">
             <summary>
             Set 8-bit render order within pass. Default 128. Lower values will render earlier and higher values later, taking precedence over e.g. state and distance sorting.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetOcclusion(System.Boolean)">
             <summary>
             Set whether to use in occlusion rendering. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.Material.SetScene(Urho.Scene)">
             <summary>
             Associate the material with a scene to ensure that shader parameter animation happens in sync with scene update, respecting the scene time scale. If no scene is set, the global update events will be used.
             
             </summary>
            </member>
        <member name="M:Urho.Material.RemoveShaderParameter(System.String)">
             <summary>
             Remove shader parameter.
             </summary>
            </member>
        <member name="M:Urho.Material.ReleaseShaders">
             <summary>
             Reset all shader pointers.
             </summary>
            </member>
        <member name="M:Urho.Material.Clone(System.String)">
             <summary>
             Clone the material.
             </summary>
            </member>
        <member name="M:Urho.Material.SortTechniques">
             <summary>
             Ensure that material techniques are listed in correct order.
             </summary>
            </member>
        <member name="M:Urho.Material.MarkForAuxView(System.UInt32)">
             <summary>
             Mark material for auxiliary view rendering.
             </summary>
            </member>
        <member name="M:Urho.Material.GetNumTechniques">
             <summary>
             Return number of techniques.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetTechnique(System.UInt32)">
             <summary>
             Return technique by index.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetPass(System.UInt32,System.String)">
             <summary>
             Return pass by technique index and pass name.
             </summary>
            </member>
        <member name="M:Urho.Material.GetTexture(Urho.TextureUnit)">
             <summary>
             Return texture by unit.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetVertexShaderDefines">
             <summary>
             Return additional vertex shader defines.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetPixelShaderDefines">
             <summary>
             Return additional pixel shader defines.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetShaderParameterAnimation(System.String)">
             <summary>
             Return shader parameter animation.
             </summary>
            </member>
        <member name="M:Urho.Material.GetShaderParameterAnimationWrapMode(System.String)">
             <summary>
             Return shader parameter animation wrap mode.
             </summary>
            </member>
        <member name="M:Urho.Material.GetShaderParameterAnimationSpeed(System.String)">
             <summary>
             Return shader parameter animation speed.
             </summary>
            </member>
        <member name="M:Urho.Material.GetCullMode">
             <summary>
             Return normal culling mode.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetShadowCullMode">
             <summary>
             Return culling mode for shadows.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetFillMode">
             <summary>
             Return polygon fill mode.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetDepthBias">
             <summary>
             Return depth bias.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetAlphaToCoverage">
             <summary>
             Return alpha-to-coverage mode.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetLineAntiAlias">
             <summary>
             Return whether line antialiasing is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetRenderOrder">
             <summary>
             Return render order.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetAuxViewFrameNumber">
             <summary>
             Return last auxiliary view rendered frame number.
             </summary>
            </member>
        <member name="M:Urho.Material.GetOcclusion">
             <summary>
             Return whether should render occlusion.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetSpecular">
             <summary>
             Return whether should render specular.
             </summary>
            </member>
        <member name="M:Urho.Material.GetScene">
             <summary>
             Return the scene associated with the material for shader parameter animation updates.
             
             </summary>
            </member>
        <member name="M:Urho.Material.GetShaderParameterHash">
             <summary>
             Return shader parameter hash value. Used as an optimization to avoid setting shader parameters unnecessarily.
             </summary>
            </member>
        <member name="M:Urho.Material.GetTextureUnitName(Urho.TextureUnit)">
             <summary>
             Return name for texture unit.
             </summary>
            </member>
        <member name="M:Urho.Material.ParseShaderParameterValue(System.String)">
             <summary>
             Parse a shader parameter value from a string. Retunrs either a bool, a float, or a 2 to 4-component vector.
             </summary>
            </member>
        <member name="P:Urho.Material.NumTechniques">
             <summary>
             Return number of techniques.
             
             Or
             Set number of techniques.
             
             </summary>
            </member>
        <member name="P:Urho.Material.VertexShaderDefines">
             <summary>
             Return additional vertex shader defines.
             
             Or
             Set additional vertex shader defines. Separate multiple defines with spaces. Setting defines at the material level causes technique(s) to be cloned as necessary.
             
             </summary>
            </member>
        <member name="P:Urho.Material.PixelShaderDefines">
             <summary>
             Return additional pixel shader defines.
             
             Or
             Set additional pixel shader defines. Separate multiple defines with spaces. Setting defines at the material level causes technique(s) to be cloned as necessary.
             
             </summary>
            </member>
        <member name="P:Urho.Material.CullMode">
             <summary>
             Return normal culling mode.
             
             Or
             Set culling mode.
             
             </summary>
            </member>
        <member name="P:Urho.Material.ShadowCullMode">
             <summary>
             Return culling mode for shadows.
             
             Or
             Set culling mode for shadows.
             
             </summary>
            </member>
        <member name="P:Urho.Material.FillMode">
             <summary>
             Return polygon fill mode.
             
             Or
             Set polygon fill mode. Interacts with the camera's fill mode setting so that the "least filled" mode will be used.
             
             </summary>
            </member>
        <member name="P:Urho.Material.DepthBias">
             <summary>
             Return depth bias.
             
             Or
             Set depth bias parameters for depth write and compare. Note that the normal offset parameter is not used and will not be saved, as it affects only shadow map sampling during light rendering.
             
             </summary>
            </member>
        <member name="P:Urho.Material.AlphaToCoverage">
             <summary>
             Return alpha-to-coverage mode.
             
             Or
             Set alpha-to-coverage mode on all passes.
             
             </summary>
            </member>
        <member name="P:Urho.Material.LineAntiAlias">
             <summary>
             Return whether line antialiasing is enabled.
             
             Or
             Set line antialiasing on/off. Has effect only on models that consist of line lists.
             
             </summary>
            </member>
        <member name="P:Urho.Material.RenderOrder">
             <summary>
             Return render order.
             
             Or
             Set 8-bit render order within pass. Default 128. Lower values will render earlier and higher values later, taking precedence over e.g. state and distance sorting.
             
             </summary>
            </member>
        <member name="P:Urho.Material.Occlusion">
             <summary>
             Return whether should render occlusion.
             
             Or
             Set whether to use in occlusion rendering. Default true.
             
             </summary>
            </member>
        <member name="P:Urho.Material.Scene">
             <summary>
             Return the scene associated with the material for shader parameter animation updates.
             
             Or
             Associate the material with a scene to ensure that shader parameter animation happens in sync with scene update, respecting the scene time scale. If no scene is set, the global update events will be used.
             
             </summary>
            </member>
        <member name="P:Urho.Material.AuxViewFrameNumber">
             <summary>
             Return last auxiliary view rendered frame number.
             </summary>
            </member>
        <member name="P:Urho.Material.Specular">
             <summary>
             Return whether should render specular.
             </summary>
            </member>
        <member name="P:Urho.Material.ShaderParameterHash">
             <summary>
             Return shader parameter hash value. Used as an optimization to avoid setting shader parameters unnecessarily.
             </summary>
            </member>
        <member name="M:Urho.MemoryBuffer.GetString">
             <summary>
             Return Read a null-terminated string..
             </summary>
            </member>
        <member name="T:Urho.Model">
             <summary>
             3D model resource.
             </summary>
            </member>
        <member name="M:Urho.Model.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Model.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Model.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Model.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Model.Save(Urho.IO.File)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Model.Save(Urho.MemoryBuffer)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Model.SetBoundingBox(Urho.BoundingBox)">
             <summary>
             Set local-space bounding box.
             
             </summary>
            </member>
        <member name="M:Urho.Model.SetNumGeometries(System.UInt32)">
             <summary>
             Set number of geometries.
             
             </summary>
            </member>
        <member name="M:Urho.Model.SetNumGeometryLodLevels(System.UInt32,System.UInt32)">
             <summary>
             Set number of LOD levels in a geometry.
             
             </summary>
            </member>
        <member name="M:Urho.Model.SetGeometry(System.UInt32,System.UInt32,Urho.Geometry)">
             <summary>
             Set geometry.
             </summary>
            </member>
        <member name="M:Urho.Model.SetGeometryCenter(System.UInt32,Urho.Vector3)">
             <summary>
             Set geometry center.
             
             </summary>
            </member>
        <member name="M:Urho.Model.Clone(System.String)">
             <summary>
             Clone the model. The geometry data is deep-copied and can be modified in the clone without affecting the original.
             </summary>
            </member>
        <member name="M:Urho.Model.GetBoundingBox">
             <summary>
             Return bounding box.
             
             </summary>
            </member>
        <member name="M:Urho.Model.GetVertexBuffers">
             <summary>
             Return vertex buffers.
             </summary>
            </member>
        <member name="M:Urho.Model.GetIndexBuffers">
             <summary>
             Return index buffers.
             </summary>
            </member>
        <member name="M:Urho.Model.GetNumGeometries">
             <summary>
             Return number of geometries.
             
             </summary>
            </member>
        <member name="M:Urho.Model.GetNumGeometryLodLevels(System.UInt32)">
             <summary>
             Return number of LOD levels in geometry.
             
             </summary>
            </member>
        <member name="M:Urho.Model.GetGeometry(System.UInt32,System.UInt32)">
             <summary>
             Return geometry by index and LOD level. The LOD level is clamped if out of range.
             </summary>
            </member>
        <member name="M:Urho.Model.GetGeometryCenter(System.UInt32)">
             <summary>
             Return geometry center by index.
             
             </summary>
            </member>
        <member name="M:Urho.Model.GetNumMorphs">
             <summary>
             Return number of vertex morphs.
             
             </summary>
            </member>
        <member name="M:Urho.Model.GetMorph(System.UInt32)">
             <summary>
             Return vertex morph by index.
             </summary>
            </member>
        <member name="M:Urho.Model.GetMorph(System.String)">
             <summary>
             Return vertex morph by name.
             </summary>
            </member>
        <member name="M:Urho.Model.GetMorph(Urho.StringHash)">
             <summary>
             Return vertex morph by name hash.
             </summary>
            </member>
        <member name="M:Urho.Model.GetMorphRangeStart(System.UInt32)">
             <summary>
             Return vertex buffer morph range start.
             </summary>
            </member>
        <member name="M:Urho.Model.GetMorphRangeCount(System.UInt32)">
             <summary>
             Return vertex buffer morph range vertex count.
             </summary>
            </member>
        <member name="P:Urho.Model.BoundingBox">
             <summary>
             Return bounding box.
             
             Or
             Set local-space bounding box.
             
             </summary>
            </member>
        <member name="P:Urho.Model.IndexBuffers">
             <summary>
             Return index buffers.
             </summary>
            </member>
        <member name="P:Urho.Model.NumGeometries">
             <summary>
             Return number of geometries.
             
             Or
             Set number of geometries.
             
             </summary>
            </member>
        <member name="P:Urho.Model.VertexBuffers">
             <summary>
             Return vertex buffers.
             </summary>
            </member>
        <member name="P:Urho.Model.NumMorphs">
             <summary>
             Return number of vertex morphs.
             
             </summary>
            </member>
        <member name="T:Urho.Navigation.NavigationMesh">
             <summary>
             Navigation mesh component. Collects the navigation geometry from child nodes with the Navigable component and responds to path queries.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetTileSize(System.Int32)">
             <summary>
             Set tile size.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetCellSize(System.Single)">
             <summary>
             Set cell size.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetCellHeight(System.Single)">
             <summary>
             Set cell height.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetAgentHeight(System.Single)">
             <summary>
             Set navigation agent height.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetAgentRadius(System.Single)">
             <summary>
             Set navigation agent radius.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetAgentMaxClimb(System.Single)">
             <summary>
             Set navigation agent max vertical climb.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetAgentMaxSlope(System.Single)">
             <summary>
             Set navigation agent max slope.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetRegionMinSize(System.Single)">
             <summary>
             Set region minimum size.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetRegionMergeSize(System.Single)">
             <summary>
             Set region merge size.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetEdgeMaxLength(System.Single)">
             <summary>
             Set edge max length.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetEdgeMaxError(System.Single)">
             <summary>
             Set edge max error.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetDetailSampleDistance(System.Single)">
             <summary>
             Set detail sampling distance.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetDetailSampleMaxError(System.Single)">
             <summary>
             Set detail sampling maximum error.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetPadding(Urho.Vector3)">
             <summary>
             Set padding of the navigation mesh bounding box. Having enough padding allows to add geometry on the extremities of the navigation mesh when doing partial rebuilds.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetAreaCost(System.UInt32,System.Single)">
             <summary>
             Set the cost of an area.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.Allocate(Urho.BoundingBox,System.UInt32)">
             <summary>
             Allocate the navigation mesh without building any tiles. Bounding box is not padded. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.Build">
             <summary>
             Rebuild the navigation mesh. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.Build(Urho.BoundingBox)">
             <summary>
             Rebuild part of the navigation mesh contained by the world-space bounding box. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.Build(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Rebuild part of the navigation mesh in the rectangular area. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.RemoveTile(Urho.IntVector2)">
             <summary>
             Remove tile from navigation mesh.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.RemoveAllTiles">
             <summary>
             Remove all tiles from navigation mesh.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.HasTile(Urho.IntVector2)">
             <summary>
             Return whether the navigation mesh has tile.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetTileBoundingBox(Urho.IntVector2)">
             <summary>
             Return bounding box of the tile in the node space.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetTileIndex(Urho.Vector3)">
             <summary>
             Return index of the tile at the position.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.FindNearestPoint(Urho.Vector3,Urho.Vector3,Urho.Navigation.dtQueryFilter*,System.UInt32*)">
             <summary>
             Find the nearest point on the navigation mesh to a given point. Extents specifies how far out from the specified point to check along each axis.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.MoveAlongSurface(Urho.Vector3,Urho.Vector3,Urho.Vector3,System.Int32,Urho.Navigation.dtQueryFilter*)">
             <summary>
             Try to move along the surface from one point to another.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetRandomPoint(Urho.Navigation.dtQueryFilter*,System.UInt32*)">
             <summary>
             Return a random point on the navigation mesh.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetRandomPointInCircle(Urho.Vector3,System.Single,Urho.Vector3,Urho.Navigation.dtQueryFilter*,System.UInt32*)">
             <summary>
             Return a random point on the navigation mesh within a circle. The circle radius is only a guideline and in practice the returned point may be further away.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetDistanceToWall(Urho.Vector3,System.Single,Urho.Vector3,Urho.Navigation.dtQueryFilter*,Urho.Vector3*,Urho.Vector3*)">
             <summary>
             Return distance to wall from a point. Maximum search radius must be specified.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.Raycast(Urho.Vector3,Urho.Vector3,Urho.Vector3,Urho.Navigation.dtQueryFilter*,Urho.Vector3*)">
             <summary>
             Perform a walkability raycast on the navigation mesh between start and end and return the point where a wall was hit, or the end point if no walls.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.DrawDebugGeometry(System.Boolean)">
             <summary>
             Add debug geometry to the debug renderer.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetMeshName">
             <summary>
             Return the given name of this navigation mesh.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetMeshName(System.String)">
             <summary>
             Set the name of this navigation mesh.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetTileSize">
             <summary>
             Return tile size.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetCellSize">
             <summary>
             Return cell size.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetCellHeight">
             <summary>
             Return cell height.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetAgentHeight">
             <summary>
             Return navigation agent height.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetAgentRadius">
             <summary>
             Return navigation agent radius.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetAgentMaxClimb">
             <summary>
             Return navigation agent max vertical climb.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetAgentMaxSlope">
             <summary>
             Return navigation agent max slope.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetRegionMinSize">
             <summary>
             Return region minimum size.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetRegionMergeSize">
             <summary>
             Return region merge size.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetEdgeMaxLength">
             <summary>
             Return edge max length.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetEdgeMaxError">
             <summary>
             Return edge max error.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetDetailSampleDistance">
             <summary>
             Return detail sampling distance.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetDetailSampleMaxError">
             <summary>
             Return detail sampling maximum error.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetPadding">
             <summary>
             Return navigation mesh bounding box padding.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetAreaCost(System.UInt32)">
             <summary>
             Get the current cost of an area.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.IsInitialized">
             <summary>
             Return whether has been initialized with valid navigation data.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetBoundingBox">
             <summary>
             Return local space bounding box of the navigation mesh.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetWorldBoundingBox">
             <summary>
             Return world space bounding box of the navigation mesh.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetNumTiles">
             <summary>
             Return number of tiles.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetPartitionType(Urho.Navigation.NavmeshPartitionType)">
             <summary>
             Set the partition type used for polygon generation.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetPartitionType">
             <summary>
             Return Partition Type.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetDrawOffMeshConnections(System.Boolean)">
             <summary>
             Draw debug geometry for OffMeshConnection components.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetDrawOffMeshConnections">
             <summary>
             Return whether to draw OffMeshConnection components.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.SetDrawNavAreas(System.Boolean)">
             <summary>
             Draw debug geometry for NavArea components.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavigationMesh.GetDrawNavAreas">
             <summary>
             Return whether to draw NavArea components.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.TileSize">
             <summary>
             Return tile size.
             
             Or
             Set tile size.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.CellSize">
             <summary>
             Return cell size.
             
             Or
             Set cell size.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.CellHeight">
             <summary>
             Return cell height.
             
             Or
             Set cell height.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.AgentHeight">
             <summary>
             Return navigation agent height.
             
             Or
             Set navigation agent height.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.AgentRadius">
             <summary>
             Return navigation agent radius.
             
             Or
             Set navigation agent radius.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.AgentMaxClimb">
             <summary>
             Return navigation agent max vertical climb.
             
             Or
             Set navigation agent max vertical climb.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.AgentMaxSlope">
             <summary>
             Return navigation agent max slope.
             
             Or
             Set navigation agent max slope.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.RegionMinSize">
             <summary>
             Return region minimum size.
             
             Or
             Set region minimum size.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.RegionMergeSize">
             <summary>
             Return region merge size.
             
             Or
             Set region merge size.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.EdgeMaxLength">
             <summary>
             Return edge max length.
             
             Or
             Set edge max length.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.EdgeMaxError">
             <summary>
             Return edge max error.
             
             Or
             Set edge max error.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.DetailSampleDistance">
             <summary>
             Return detail sampling distance.
             
             Or
             Set detail sampling distance.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.DetailSampleMaxError">
             <summary>
             Return detail sampling maximum error.
             
             Or
             Set detail sampling maximum error.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.Padding">
             <summary>
             Return navigation mesh bounding box padding.
             
             Or
             Set padding of the navigation mesh bounding box. Having enough padding allows to add geometry on the extremities of the navigation mesh when doing partial rebuilds.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.MeshName">
             <summary>
             Return the given name of this navigation mesh.
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.Initialized">
             <summary>
             Return whether has been initialized with valid navigation data.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.BoundingBox">
             <summary>
             Return local space bounding box of the navigation mesh.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.WorldBoundingBox">
             <summary>
             Return world space bounding box of the navigation mesh.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.NumTiles">
             <summary>
             Return number of tiles.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.PartitionType">
             <summary>
             Return Partition Type.
             
             Or
             Set the partition type used for polygon generation.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.DrawOffMeshConnections">
             <summary>
             Return whether to draw OffMeshConnection components.
             
             Or
             Draw debug geometry for OffMeshConnection components.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavigationMesh.DrawNavAreas">
             <summary>
             Return whether to draw NavArea components.
             
             Or
             Draw debug geometry for NavArea components.
             
             </summary>
            </member>
        <member name="T:Urho.Network.Network">
             <summary>
             %Network subsystem. Manages client-server communications using the UDP protocol.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.DiscoverHosts(System.UInt32)">
             <summary>
             Scan the LAN/subnet for available hosts.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.SetPassword(System.String)">
             <summary>
             Set password for the client/server communcation.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.SetNATServerInfo(System.String,System.UInt16)">
             <summary>
             Set NAT server information.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.Disconnect(System.Int32)">
             <summary>
             Disconnect the connection to the server. If wait time is non-zero, will block while waiting for disconnect to finish.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.StartServer(System.UInt16,System.UInt32)">
             <summary>
             Start a server on a port using UDP protocol. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.StopServer">
             <summary>
             Stop the server.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.StartNATClient">
             <summary>
             Start NAT punchtrough client to allow remote connections.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.GetGUID">
             <summary>
             Get local server GUID.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Network.BroadcastMessage(System.Int32,System.Boolean,System.Boolean,System.Byte*,System.UInt32,System.UInt32)">
             <summary>
             Broadcast a message with content ID to all client connections.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.SetUpdateFps(System.Int32)">
             <summary>
             Set network update FPS.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Network.SetSimulatedLatency(System.Int32)">
             <summary>
             Set simulated latency in milliseconds. This adds a fixed delay before sending each packet.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Network.SetSimulatedPacketLoss(System.Single)">
             <summary>
             Set simulated packet loss probability between 0.0 - 1.0.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Network.RegisterRemoteEvent(Urho.StringHash)">
             <summary>
             Register a remote event as allowed to be received. There is also a fixed blacklist of events that can not be allowed in any case, such as ConsoleCommand.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.UnregisterRemoteEvent(Urho.StringHash)">
             <summary>
             Unregister a remote event as allowed to received.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.UnregisterAllRemoteEvents">
             <summary>
             Unregister all remote events.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.SetPackageCacheDir(System.String)">
             <summary>
             Set the package download cache directory.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Network.SendPackageToClients(Urho.Scene,Urho.IO.PackageFile)">
             <summary>
             Trigger all client connections in the specified scene to download a package file from the server. Can be used to download additional resource packages when clients are already joined in the scene. The package must have been added as a requirement to the scene, or else the eventual download will fail.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.BanAddress(System.String)">
             <summary>
             Ban specific IP addresses.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.GetUpdateFps">
             <summary>
             Return network update FPS.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Network.GetSimulatedLatency">
             <summary>
             Return simulated latency in milliseconds.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Network.GetSimulatedPacketLoss">
             <summary>
             Return simulated packet loss probability.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Network.GetServerConnection">
             <summary>
             Return the connection to the server. Null if not connected.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Network.IsServerRunning">
             <summary>
             Return whether the server is running.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Network.CheckRemoteEvent(Urho.StringHash)">
             <summary>
             Return whether a remote event is allowed to be received.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.GetPackageCacheDir">
             <summary>
             Return the package download cache directory.
             
             </summary>
            </member>
        <member name="M:Urho.Network.Network.Update(System.Single)">
             <summary>
             Process incoming messages from connections. Called by HandleBeginFrame.
             </summary>
            </member>
        <member name="M:Urho.Network.Network.PostUpdate(System.Single)">
             <summary>
             Send outgoing messages after frame logic. Called by HandleRenderUpdate.
             </summary>
            </member>
        <member name="P:Urho.Network.Network.GUID">
             <summary>
             Get local server GUID.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Network.UpdateFps">
             <summary>
             Return network update FPS.
             
             Or
             Set network update FPS.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Network.SimulatedLatency">
             <summary>
             Return simulated latency in milliseconds.
             
             Or
             Set simulated latency in milliseconds. This adds a fixed delay before sending each packet.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Network.SimulatedPacketLoss">
             <summary>
             Return simulated packet loss probability.
             
             Or
             Set simulated packet loss probability between 0.0 - 1.0.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Network.PackageCacheDir">
             <summary>
             Return the package download cache directory.
             
             Or
             Set the package download cache directory.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Network.ServerConnection">
             <summary>
             Return the connection to the server. Null if not connected.
             
             </summary>
            </member>
        <member name="P:Urho.Network.Network.ServerRunning">
             <summary>
             Return whether the server is running.
             
             </summary>
            </member>
        <member name="T:Urho.Node">
             <summary>
             %Scene node that may contain components and child nodes.
             </summary>
            </member>
        <member name="M:Urho.Node.Remove">
             <summary>
             Remove from the parent node. If no other shared pointer references exist, causes immediate deletion.
             </summary>
            </member>
        <member name="M:Urho.Node.RemoveComponent(Urho.Component)">
             <summary>
             Remove a component from this node.
             </summary>
            </member>
        <member name="M:Urho.Node.AddComponent(Urho.Component,System.UInt32)">
             <summary>
             Add a pre-created component.
             </summary>
            </member>
        <member name="M:Urho.Node.ChangeParent(Urho.Node)">
             <summary>
             Changes Parent for the node
             </summary>
            </member>
        <member name="M:Urho.Node.RunActionsAsync(Urho.Actions.FiniteTimeAction)">
             <summary>
             Runs an Action that can be awaited.
             </summary>
             <param name="action">A FiniteTimeAction.</param>
            </member>
        <member name="M:Urho.Node.RunActionsAsync(Urho.Actions.FiniteTimeAction[])">
             <summary>
             Runs a sequence of Actions so that it can be awaited.
             </summary>
             <param name="actions">An array of FiniteTimeAction objects.</param>
            </member>
        <member name="M:Urho.Node.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Node.Load(Urho.IO.File)">
             <summary>
             Load from binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Node.Load(Urho.MemoryBuffer)">
             <summary>
             Load from binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Node.LoadXml(Urho.Resources.XmlElement)">
             <summary>
             Load from XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Node.Save(Urho.IO.File)">
             <summary>
             Save as binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Node.Save(Urho.MemoryBuffer)">
             <summary>
             Save as binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Node.SaveXml(Urho.Resources.XmlElement)">
             <summary>
             Save as XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Node.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately recursively to child nodes and components.
             </summary>
            </member>
        <member name="M:Urho.Node.SaveDefaultAttributes">
             <summary>
             Return whether should save default-valued attributes into XML. Always save node transforms for readability, even if identity.
             </summary>
            </member>
        <member name="M:Urho.Node.MarkNetworkUpdate">
             <summary>
             Mark for attribute check on the next network update.
             </summary>
            </member>
        <member name="M:Urho.Node.AddReplicationState(Urho.Network.NodeReplicationState*)">
             <summary>
             Add a replication state that is tracking this node.
             </summary>
            </member>
        <member name="M:Urho.Node.SaveXml(Urho.IO.File,System.String)">
             <summary>
             Save to an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Node.SaveXml(Urho.MemoryBuffer,System.String)">
             <summary>
             Save to an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Node.SaveJson(Urho.IO.File,System.String)">
             <summary>
             Save to a JSON file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Node.SaveJson(Urho.MemoryBuffer,System.String)">
             <summary>
             Save to a JSON file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Node.SetName(System.String)">
             <summary>
             Set name of the scene node. Names are not required to be unique.
             
             </summary>
            </member>
        <member name="M:Urho.Node.AddTag(System.String)">
             <summary>
             Add a tag.
             </summary>
            </member>
        <member name="M:Urho.Node.RemoveTag(System.String)">
             <summary>
             Remove tag. Return true if existed.
             </summary>
            </member>
        <member name="M:Urho.Node.RemoveAllTags">
             <summary>
             Remove all tags.
             </summary>
            </member>
        <member name="M:Urho.Node.SetPosition(Urho.Vector3)">
             <summary>
             Set position in parent space. If the scene node is on the root level (is child of the scene itself), this is same as world space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetPosition2D(Urho.Vector2)">
             <summary>
             Set position in parent space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetPosition2D(System.Single,System.Single)">
             <summary>
             Set position in parent space (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.SetRotation(Urho.Quaternion)">
             <summary>
             Set rotation in parent space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetRotation2D(System.Single)">
             <summary>
             Set rotation in parent space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetDirection(Urho.Vector3)">
             <summary>
             Set forward direction in parent space. Positive Z axis equals identity rotation.
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetScale(System.Single)">
             <summary>
             Set uniform scale in parent space.
             </summary>
            </member>
        <member name="M:Urho.Node.SetScale(Urho.Vector3)">
             <summary>
             Set scale in parent space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetScale2D(Urho.Vector2)">
             <summary>
             Set scale in parent space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetScale2D(System.Single,System.Single)">
             <summary>
             Set scale in parent space (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.SetTransform(Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set both position and rotation in parent space as an atomic operation. This is faster than setting position and rotation separately.
             </summary>
            </member>
        <member name="M:Urho.Node.SetTransform(Urho.Vector3,Urho.Quaternion,System.Single)">
             <summary>
             Set position, rotation, and uniform scale in parent space as an atomic operation.
             </summary>
            </member>
        <member name="M:Urho.Node.SetTransform(Urho.Vector3,Urho.Quaternion,Urho.Vector3)">
             <summary>
             Set position, rotation, and scale in parent space as an atomic operation.
             </summary>
            </member>
        <member name="M:Urho.Node.SetTransform(Urho.Matrix3x4)">
             <summary>
             Set node transformation in parent space as an atomic operation.
             </summary>
            </member>
        <member name="M:Urho.Node.SetTransform2D(Urho.Vector2,System.Single)">
             <summary>
             Set both position and rotation in parent space as an atomic operation (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.SetTransform2D(Urho.Vector2,System.Single,System.Single)">
             <summary>
             Set position, rotation, and uniform scale in parent space as an atomic operation (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.SetTransform2D(Urho.Vector2,System.Single,Urho.Vector2)">
             <summary>
             Set position, rotation, and scale in parent space as an atomic operation (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldPosition(Urho.Vector3)">
             <summary>
             Set position in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldPosition2D(Urho.Vector2)">
             <summary>
             Set position in world space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldPosition2D(System.Single,System.Single)">
             <summary>
             Set position in world space (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldRotation(Urho.Quaternion)">
             <summary>
             Set rotation in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldRotation2D(System.Single)">
             <summary>
             Set rotation in world space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldDirection(Urho.Vector3)">
             <summary>
             Set forward direction in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldScale(System.Single)">
             <summary>
             Set uniform scale in world space.
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldScale(Urho.Vector3)">
             <summary>
             Set scale in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldScale2D(Urho.Vector2)">
             <summary>
             Set scale in world space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldScale2D(System.Single,System.Single)">
             <summary>
             Set scale in world space (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldTransform(Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set both position and rotation in world space as an atomic operation.
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldTransform(Urho.Vector3,Urho.Quaternion,System.Single)">
             <summary>
             Set position, rotation, and uniform scale in world space as an atomic operation.
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldTransform(Urho.Vector3,Urho.Quaternion,Urho.Vector3)">
             <summary>
             Set position, rotation, and scale in world space as an atomic opration.
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldTransform(Urho.Matrix3x4)">
             <summary>
             Set position, rotation, and scale in world space as an atomic operation from a transformation matrix.
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldTransform2D(Urho.Vector2,System.Single)">
             <summary>
             Set both position and rotation in world space as an atomic operation (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldTransform2D(Urho.Vector2,System.Single,System.Single)">
             <summary>
             Set position, rotation, and uniform scale in world space as an atomic operation (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.SetWorldTransform2D(Urho.Vector2,System.Single,Urho.Vector2)">
             <summary>
             Set position, rotation, and scale in world space as an atomic opration (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.Translate(Urho.Vector3,Urho.TransformSpace)">
             <summary>
             Move the scene node in the chosen transform space.
             </summary>
            </member>
        <member name="M:Urho.Node.Translate2D(Urho.Vector2,Urho.TransformSpace)">
             <summary>
             Move the scene node in the chosen transform space (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.Rotate(Urho.Quaternion,Urho.TransformSpace)">
             <summary>
             Rotate the scene node in the chosen transform space.
             </summary>
            </member>
        <member name="M:Urho.Node.Rotate2D(System.Single,Urho.TransformSpace)">
             <summary>
             Rotate the scene node in the chosen transform space (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.RotateAround(Urho.Vector3,Urho.Quaternion,Urho.TransformSpace)">
             <summary>
             Rotate around a point in the chosen transform space.
             </summary>
            </member>
        <member name="M:Urho.Node.RotateAround2D(Urho.Vector2,System.Single,Urho.TransformSpace)">
             <summary>
             Rotate around a point in the chosen transform space (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.Pitch(System.Single,Urho.TransformSpace)">
             <summary>
             Rotate around the X axis.
             </summary>
            </member>
        <member name="M:Urho.Node.Yaw(System.Single,Urho.TransformSpace)">
             <summary>
             Rotate around the Y axis.
             </summary>
            </member>
        <member name="M:Urho.Node.Roll(System.Single,Urho.TransformSpace)">
             <summary>
             Rotate around the Z axis.
             </summary>
            </member>
        <member name="M:Urho.Node.LookAt(Urho.Vector3,Urho.Vector3,Urho.TransformSpace)">
             <summary>
             Look at a target position in the chosen transform space. Note that the up vector is always specified in world space. Return true if successful, or false if resulted in an illegal rotation, in which case the current rotation remains.
             </summary>
            </member>
        <member name="M:Urho.Node.ScaleNode(System.Single)">
             <summary>
             Modify scale in parent space uniformly.
             </summary>
            </member>
        <member name="M:Urho.Node.ScaleNode(Urho.Vector3)">
             <summary>
             Modify scale in parent space.
             </summary>
            </member>
        <member name="M:Urho.Node.ScaleNode2D(Urho.Vector2)">
             <summary>
             Modify scale in parent space (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.SetEnabled(System.Boolean)">
             <summary>
             Set enabled/disabled state without recursion. Components in a disabled node become effectively disabled regardless of their own enable/disable state.
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetDeepEnabled(System.Boolean)">
             <summary>
             Set enabled state on self and child nodes. Nodes' own enabled state is remembered (IsEnabledSelf) and can be restored.
             </summary>
            </member>
        <member name="M:Urho.Node.ResetDeepEnabled">
             <summary>
             Reset enabled state to the node's remembered state prior to calling SetDeepEnabled.
             </summary>
            </member>
        <member name="M:Urho.Node.SetEnabledRecursive(System.Boolean)">
             <summary>
             Set enabled state on self and child nodes. Unlike SetDeepEnabled this does not remember the nodes' own enabled state, but overwrites it.
             </summary>
            </member>
        <member name="M:Urho.Node.SetOwner(Urho.Network.Connection)">
             <summary>
             Set owner connection for networking.
             
             </summary>
            </member>
        <member name="M:Urho.Node.MarkDirty">
             <summary>
             Mark node and child nodes to need world transform recalculation. Notify listener components.
             </summary>
            </member>
        <member name="M:Urho.Node.CreateChild(System.String,Urho.CreateMode,System.UInt32,System.Boolean)">
             <summary>
             Create a child scene node (with specified ID if provided).
             </summary>
            </member>
        <member name="M:Urho.Node.CreateTemporaryChild(System.String,Urho.CreateMode,System.UInt32)">
             <summary>
             Create a temporary child scene node (with specified ID if provided).
             </summary>
            </member>
        <member name="M:Urho.Node.AddChild(Urho.Node,System.UInt32)">
             <summary>
             Add a child scene node at a specific index. If index is not explicitly specified or is greater than current children size, append the new child at the end.
             </summary>
            </member>
        <member name="M:Urho.Node.RemoveChild(Urho.Node)">
             <summary>
             Remove a child scene node.
             </summary>
            </member>
        <member name="M:Urho.Node.RemoveAllChildren">
             <summary>
             Remove all child scene nodes.
             </summary>
            </member>
        <member name="M:Urho.Node.RemoveChildren(System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Remove child scene nodes that match criteria.
             </summary>
            </member>
        <member name="M:Urho.Node.CreateComponent(Urho.StringHash,Urho.CreateMode,System.UInt32)">
             <summary>
             Create a component to this node (with specified ID if provided).
             </summary>
            </member>
        <member name="M:Urho.Node.GetOrCreateComponent(Urho.StringHash,Urho.CreateMode,System.UInt32)">
             <summary>
             Create a component to this node if it does not exist already.
             </summary>
            </member>
        <member name="M:Urho.Node.CloneComponent(Urho.Component,System.UInt32)">
             <summary>
             Clone a component from another node using its create mode. Return the clone if successful or null on failure.
             </summary>
            </member>
        <member name="M:Urho.Node.CloneComponent(Urho.Component,Urho.CreateMode,System.UInt32)">
             <summary>
             Clone a component from another node and specify the create mode. Return the clone if successful or null on failure.
             </summary>
            </member>
        <member name="M:Urho.Node.RemoveComponent(Urho.StringHash)">
             <summary>
             Remove the first component of specific type from this node.
             </summary>
            </member>
        <member name="M:Urho.Node.RemoveComponents(System.Boolean,System.Boolean)">
             <summary>
             Remove components that match criteria.
             </summary>
            </member>
        <member name="M:Urho.Node.RemoveComponents(Urho.StringHash)">
             <summary>
             Remove all components of specific type.
             </summary>
            </member>
        <member name="M:Urho.Node.RemoveAllComponents">
             <summary>
             Remove all components from this node.
             </summary>
            </member>
        <member name="M:Urho.Node.ReorderComponent(Urho.Component,System.UInt32)">
             <summary>
             Adjust index order of an existing component in this node.
             </summary>
            </member>
        <member name="M:Urho.Node.Clone(Urho.CreateMode)">
             <summary>
             Clone scene node, components and child nodes. Return the clone.
             </summary>
            </member>
        <member name="M:Urho.Node.Remove2">
             <summary>
             Remove from the parent node. If no other shared pointer references exist, causes immediate deletion.
             </summary>
            </member>
        <member name="M:Urho.Node.SetParent(Urho.Node)">
             <summary>
             Assign to a new parent scene node. Retains the world transform.
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,Urho.Vector3)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,Urho.IntRect)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,Urho.Color)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,Urho.Vector2)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,Urho.Vector4)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,Urho.IntVector2)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,Urho.Quaternion)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,Urho.Matrix4)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,Urho.Matrix3)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,Urho.Matrix3x4)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,System.Int32)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,System.Single)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,System.String)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.SetVar(Urho.StringHash,System.Boolean)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Node.AddListener(Urho.Component)">
             <summary>
             Add listener component that is notified of node being dirtied. Can either be in the same node or another.
             </summary>
            </member>
        <member name="M:Urho.Node.RemoveListener(Urho.Component)">
             <summary>
             Remove listener component.
             </summary>
            </member>
        <member name="M:Urho.Node.GetID">
             <summary>
             Return ID.
             
             </summary>
            </member>
        <member name="M:Urho.Node.IsReplicated">
             <summary>
             Return whether the node is replicated or local to a scene.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetName">
             <summary>
             Return name.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetNameHash">
             <summary>
             Return name hash.
             </summary>
            </member>
        <member name="M:Urho.Node.HasTag(System.String)">
             <summary>
             Return whether has a specific tag.
             </summary>
            </member>
        <member name="M:Urho.Node.GetParent">
             <summary>
             Return parent scene node.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetScene">
             <summary>
             Return scene.
             
             </summary>
            </member>
        <member name="M:Urho.Node.IsChildOf(Urho.Node)">
             <summary>
             Return whether is a direct or indirect child of specified node.
             </summary>
            </member>
        <member name="M:Urho.Node.IsEnabled">
             <summary>
             Return whether is enabled. Disables nodes effectively disable all their components.
             
             </summary>
            </member>
        <member name="M:Urho.Node.IsEnabledSelf">
             <summary>
             Return the node's last own enabled state. May be different than the value returned by IsEnabled when SetDeepEnabled has been used.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetOwner">
             <summary>
             Return owner connection in networking.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetPosition">
             <summary>
             Return position in parent space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetPosition2D">
             <summary>
             Return position in parent space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetRotation">
             <summary>
             Return rotation in parent space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetRotation2D">
             <summary>
             Return rotation in parent space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetDirection">
             <summary>
             Return forward direction in parent space. Positive Z axis equals identity rotation.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetUp">
             <summary>
             Return up direction in parent space. Positive Y axis equals identity rotation.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetRight">
             <summary>
             Return right direction in parent space. Positive X axis equals identity rotation.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetScale">
             <summary>
             Return scale in parent space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetScale2D">
             <summary>
             Return scale in parent space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetTransform">
             <summary>
             Return parent space transform matrix.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetWorldPosition">
             <summary>
             Return position in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetWorldPosition2D">
             <summary>
             Return position in world space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetWorldRotation">
             <summary>
             Return rotation in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetWorldRotation2D">
             <summary>
             Return rotation in world space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetWorldDirection">
             <summary>
             Return direction in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetWorldUp">
             <summary>
             Return node's up vector in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetWorldRight">
             <summary>
             Return node's right vector in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetWorldScale">
             <summary>
             Return scale in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetSignedWorldScale">
             <summary>
             Return signed scale in world space. Utilized for Urho2D physics.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetWorldScale2D">
             <summary>
             Return scale in world space (for Urho2D).
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetWorldTransform">
             <summary>
             Return world space transform matrix.
             
             </summary>
            </member>
        <member name="M:Urho.Node.LocalToWorld(Urho.Vector3)">
             <summary>
             Convert a local space position to world space.
             </summary>
            </member>
        <member name="M:Urho.Node.LocalToWorld(Urho.Vector4)">
             <summary>
             Convert a local space position or rotation to world space.
             </summary>
            </member>
        <member name="M:Urho.Node.LocalToWorld2D(Urho.Vector2)">
             <summary>
             Convert a local space position or rotation to world space (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.WorldToLocal(Urho.Vector3)">
             <summary>
             Convert a world space position to local space.
             </summary>
            </member>
        <member name="M:Urho.Node.WorldToLocal(Urho.Vector4)">
             <summary>
             Convert a world space position or rotation to local space.
             </summary>
            </member>
        <member name="M:Urho.Node.WorldToLocal2D(Urho.Vector2)">
             <summary>
             Convert a world space position or rotation to local space (for Urho2D).
             </summary>
            </member>
        <member name="M:Urho.Node.IsDirty">
             <summary>
             Return whether transform has changed and world transform needs recalculation.
             </summary>
            </member>
        <member name="M:Urho.Node.GetNumChildren(System.Boolean)">
             <summary>
             Return number of child scene nodes.
             </summary>
            </member>
        <member name="M:Urho.Node.GetChildren">
             <summary>
             Return immediate child scene nodes.
             </summary>
            </member>
        <member name="M:Urho.Node.GetChild(System.UInt32)">
             <summary>
             Return child scene node by index.
             </summary>
            </member>
        <member name="M:Urho.Node.GetChild(System.String,System.Boolean)">
             <summary>
             Return child scene node by name.
             </summary>
            </member>
        <member name="M:Urho.Node.GetChild(Urho.StringHash,System.Boolean)">
             <summary>
             Return child scene node by name hash.
             </summary>
            </member>
        <member name="M:Urho.Node.GetNumComponents">
             <summary>
             Return number of components.
             
             </summary>
            </member>
        <member name="M:Urho.Node.GetNumNetworkComponents">
             <summary>
             Return number of non-local components.
             </summary>
            </member>
        <member name="M:Urho.Node.GetComponents">
             <summary>
             Return all components.
             </summary>
            </member>
        <member name="M:Urho.Node.GetComponent(Urho.StringHash,System.Boolean)">
             <summary>
             Return component by type. If there are several, returns the first.
             </summary>
            </member>
        <member name="M:Urho.Node.GetParentComponent(Urho.StringHash,System.Boolean)">
             <summary>
             Return component in parent node. If there are several, returns the first. May optional traverse up to the root node.
             </summary>
            </member>
        <member name="M:Urho.Node.HasComponent(Urho.StringHash)">
             <summary>
             Return whether has a specific component.
             </summary>
            </member>
        <member name="M:Urho.Node.SetID(System.UInt32)">
             <summary>
             Set ID. Called by Scene.
             
             </summary>
            </member>
        <member name="M:Urho.Node.SetScene(Urho.Scene)">
             <summary>
             Set scene. Called by Scene.
             </summary>
            </member>
        <member name="M:Urho.Node.ResetScene">
             <summary>
             Reset scene, ID and owner. Called by Scene.
             </summary>
            </member>
        <member name="M:Urho.Node.SetNetPositionAttr(Urho.Vector3)">
             <summary>
             Set network position attribute.
             </summary>
            </member>
        <member name="M:Urho.Node.GetNetPositionAttr">
             <summary>
             Return network position attribute.
             </summary>
            </member>
        <member name="M:Urho.Node.PrepareNetworkUpdate">
             <summary>
             Prepare network update by comparing attributes and marking replication states dirty as necessary.
             </summary>
            </member>
        <member name="M:Urho.Node.CleanupConnection(Urho.Network.Connection)">
             <summary>
             Clean up all references to a network connection that is about to be removed.
             
             </summary>
            </member>
        <member name="M:Urho.Node.MarkReplicationDirty">
             <summary>
             Mark node dirty in scene replication states.
             </summary>
            </member>
        <member name="M:Urho.Node.CreateChild(System.UInt32,Urho.CreateMode,System.Boolean)">
             <summary>
             Create a child node with specific ID.
             </summary>
            </member>
        <member name="M:Urho.Node.AddComponent(Urho.Component,System.UInt32,Urho.CreateMode)">
             <summary>
             Add a pre-created component. Using this function from application code is discouraged, as component operation without an owner node may not be well-defined in all cases. Prefer CreateComponent() instead.
             </summary>
            </member>
        <member name="M:Urho.Node.GetNumPersistentChildren">
             <summary>
             Calculate number of non-temporary child nodes.
             </summary>
            </member>
        <member name="M:Urho.Node.GetNumPersistentComponents">
             <summary>
             Calculate number of non-temporary components.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Node.SetPositionSilent(Urho.Vector3)-->
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Node.SetRotationSilent(Urho.Quaternion)-->
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Node.SetScaleSilent(Urho.Vector3)-->
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Node.SetTransformSilent(Urho.Vector3,Urho.Quaternion,Urho.Vector3)-->
        <member name="P:Urho.Node.Name">
             <summary>
             Return name.
             
             Or
             Set name of the scene node. Names are not required to be unique.
             
             </summary>
            </member>
        <member name="P:Urho.Node.Position">
             <summary>
             Return position in parent space.
             
             Or
             Set position in parent space. If the scene node is on the root level (is child of the scene itself), this is same as world space.
             
             </summary>
            </member>
        <member name="P:Urho.Node.Position2D">
             <summary>
             Return position in parent space (for Urho2D).
             
             </summary>
            </member>
        <member name="P:Urho.Node.Rotation">
             <summary>
             Return rotation in parent space.
             
             Or
             Set rotation in parent space.
             
             </summary>
            </member>
        <member name="P:Urho.Node.Rotation2D">
             <summary>
             Return rotation in parent space (for Urho2D).
             
             Or
             Set rotation in parent space (for Urho2D).
             
             </summary>
            </member>
        <member name="P:Urho.Node.Direction">
             <summary>
             Return forward direction in parent space. Positive Z axis equals identity rotation.
             
             </summary>
            </member>
        <member name="P:Urho.Node.Scale">
             <summary>
             Return scale in parent space.
             
             Or
             Set scale in parent space.
             
             </summary>
            </member>
        <member name="P:Urho.Node.Scale2D">
             <summary>
             Return scale in parent space (for Urho2D).
             
             </summary>
            </member>
        <member name="P:Urho.Node.Transform">
             <summary>
             Return parent space transform matrix.
             
             </summary>
            </member>
        <member name="P:Urho.Node.WorldPosition">
             <summary>
             Return position in world space.
             
             </summary>
            </member>
        <member name="P:Urho.Node.WorldPosition2D">
             <summary>
             Return position in world space (for Urho2D).
             
             </summary>
            </member>
        <member name="P:Urho.Node.WorldRotation">
             <summary>
             Return rotation in world space.
             
             </summary>
            </member>
        <member name="P:Urho.Node.WorldRotation2D">
             <summary>
             Return rotation in world space (for Urho2D).
             
             Or
             Set rotation in world space (for Urho2D).
             
             </summary>
            </member>
        <member name="P:Urho.Node.WorldDirection">
             <summary>
             Return direction in world space.
             
             </summary>
            </member>
        <member name="P:Urho.Node.WorldScale">
             <summary>
             Return scale in world space.
             
             </summary>
            </member>
        <member name="P:Urho.Node.WorldScale2D">
             <summary>
             Return scale in world space (for Urho2D).
             
             </summary>
            </member>
        <member name="P:Urho.Node.WorldTransform">
             <summary>
             Return world space transform matrix.
             
             Or
             Set position, rotation, and scale in world space as an atomic operation from a transformation matrix.
             </summary>
            </member>
        <member name="P:Urho.Node.Enabled">
             <summary>
             Return whether is enabled. Disables nodes effectively disable all their components.
             
             Or
             Set enabled/disabled state without recursion. Components in a disabled node become effectively disabled regardless of their own enable/disable state.
             
             </summary>
            </member>
        <member name="P:Urho.Node.Owner">
             <summary>
             Return owner connection in networking.
             
             Or
             Set owner connection for networking.
             
             </summary>
            </member>
        <member name="P:Urho.Node.Parent">
             <summary>
             Return parent scene node.
             
             Or
             Assign to a new parent scene node. Retains the world transform.
             
             </summary>
            </member>
        <member name="P:Urho.Node.ID">
             <summary>
             Return ID.
             
             Or
             Set ID. Called by Scene.
             
             </summary>
            </member>
        <member name="P:Urho.Node.Replicated">
             <summary>
             Return whether the node is replicated or local to a scene.
             
             </summary>
            </member>
        <member name="P:Urho.Node.NameHash">
             <summary>
             Return name hash.
             </summary>
            </member>
        <member name="P:Urho.Node.Scene">
             <summary>
             Return scene.
             
             Or
             Set scene. Called by Scene.
             </summary>
            </member>
        <member name="P:Urho.Node.EnabledSelf">
             <summary>
             Return the node's last own enabled state. May be different than the value returned by IsEnabled when SetDeepEnabled has been used.
             
             </summary>
            </member>
        <member name="P:Urho.Node.Up">
             <summary>
             Return up direction in parent space. Positive Y axis equals identity rotation.
             
             </summary>
            </member>
        <member name="P:Urho.Node.Right">
             <summary>
             Return right direction in parent space. Positive X axis equals identity rotation.
             
             </summary>
            </member>
        <member name="P:Urho.Node.WorldUp">
             <summary>
             Return node's up vector in world space.
             
             </summary>
            </member>
        <member name="P:Urho.Node.WorldRight">
             <summary>
             Return node's right vector in world space.
             
             </summary>
            </member>
        <member name="P:Urho.Node.SignedWorldScale">
             <summary>
             Return signed scale in world space. Utilized for Urho2D physics.
             
             </summary>
            </member>
        <member name="P:Urho.Node.Dirty">
             <summary>
             Return whether transform has changed and world transform needs recalculation.
             </summary>
            </member>
        <member name="P:Urho.Node.Children">
             <summary>
             Return immediate child scene nodes.
             </summary>
            </member>
        <member name="P:Urho.Node.NumComponents">
             <summary>
             Return number of components.
             
             </summary>
            </member>
        <member name="P:Urho.Node.NumNetworkComponents">
             <summary>
             Return number of non-local components.
             </summary>
            </member>
        <member name="P:Urho.Node.Components">
             <summary>
             Return all components.
             </summary>
            </member>
        <member name="P:Urho.Node.NetPositionAttr">
             <summary>
             Return network position attribute.
             Or
             Set network position attribute.
             </summary>
            </member>
        <member name="P:Urho.Node.NumPersistentChildren">
             <summary>
             Calculate number of non-temporary child nodes.
             </summary>
            </member>
        <member name="P:Urho.Node.NumPersistentComponents">
             <summary>
             Calculate number of non-temporary components.
             </summary>
            </member>
        <member name="T:Urho.UrhoObject">
             <summary>
             Base class for objects with type identification, subsystem access and event sending/receiving capability.
             </summary>
             <summary>
             Base class for objects with type identification, subsystem access and event sending/receiving capability.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.UrhoGetType">
             <summary>
             Return type hash.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.GetTypeName">
             <summary>
             Return type name.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.GetTypeInfo">
             <summary>
             Return type info.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.GetTypeInfoStatic">
             <summary>
             Return type info static.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.IsInstanceOf(Urho.StringHash)">
             <summary>
             Check current instance is type of specified type.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.IsInstanceOf(Urho.TypeInfo*)">
             <summary>
             Check current instance is type of specified type.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SubscribeToEvent(Urho.StringHash,System.IntPtr)">
             <summary>
             Subscribe to an event that can be sent by any sender.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SubscribeToEvent(Urho.UrhoObject,Urho.StringHash,System.IntPtr)">
             <summary>
             Subscribe to a specific sender's event.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.UnsubscribeFromEvent(Urho.StringHash)">
             <summary>
             Unsubscribe from an event.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.UnsubscribeFromEvent(Urho.UrhoObject,Urho.StringHash)">
             <summary>
             Unsubscribe from a specific sender's event.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.UnsubscribeFromEvents(Urho.UrhoObject)">
             <summary>
             Unsubscribe from a specific sender's events.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.UnsubscribeFromAllEvents">
             <summary>
             Unsubscribe from all events.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SendEvent(Urho.StringHash)">
             <summary>
             Send event to all subscribers.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.GetContext">
             <summary>
             Return execution context.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,Urho.Vector3)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,Urho.IntRect)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,Urho.Color)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,Urho.Vector2)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,Urho.Vector4)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,Urho.IntVector2)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,Urho.Quaternion)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,Urho.Matrix4)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,Urho.Matrix3)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,Urho.Matrix3x4)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,System.Int32)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,System.Single)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,System.String)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetGlobalVar(Urho.StringHash,System.Boolean)">
             <summary>
             Set global variable with the respective key and value.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.GetSubsystem(Urho.StringHash)">
             <summary>
             Return subsystem by type.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.GetEventSender">
             <summary>
             Return active event sender. Null outside event handling.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.GetEventHandler">
             <summary>
             Return active event handler. Null outside event handling.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.HasSubscribedToEvent(Urho.StringHash)">
             <summary>
             Return whether has subscribed to an event without specific sender.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.HasSubscribedToEvent(Urho.UrhoObject,Urho.StringHash)">
             <summary>
             Return whether has subscribed to a specific sender's event.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.HasEventHandlers">
             <summary>
             Return whether has subscribed to any event.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.GetCategory">
             <summary>
             Return object category. Categories are (optionally) registered along with the object factory. Return an empty string if the object category is not registered.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.SetBlockEvents(System.Boolean)">
             <summary>
             Block object from sending and receiving events.
             </summary>
            </member>
        <member name="M:Urho.UrhoObject.GetBlockEvents">
             <summary>
             Return sending and receiving events blocking status.
             </summary>
            </member>
        <member name="P:Urho.UrhoObject.Type">
             <summary>
             Return type hash.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoObject.TypeName">
             <summary>
             Return type name.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoObject.TypeInfo">
             <summary>
             Return type info.
             </summary>
            </member>
        <member name="P:Urho.UrhoObject.TypeInfoStatic">
             <summary>
             Return type info static.
             </summary>
            </member>
        <member name="P:Urho.UrhoObject.Context">
             <summary>
             Return execution context.
             </summary>
            </member>
        <member name="P:Urho.UrhoObject.EventSender">
             <summary>
             Return active event sender. Null outside event handling.
             </summary>
            </member>
        <member name="P:Urho.UrhoObject.EventHandler">
             <summary>
             Return active event handler. Null outside event handling.
             </summary>
            </member>
        <member name="P:Urho.UrhoObject.Category">
             <summary>
             Return object category. Categories are (optionally) registered along with the object factory. Return an empty string if the object category is not registered.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoObject.BlockEvents">
             <summary>
             Return sending and receiving events blocking status.
             Or
             Block object from sending and receiving events.
             </summary>
            </member>
        <member name="T:Urho.Octree">
             <summary>
             %Octree component. Should be added only to the root scene node.
             </summary>
            </member>
        <member name="M:Urho.Octree.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Octree.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Octree.SetSize(Urho.BoundingBox,System.UInt32)">
             <summary>
             Set size and maximum subdivision levels. If octree is not empty, drawable objects will be temporarily moved to the root.
             </summary>
            </member>
        <member name="M:Urho.Octree.AddManualDrawable(Urho.Drawable)">
             <summary>
             Add a drawable manually.
             </summary>
            </member>
        <member name="M:Urho.Octree.RemoveManualDrawable(Urho.Drawable)">
             <summary>
             Remove a manually added drawable.
             </summary>
            </member>
        <member name="M:Urho.Octree.GetNumLevels">
             <summary>
             Return subdivision levels.
             
             </summary>
            </member>
        <member name="M:Urho.Octree.QueueUpdate(Urho.Drawable)">
             <summary>
             Mark drawable object as requiring an update and a reinsertion.
             </summary>
            </member>
        <member name="M:Urho.Octree.CancelUpdate(Urho.Drawable)">
             <summary>
             Cancel drawable object's update.
             </summary>
            </member>
        <member name="M:Urho.Octree.DrawDebugGeometry(System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="P:Urho.Octree.NumLevels">
             <summary>
             Return subdivision levels.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.PhysicsWorld2D">
             <summary>
             2D physics simulation world component. Should be added only to the root scene node.
             </summary>
             <summary>
             2D physics simulation world component. Should be added only to the root scene node.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.Update(System.Single)">
             <summary>
             Step the simulation forward.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.DrawDebugGeometry">
             <summary>
             Add debug geometry to the debug renderer.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetUpdateEnabled(System.Boolean)">
             <summary>
             Enable or disable automatic physics simulation during scene update. Enabled by default.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetDrawShape(System.Boolean)">
             <summary>
             Set draw shape.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetDrawJoint(System.Boolean)">
             <summary>
             Set draw joint.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetDrawAabb(System.Boolean)">
             <summary>
             Set draw aabb.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetDrawPair(System.Boolean)">
             <summary>
             Set draw pair.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetDrawCenterOfMass(System.Boolean)">
             <summary>
             Set draw center of mass.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetAllowSleeping(System.Boolean)">
             <summary>
             Set allow sleeping.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetWarmStarting(System.Boolean)">
             <summary>
             Set warm starting.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetContinuousPhysics(System.Boolean)">
             <summary>
             Set continuous physics.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetSubStepping(System.Boolean)">
             <summary>
             Set sub stepping.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetGravity(Urho.Vector2)">
             <summary>
             Set gravity.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetAutoClearForces(System.Boolean)">
             <summary>
             Set auto clear forces.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetVelocityIterations(System.Int32)">
             <summary>
             Set velocity iterations.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetPositionIterations(System.Int32)">
             <summary>
             Set position iterations.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.AddRigidBody(Urho.Urho2D.RigidBody2D)">
             <summary>
             Add rigid body.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.RemoveRigidBody(Urho.Urho2D.RigidBody2D)">
             <summary>
             Remove rigid body.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetRigidBody(Urho.Vector2,System.UInt32)">
             <summary>
             Return rigid body at point.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetRigidBody(System.Int32,System.Int32,System.UInt32)">
             <summary>
             Return rigid body at screen point.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.IsUpdateEnabled">
             <summary>
             Return whether physics world will automatically simulate during scene update.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetDrawShape">
             <summary>
             Return draw shape.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetDrawJoint">
             <summary>
             Return draw joint.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetDrawAabb">
             <summary>
             Return draw aabb.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetDrawPair">
             <summary>
             Return draw pair.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetDrawCenterOfMass">
             <summary>
             Return draw center of mass.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetAllowSleeping">
             <summary>
             Return allow sleeping.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetWarmStarting">
             <summary>
             Return warm starting.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetContinuousPhysics">
             <summary>
             Return continuous physics.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetSubStepping">
             <summary>
             Return sub stepping.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetAutoClearForces">
             <summary>
             Return auto clear forces.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetGravity">
             <summary>
             Return gravity.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetVelocityIterations">
             <summary>
             Return velocity iterations.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.GetPositionIterations">
             <summary>
             Return position iterations.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.SetApplyingTransforms(System.Boolean)">
             <summary>
             Set node dirtying to be disregarded.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PhysicsWorld2D.IsApplyingTransforms">
             <summary>
             Return whether node dirtying should be disregarded.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.UpdateEnabled">
             <summary>
             Return whether physics world will automatically simulate during scene update.
             
             Or
             Enable or disable automatic physics simulation during scene update. Enabled by default.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.DrawShape">
             <summary>
             Return draw shape.
             
             Or
             Set draw shape.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.DrawJoint">
             <summary>
             Return draw joint.
             
             Or
             Set draw joint.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.DrawAabb">
             <summary>
             Return draw aabb.
             
             Or
             Set draw aabb.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.DrawPair">
             <summary>
             Return draw pair.
             
             Or
             Set draw pair.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.DrawCenterOfMass">
             <summary>
             Return draw center of mass.
             
             Or
             Set draw center of mass.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.AllowSleeping">
             <summary>
             Return allow sleeping.
             
             Or
             Set allow sleeping.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.WarmStarting">
             <summary>
             Return warm starting.
             
             Or
             Set warm starting.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.ContinuousPhysics">
             <summary>
             Return continuous physics.
             
             Or
             Set continuous physics.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.SubStepping">
             <summary>
             Return sub stepping.
             
             Or
             Set sub stepping.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.Gravity">
             <summary>
             Return gravity.
             
             Or
             Set gravity.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.AutoClearForces">
             <summary>
             Return auto clear forces.
             
             Or
             Set auto clear forces.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.VelocityIterations">
             <summary>
             Return velocity iterations.
             
             Or
             Set velocity iterations.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.PositionIterations">
             <summary>
             Return position iterations.
             
             Or
             Set position iterations.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.PhysicsWorld2D.ApplyingTransforms">
             <summary>
             Return whether node dirtying should be disregarded.
             Or
             Set node dirtying to be disregarded.
             </summary>
            </member>
        <member name="T:Urho.Polyhedron">
             <summary>
             A convex volume built from polygon faces.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.Define(Urho.BoundingBox)">
             <summary>
             Define from a bounding box.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.Define(Urho.Frustum)">
             <summary>
             Define from a frustum.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.AddFace(Urho.Vector3,Urho.Vector3,Urho.Vector3)">
             <summary>
             Add a triangle face.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.AddFace(Urho.Vector3,Urho.Vector3,Urho.Vector3,Urho.Vector3)">
             <summary>
             Add a quadrilateral face.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.Clip(Urho.Plane)">
             <summary>
             Clip with a plane.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.Clip(Urho.BoundingBox)">
             <summary>
             Clip with a bounding box.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.Clip(Urho.Frustum)">
             <summary>
             Clip with a frustum.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.Clear">
             <summary>
             Clear all faces.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.Transform(Urho.Matrix3)">
             <summary>
             Transform with a 3x3 matrix.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.Transform(Urho.Matrix3x4)">
             <summary>
             Transform with a 3x4 matrix.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.Transformed(Urho.Matrix3)">
             <summary>
             Return transformed with a 3x3 matrix.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.Transformed(Urho.Matrix3x4)">
             <summary>
             Return transformed with a 3x4 matrix.
             </summary>
            </member>
        <member name="M:Urho.Polyhedron.Empty">
             <summary>
             Return whether is empty.
             </summary>
            </member>
        <member name="T:Urho.Profiler">
             <summary>
             Hierarchical performance profiler subsystem.
             </summary>
             <summary>
             Hierarchical performance profiler subsystem.
             </summary>
            </member>
        <member name="M:Urho.Profiler.BeginBlock(System.String)">
             <summary>
             Begin timing a profiling block..
             </summary>
            </member>
        <member name="M:Urho.Profiler.EndBlock">
             <summary>
             End timing the current profiling block.
             </summary>
            </member>
        <member name="M:Urho.Profiler.BeginFrame">
             <summary>
             Begin the profiling frame. Called by HandleBeginFrame().
             </summary>
            </member>
        <member name="M:Urho.Profiler.EndFrame">
             <summary>
             End the profiling frame. Called by HandleEndFrame().
             </summary>
            </member>
        <member name="M:Urho.Profiler.BeginInterval">
             <summary>
             Begin a new interval.
             </summary>
            </member>
        <member name="M:Urho.Profiler.PrintData(System.Boolean,System.Boolean,System.UInt32)">
             <summary>
             Return profiling data as text output. This method is not thread-safe.
             </summary>
            </member>
        <member name="M:Urho.Profiler.GetCurrentBlock">
             <summary>
             Return the current profiling block.
             </summary>
            </member>
        <member name="M:Urho.Profiler.GetRootBlock">
             <summary>
             Return the root profiling block.
             </summary>
            </member>
        <member name="P:Urho.Profiler.CurrentBlock">
             <summary>
             Return the current profiling block.
             </summary>
            </member>
        <member name="P:Urho.Profiler.RootBlock">
             <summary>
             Return the root profiling block.
             </summary>
            </member>
        <member name="T:Urho.RefCount">
             <summary>
             Reference count structure.
             </summary>
            </member>
        <member name="T:Urho.RefCounted">
             <summary>
             Base class for intrusively reference-counted objects. These are noncopyable and non-assignable.
             </summary>
            </member>
        <member name="M:Urho.RefCounted.HandleNativeDelete">
             <summary>
             Called by RefCounted::~RefCounted - we don't need to check Refs here - just mark it as deleted and remove from cache
             </summary>
            </member>
        <member name="M:Urho.RefCounted.DeleteNativeObject">
             <summary>
             Try to delete underlying native object if nobody uses it (Refs==0)
             </summary>
            </member>
        <member name="P:Urho.RefCounted.IsDeleted">
             <summary>
             True if underlying native object is deleted
             </summary>
            </member>
        <member name="M:Urho.RefCounted.AddRef">
             <summary>
             Increment reference count. Can also be called outside of a SharedPtr for traditional reference counting.
             </summary>
            </member>
        <member name="M:Urho.RefCounted.ReleaseRef">
             <summary>
             Decrement reference count and delete self if no more references. Can also be called outside of a SharedPtr for traditional reference counting.
             </summary>
            </member>
        <member name="M:Urho.RefCounted.Refs">
             <summary>
             Return reference count.
             
             </summary>
            </member>
        <member name="M:Urho.RefCounted.WeakRefs">
             <summary>
             Return weak reference count.
             
             </summary>
            </member>
        <member name="M:Urho.RefCounted.RefCountPtr">
             <summary>
             Return pointer to the reference count structure.
             </summary>
            </member>
        <member name="T:Urho.RenderPath">
             <summary>
             Rendering path definition. A sequence of commands (e.g. clear screen, draw objects with specific pass) that yields the scene rendering result.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.Clone">
             <summary>
             Clone the rendering path.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.Load(Urho.Resources.XmlFile)">
             <summary>
             Clear existing data and load from an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.Append(Urho.Resources.XmlFile)">
             <summary>
             Append data from an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetEnabled(System.String,System.Boolean)">
             <summary>
             Enable/disable commands and rendertargets by tag.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.IsEnabled(System.String)">
             <summary>
             Return true of any of render targets or commands with specified tag are enabled.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.IsAdded(System.String)">
             <summary>
             Return true if renderpath or command with given tag exists.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.ToggleEnabled(System.String)">
             <summary>
             Toggle enabled state of commands and rendertargets by tag.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.RemoveRenderTarget(System.UInt32)">
             <summary>
             Remove a rendertarget by index.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.RemoveRenderTarget(System.String)">
             <summary>
             Remove a rendertarget by name.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.RemoveRenderTargets(System.String)">
             <summary>
             Remove rendertargets by tag name.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetCommand(System.UInt32,Urho.RenderPathCommand)">
             <summary>
             Assign command at index.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.AddCommand(Urho.RenderPathCommand)">
             <summary>
             Add a command to the end of the list.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.InsertCommand(System.UInt32,Urho.RenderPathCommand)">
             <summary>
             Insert a command at a position.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.RemoveCommand(System.UInt32)">
             <summary>
             Remove a command by index.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.RemoveCommands(System.String)">
             <summary>
             Remove commands by tag name.
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,Urho.Vector3)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,Urho.IntRect)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,Urho.Color)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,Urho.Vector2)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,Urho.Vector4)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,Urho.IntVector2)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,Urho.Quaternion)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,Urho.Matrix4)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,Urho.Matrix3)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,Urho.Matrix3x4)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,System.Int32)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,System.Single)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,System.String)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.SetShaderParameter(System.String,System.Boolean)">
             <summary>
             Set a shader parameter in all commands that define it.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.GetNumRenderTargets">
             <summary>
             Return number of rendertargets.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.GetNumCommands">
             <summary>
             Return number of commands.
             
             </summary>
            </member>
        <member name="M:Urho.RenderPath.GetCommand(System.UInt32)">
             <summary>
             Return command at index, or null if does not exist.
             </summary>
            </member>
        <member name="P:Urho.RenderPath.NumRenderTargets">
             <summary>
             Return number of rendertargets.
             
             </summary>
            </member>
        <member name="P:Urho.RenderPath.NumCommands">
             <summary>
             Return number of commands.
             
             </summary>
            </member>
        <member name="T:Urho.Resources.ResourceCache">
             <summary>
             %Resource cache subsystem. Loads resources on demand and stores them for later access.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.AddResourceDir(System.String,System.UInt32)">
             <summary>
             Add a resource load directory. Optional priority parameter which will control search order.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.AddPackageFile(Urho.IO.PackageFile,System.UInt32)">
             <summary>
             Add a package file for loading resources from. Optional priority parameter which will control search order.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.AddPackageFile(System.String,System.UInt32)">
             <summary>
             Add a package file for loading resources from by name. Optional priority parameter which will control search order.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.AddManualResource(Urho.Resources.Resource)">
             <summary>
             Add a manually created resource. Must be uniquely named within its type.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.RemoveResourceDir(System.String)">
             <summary>
             Remove a resource load directory.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.RemovePackageFile(Urho.IO.PackageFile,System.Boolean,System.Boolean)">
             <summary>
             Remove a package file. Optionally release the resources loaded from it.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.RemovePackageFile(System.String,System.Boolean,System.Boolean)">
             <summary>
             Remove a package file by name. Optionally release the resources loaded from it.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.ReleaseResource(Urho.StringHash,System.String,System.Boolean)">
             <summary>
             Release a resource by name.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.ReleaseResources(Urho.StringHash,System.Boolean)">
             <summary>
             Release all resources of a specific type.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.ReleaseResources(Urho.StringHash,System.String,System.Boolean)">
             <summary>
             Release resources of a specific type and partial name.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.ReleaseResources(System.String,System.Boolean)">
             <summary>
             Release resources of all types by partial name.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.ReleaseAllResources(System.Boolean)">
             <summary>
             Release all resources. When called with the force flag false, releases all currently unused resources.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.ReloadResource(Urho.Resources.Resource)">
             <summary>
             Reload a resource. Return true on success. The resource will not be removed from the cache in case of failure.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.ReloadResourceWithDependencies(System.String)">
             <summary>
             Reload a resource based on filename. Causes also reload of dependent resources if necessary.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.SetMemoryBudget(Urho.StringHash,System.UInt64)">
             <summary>
             Set memory budget for a specific resource type, default 0 is unlimited.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.SetAutoReloadResources(System.Boolean)">
             <summary>
             Enable or disable automatic reloading of resources as files are modified. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.SetReturnFailedResources(System.Boolean)">
             <summary>
             Enable or disable returning resources that failed to load. Default false. This may be useful in editing to not lose resource ref attributes.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.SetSearchPackagesFirst(System.Boolean)">
             <summary>
             Define whether when getting resources should check package files or directories first. True for packages, false for directories.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.SetFinishBackgroundResourcesMs(System.Int32)">
             <summary>
             Set how many milliseconds maximum per frame to spend on finishing background loaded resources.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.AddResourceRouter(Urho.ResourceRouter,System.Boolean)">
             <summary>
             Add a resource router object. By default there is none, so the routing process is skipped.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.RemoveResourceRouter(Urho.ResourceRouter)">
             <summary>
             Remove a resource router object.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetFile(System.String,System.Boolean)">
             <summary>
             Open and return a file from the resource load paths or from inside a package file. If not found, use a fallback search with absolute path. Return null if fails. Can be called from outside the main thread.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetResource(Urho.StringHash,System.String,System.Boolean)">
             <summary>
             Return a resource by type and name. Load if not loaded yet. Return null if not found or if fails, unless SetReturnFailedResources(true) has been called. Can be called only from the main thread.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetTempResource(Urho.StringHash,System.String,System.Boolean)">
             <summary>
             Load a resource without storing it in the resource cache. Return null if not found or if fails. Can be called from outside the main thread if the resource itself is safe to load completely (it does not possess for example GPU data).
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.BackgroundLoadResource(Urho.StringHash,System.String,System.Boolean,Urho.Resources.Resource)">
             <summary>
             Background load a resource. An event will be sent when complete. Return true if successfully stored to the load queue, false if eg. already exists. Can be called from outside the main thread.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetNumBackgroundLoadResources">
             <summary>
             Return number of pending background-loaded resources.
             
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Resources.ResourceCache.GetExistingResource(Urho.StringHash,System.String)-->
        <member name="M:Urho.Resources.ResourceCache.GetPackageFiles">
             <summary>
             Return added package files.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.Exists(System.String)">
             <summary>
             Return whether a file exists in the resource directories or package files. Does not check manually added in-memory resources.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetMemoryBudget(Urho.StringHash)">
             <summary>
             Return memory budget for a resource type.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetMemoryUse(Urho.StringHash)">
             <summary>
             Return total memory use for a resource type.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetTotalMemoryUse">
             <summary>
             Return total memory use for all resources.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetResourceFileName(System.String)">
             <summary>
             Return full absolute file name of resource if possible, or empty if not found.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetAutoReloadResources">
             <summary>
             Return whether automatic resource reloading is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetReturnFailedResources">
             <summary>
             Return whether resources that failed to load are returned.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetSearchPackagesFirst">
             <summary>
             Return whether when getting resources should check package files or directories first.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetFinishBackgroundResourcesMs">
             <summary>
             Return how many milliseconds maximum to spend on finishing background loaded resources.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetResourceRouter(System.UInt32)">
             <summary>
             Return a resource router by index.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.GetPreferredResourceDir(System.String)">
             <summary>
             Return either the path itself or its parent, based on which of them has recognized resource subdirectories.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.SanitateResourceName(System.String)">
             <summary>
             Remove unsupported constructs from the resource name to prevent ambiguity, and normalize absolute filename to resource path relative if possible.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.SanitateResourceDirName(System.String)">
             <summary>
             Remove unnecessary constructs from a resource directory name and ensure it to be an absolute path.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.StoreResourceDependency(Urho.Resources.Resource,System.String)">
             <summary>
             Store a dependency for a resource. If a dependency file changes, the resource will be reloaded.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.ResetDependencies(Urho.Resources.Resource)">
             <summary>
             Reset dependencies for a resource.
             </summary>
            </member>
        <member name="M:Urho.Resources.ResourceCache.PrintMemoryUsage">
             <summary>
             Returns a formatted string containing the memory actively used.
             </summary>
            </member>
        <member name="P:Urho.Resources.ResourceCache.AutoReloadResources">
             <summary>
             Return whether automatic resource reloading is enabled.
             
             Or
             Enable or disable automatic reloading of resources as files are modified. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.ResourceCache.ReturnFailedResources">
             <summary>
             Return whether resources that failed to load are returned.
             
             Or
             Enable or disable returning resources that failed to load. Default false. This may be useful in editing to not lose resource ref attributes.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.ResourceCache.SearchPackagesFirst">
             <summary>
             Return whether when getting resources should check package files or directories first.
             
             Or
             Define whether when getting resources should check package files or directories first. True for packages, false for directories.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.ResourceCache.FinishBackgroundResourcesMs">
             <summary>
             Return how many milliseconds maximum to spend on finishing background loaded resources.
             
             Or
             Set how many milliseconds maximum per frame to spend on finishing background loaded resources.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.ResourceCache.NumBackgroundLoadResources">
             <summary>
             Return number of pending background-loaded resources.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.ResourceCache.PackageFiles">
             <summary>
             Return added package files.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.ResourceCache.TotalMemoryUse">
             <summary>
             Return total memory use for all resources.
             
             </summary>
            </member>
        <member name="F:Urho.SDL_Scancode.SDL_SCANCODE_A">
            
            
            		 *  \name Usage page 0x07
            		 *
            		 *  These values are from usage page 0x07 (USB keyboard page).
            		 </member>
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_NONUSHASH-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_SEMICOLON-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_COMMA-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_HOME-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_KP_DIVIDE-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_APPLICATION-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_POWER-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_KP_EQUALS-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_UNDO-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_INTERNATIONAL2-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_INTERNATIONAL4-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_LANG2-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_LANG3-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_LANG4-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_LANG5-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_LANG6-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_LANG7-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_LANG8-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_LANG9-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_ALTERASE-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_SYSREQ-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_LGUI-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_RCTRL-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_RGUI-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_MODE-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_AUDIONEXT-->
        <member name="F:Urho.SDL_Scancode.SDL_SCANCODE_BRIGHTNESSDOWN">
            
            
            		 *  \name Walther keys
            		 *
            		 *  These are values that Christian Walther added (for mac keyboard?).
            		 </member>
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SDL_Scancode.SDL_SCANCODE_KBDILLUMTOGGLE-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_QUIT-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_APP_TERMINATING-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_APP_LOWMEMORY-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_APP_WILLENTERBACKGROUND-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_APP_DIDENTERBACKGROUND-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_APP_WILLENTERFOREGROUND-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_APP_DIDENTERFOREGROUND-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_WINDOWEVENT-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_SYSWMEVENT-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_KEYDOWN-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_KEYUP-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_TEXTEDITING-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_TEXTINPUT-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_MOUSEMOTION-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_MOUSEBUTTONDOWN-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_MOUSEBUTTONUP-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_MOUSEWHEEL-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_JOYAXISMOTION-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_JOYBALLMOTION-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_JOYHATMOTION-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_JOYBUTTONDOWN-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_JOYBUTTONUP-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_JOYDEVICEADDED-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_JOYDEVICEREMOVED-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_CONTROLLERAXISMOTION-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_CONTROLLERBUTTONDOWN-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_CONTROLLERBUTTONUP-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_CONTROLLERDEVICEADDED-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_CONTROLLERDEVICEREMOVED-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_CONTROLLERDEVICEREMAPPED-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_FINGERDOWN-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_DROPFILE-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_RENDER_TARGETS_RESET-->
        <!--FIXME: Invalid documentation markup was found for member F:Urho.SdlEventType.SDL_USEREVENT-->
        <member name="F:Urho.SdlEventType.SDL_LASTEVENT">
            
            
            		 *  This last event is only for bounding internal arrays
            		 </member>
        <member name="T:Urho.Scene">
             <summary>
             Root scene node, represents the whole scene.
             </summary>
            </member>
        <member name="M:Urho.Scene.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. Node must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.Load(Urho.IO.File)">
             <summary>
             Load from binary data. Removes all existing child nodes and components first. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.Load(Urho.MemoryBuffer)">
             <summary>
             Load from binary data. Removes all existing child nodes and components first. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.Save(Urho.IO.File)">
             <summary>
             Save to binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.Save(Urho.MemoryBuffer)">
             <summary>
             Save to binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.LoadXml(Urho.Resources.XmlElement)">
             <summary>
             Load from XML data. Removes all existing child nodes and components first. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.MarkNetworkUpdate">
             <summary>
             Mark for attribute check on the next network update.
             </summary>
            </member>
        <member name="M:Urho.Scene.AddReplicationState(Urho.Network.NodeReplicationState*)">
             <summary>
             Add a replication state that is tracking this scene.
             </summary>
            </member>
        <member name="M:Urho.Scene.LoadXml(Urho.IO.File)">
             <summary>
             Load from an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.LoadXml(Urho.MemoryBuffer)">
             <summary>
             Load from an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.LoadJson(Urho.IO.File)">
             <summary>
             Load from a JSON file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.LoadJson(Urho.MemoryBuffer)">
             <summary>
             Load from a JSON file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.SaveXml(Urho.IO.File,System.String)">
             <summary>
             Save to an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.SaveXml(Urho.MemoryBuffer,System.String)">
             <summary>
             Save to an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.SaveJson(Urho.IO.File,System.String)">
             <summary>
             Save to a JSON file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.SaveJson(Urho.MemoryBuffer,System.String)">
             <summary>
             Save to a JSON file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.LoadAsync(Urho.IO.File,Urho.LoadMode)">
             <summary>
             Load from a binary file asynchronously. Return true if started successfully. The LOAD_RESOURCES_ONLY mode can also be used to preload resources from object prefab files.
             </summary>
            </member>
        <member name="M:Urho.Scene.LoadAsyncXml(Urho.IO.File,Urho.LoadMode)">
             <summary>
             Load from an XML file asynchronously. Return true if started successfully. The LOAD_RESOURCES_ONLY mode can also be used to preload resources from object prefab files.
             </summary>
            </member>
        <member name="M:Urho.Scene.LoadAsyncJson(Urho.IO.File,Urho.LoadMode)">
             <summary>
             Load from a JSON file asynchronously. Return true if started successfully. The LOAD_RESOURCES_ONLY mode can also be used to preload resources from object prefab files.
             </summary>
            </member>
        <member name="M:Urho.Scene.StopAsyncLoading">
             <summary>
             Stop asynchronous loading.
             </summary>
            </member>
        <member name="M:Urho.Scene.Instantiate(Urho.IO.File,Urho.Vector3,Urho.Quaternion,Urho.CreateMode)">
             <summary>
             Instantiate scene content from binary data. Return root node if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.Instantiate(Urho.MemoryBuffer,Urho.Vector3,Urho.Quaternion,Urho.CreateMode)">
             <summary>
             Instantiate scene content from binary data. Return root node if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.InstantiateXml(Urho.Resources.XmlElement,Urho.Vector3,Urho.Quaternion,Urho.CreateMode)">
             <summary>
             Instantiate scene content from XML data. Return root node if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.InstantiateXml(Urho.IO.File,Urho.Vector3,Urho.Quaternion,Urho.CreateMode)">
             <summary>
             Instantiate scene content from XML data. Return root node if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.InstantiateXml(Urho.MemoryBuffer,Urho.Vector3,Urho.Quaternion,Urho.CreateMode)">
             <summary>
             Instantiate scene content from XML data. Return root node if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.InstantiateJson(Urho.IO.File,Urho.Vector3,Urho.Quaternion,Urho.CreateMode)">
             <summary>
             Instantiate scene content from JSON data. Return root node if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.InstantiateJson(Urho.MemoryBuffer,Urho.Vector3,Urho.Quaternion,Urho.CreateMode)">
             <summary>
             Instantiate scene content from JSON data. Return root node if successful.
             </summary>
            </member>
        <member name="M:Urho.Scene.Clear(System.Boolean,System.Boolean)">
             <summary>
             Clear scene completely of either replicated, local or all nodes and components.
             </summary>
            </member>
        <member name="M:Urho.Scene.SetUpdateEnabled(System.Boolean)">
             <summary>
             Enable or disable scene update.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.SetTimeScale(System.Single)">
             <summary>
             Set update time scale. 1.0 = real time (default).
             
             </summary>
            </member>
        <member name="M:Urho.Scene.SetElapsedTime(System.Single)">
             <summary>
             Set elapsed time in seconds. This can be used to prevent inaccuracy in the timer if the scene runs for a long time.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.SetSmoothingConstant(System.Single)">
             <summary>
             Set network client motion smoothing constant.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.SetSnapThreshold(System.Single)">
             <summary>
             Set network client motion smoothing snap threshold.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.SetAsyncLoadingMs(System.Int32)">
             <summary>
             Set maximum milliseconds per frame to spend on async scene loading.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.AddRequiredPackageFile(Urho.IO.PackageFile)">
             <summary>
             Add a required package file for networking. To be called on the server.
             </summary>
            </member>
        <member name="M:Urho.Scene.ClearRequiredPackageFiles">
             <summary>
             Clear required package files.
             </summary>
            </member>
        <member name="M:Urho.Scene.RegisterVar(System.String)">
             <summary>
             Register a node user variable hash reverse mapping (for editing).
             </summary>
            </member>
        <member name="M:Urho.Scene.UnregisterVar(System.String)">
             <summary>
             Unregister a node user variable hash reverse mapping.
             </summary>
            </member>
        <member name="M:Urho.Scene.UnregisterAllVars">
             <summary>
             Clear all registered node user variable hash reverse mappings.
             </summary>
            </member>
        <member name="M:Urho.Scene.GetNode(System.UInt32)">
             <summary>
             Return node from the whole scene by ID, or null if not found.
             </summary>
            </member>
        <member name="M:Urho.Scene.GetComponent(System.UInt32)">
             <summary>
             Return component from the whole scene by ID, or null if not found.
             </summary>
            </member>
        <member name="M:Urho.Scene.IsUpdateEnabled">
             <summary>
             Return whether updates are enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.IsAsyncLoading">
             <summary>
             Return whether an asynchronous loading operation is in progress.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.GetAsyncProgress">
             <summary>
             Return asynchronous loading progress between 0.0 and 1.0, or 1.0 if not in progress.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.GetAsyncLoadMode">
             <summary>
             Return the load mode of the current asynchronous loading operation.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.GetFileName">
             <summary>
             Return source file name.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.GetChecksum">
             <summary>
             Return source file checksum.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.GetTimeScale">
             <summary>
             Return update time scale.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.GetElapsedTime">
             <summary>
             Return elapsed time in seconds.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.GetSmoothingConstant">
             <summary>
             Return motion smoothing constant.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.GetSnapThreshold">
             <summary>
             Return motion smoothing snap threshold.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.GetAsyncLoadingMs">
             <summary>
             Return maximum milliseconds per frame to spend on async loading.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.GetRequiredPackageFiles">
             <summary>
             Return required package files.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.GetVarName(Urho.StringHash)">
             <summary>
             Return a node user variable name, or empty if not registered.
             </summary>
            </member>
        <member name="M:Urho.Scene.Update(System.Single)">
             <summary>
             Update scene. Called by HandleUpdate.
             </summary>
            </member>
        <member name="M:Urho.Scene.BeginThreadedUpdate">
             <summary>
             Begin a threaded update. During threaded update components can choose to delay dirty processing.
             </summary>
            </member>
        <member name="M:Urho.Scene.EndThreadedUpdate">
             <summary>
             End a threaded update. Notify components that marked themselves for delayed dirty processing.
             </summary>
            </member>
        <member name="M:Urho.Scene.DelayedMarkedDirty(Urho.Component)">
             <summary>
             Add a component to the delayed dirty notify queue. Is thread-safe.
             </summary>
            </member>
        <member name="M:Urho.Scene.IsThreadedUpdate">
             <summary>
             Return threaded update flag.
             </summary>
            </member>
        <member name="M:Urho.Scene.GetFreeNodeID(Urho.CreateMode)">
             <summary>
             Get free node ID, either non-local or local.
             </summary>
            </member>
        <member name="M:Urho.Scene.GetFreeComponentID(Urho.CreateMode)">
             <summary>
             Get free component ID, either non-local or local.
             </summary>
            </member>
        <member name="M:Urho.Scene.IsReplicatedID(System.UInt32)">
             <summary>
             Return whether the specified id is a replicated id.
             </summary>
            </member>
        <member name="M:Urho.Scene.NodeTagAdded(Urho.Node,System.String)">
             <summary>
             Cache node by tag if tag not zero, no checking if already added. Used internaly in Node::AddTag.
             </summary>
            </member>
        <member name="M:Urho.Scene.NodeTagRemoved(Urho.Node,System.String)">
             <summary>
             Cache node by tag if tag not zero.
             </summary>
            </member>
        <member name="M:Urho.Scene.SetVarNamesAttr(System.String)">
             <summary>
             Set node user variable reverse mappings.
             </summary>
            </member>
        <member name="M:Urho.Scene.GetVarNamesAttr">
             <summary>
             Return node user variable reverse mappings.
             </summary>
            </member>
        <member name="M:Urho.Scene.PrepareNetworkUpdate">
             <summary>
             Prepare network update by comparing attributes and marking replication states dirty as necessary.
             </summary>
            </member>
        <member name="M:Urho.Scene.CleanupConnection(Urho.Network.Connection)">
             <summary>
             Clean up all references to a network connection that is about to be removed.
             
             </summary>
            </member>
        <member name="M:Urho.Scene.MarkNetworkUpdate(Urho.Node)">
             <summary>
             Mark a node for attribute check on the next network update.
             </summary>
            </member>
        <member name="M:Urho.Scene.MarkNetworkUpdate(Urho.Component)">
             <summary>
             Mark a component for attribute check on the next network update.
             </summary>
            </member>
        <member name="M:Urho.Scene.MarkReplicationDirty(Urho.Node)">
             <summary>
             Mark a node dirty in scene replication states. The node does not need to have own replication state yet.
             </summary>
            </member>
        <member name="P:Urho.Scene.UpdateEnabled">
             <summary>
             Return whether updates are enabled.
             
             Or
             Enable or disable scene update.
             
             </summary>
            </member>
        <member name="P:Urho.Scene.TimeScale">
             <summary>
             Return update time scale.
             
             Or
             Set update time scale. 1.0 = real time (default).
             
             </summary>
            </member>
        <member name="P:Urho.Scene.ElapsedTime">
             <summary>
             Return elapsed time in seconds.
             
             Or
             Set elapsed time in seconds. This can be used to prevent inaccuracy in the timer if the scene runs for a long time.
             
             </summary>
            </member>
        <member name="P:Urho.Scene.SmoothingConstant">
             <summary>
             Return motion smoothing constant.
             
             Or
             Set network client motion smoothing constant.
             
             </summary>
            </member>
        <member name="P:Urho.Scene.SnapThreshold">
             <summary>
             Return motion smoothing snap threshold.
             
             Or
             Set network client motion smoothing snap threshold.
             
             </summary>
            </member>
        <member name="P:Urho.Scene.AsyncLoadingMs">
             <summary>
             Return maximum milliseconds per frame to spend on async loading.
             
             Or
             Set maximum milliseconds per frame to spend on async scene loading.
             
             </summary>
            </member>
        <member name="P:Urho.Scene.AsyncLoading">
             <summary>
             Return whether an asynchronous loading operation is in progress.
             
             </summary>
            </member>
        <member name="P:Urho.Scene.AsyncProgress">
             <summary>
             Return asynchronous loading progress between 0.0 and 1.0, or 1.0 if not in progress.
             
             </summary>
            </member>
        <member name="P:Urho.Scene.AsyncLoadMode">
             <summary>
             Return the load mode of the current asynchronous loading operation.
             
             </summary>
            </member>
        <member name="P:Urho.Scene.FileName">
             <summary>
             Return source file name.
             
             </summary>
            </member>
        <member name="P:Urho.Scene.Checksum">
             <summary>
             Return source file checksum.
             
             </summary>
            </member>
        <member name="P:Urho.Scene.RequiredPackageFiles">
             <summary>
             Return required package files.
             
             </summary>
            </member>
        <member name="P:Urho.Scene.ThreadedUpdate">
             <summary>
             Return threaded update flag.
             </summary>
            </member>
        <member name="P:Urho.Scene.VarNamesAttr">
             <summary>
             Return node user variable reverse mappings.
             </summary>
            </member>
        <member name="T:Urho.Serializable">
             <summary>
             Base class for objects with automatic serialization through attributes.
             </summary>
             <summary>
             Base class for objects with automatic serialization through attributes.
             </summary>
            </member>
        <member name="M:Urho.Serializable.Load(Urho.IO.File)">
             <summary>
             Load from binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Serializable.Load(Urho.MemoryBuffer)">
             <summary>
             Load from binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Serializable.Save(Urho.IO.File)">
             <summary>
             Save as binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Serializable.Save(Urho.MemoryBuffer)">
             <summary>
             Save as binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Serializable.LoadXml(Urho.Resources.XmlElement)">
             <summary>
             Load from XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SaveXml(Urho.Resources.XmlElement)">
             <summary>
             Save as XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Serializable.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SaveDefaultAttributes">
             <summary>
             Return whether should save default-valued attributes into XML. Default false.
             </summary>
            </member>
        <member name="M:Urho.Serializable.MarkNetworkUpdate">
             <summary>
             Mark for attribute check on the next network update.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,Urho.Vector3)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,Urho.IntRect)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,Urho.Color)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,Urho.Vector2)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,Urho.Vector4)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,Urho.IntVector2)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,Urho.Quaternion)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,Urho.Matrix4)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,Urho.Matrix3)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,Urho.Matrix3x4)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,System.Int32)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,System.Single)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,System.String)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.UInt32,System.Boolean)">
             <summary>
             Set attribute by index. Return true if successfully set.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,Urho.Vector3)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,Urho.IntRect)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,Urho.Color)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,Urho.Vector2)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,Urho.Vector4)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,Urho.IntVector2)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,Urho.Quaternion)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,Urho.Matrix4)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,Urho.Matrix3)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,Urho.Matrix3x4)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,System.Int32)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,System.Single)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,System.String)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetAttribute(System.String,System.Boolean)">
             <summary>
             Set attribute by name. Return true if successfully set.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetInstanceDefault(System.Boolean)">
             <summary>
             Set instance-level default flag.
             </summary>
            </member>
        <member name="M:Urho.Serializable.ResetToDefault">
             <summary>
             Reset all editable attributes to their default values.
             </summary>
            </member>
        <member name="M:Urho.Serializable.RemoveInstanceDefault">
             <summary>
             Remove instance's default values if they are set previously.
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetTemporary(System.Boolean)">
             <summary>
             Set temporary flag. Temporary objects will not be saved.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.SetInterceptNetworkUpdate(System.String,System.Boolean)">
             <summary>
             Enable interception of an attribute from network updates. Intercepted attributes are sent as events instead of applying directly. This can be used to implement client side prediction.
             </summary>
            </member>
        <member name="M:Urho.Serializable.AllocateNetworkState">
             <summary>
             Allocate network attribute state.
             </summary>
            </member>
        <member name="M:Urho.Serializable.WriteInitialDeltaUpdate(Urho.IO.File,System.Byte)">
             <summary>
             Write initial delta network update.
             </summary>
            </member>
        <member name="M:Urho.Serializable.WriteInitialDeltaUpdate(Urho.MemoryBuffer,System.Byte)">
             <summary>
             Write initial delta network update.
             </summary>
            </member>
        <member name="M:Urho.Serializable.WriteLatestDataUpdate(Urho.IO.File,System.Byte)">
             <summary>
             Write a latest data network update.
             </summary>
            </member>
        <member name="M:Urho.Serializable.WriteLatestDataUpdate(Urho.MemoryBuffer,System.Byte)">
             <summary>
             Write a latest data network update.
             </summary>
            </member>
        <member name="M:Urho.Serializable.ReadDeltaUpdate(Urho.IO.File)">
             <summary>
             Read and apply a network delta update. Return true if attributes were changed.
             </summary>
            </member>
        <member name="M:Urho.Serializable.ReadDeltaUpdate(Urho.MemoryBuffer)">
             <summary>
             Read and apply a network delta update. Return true if attributes were changed.
             </summary>
            </member>
        <member name="M:Urho.Serializable.ReadLatestDataUpdate(Urho.IO.File)">
             <summary>
             Read and apply a network latest data update. Return true if attributes were changed.
             </summary>
            </member>
        <member name="M:Urho.Serializable.ReadLatestDataUpdate(Urho.MemoryBuffer)">
             <summary>
             Read and apply a network latest data update. Return true if attributes were changed.
             </summary>
            </member>
        <member name="M:Urho.Serializable.GetAttribute(System.UInt32)">
             <summary>
             Return attribute value by index. Return empty if illegal index.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.GetAttribute(System.String)">
             <summary>
             Return attribute value by name. Return empty if not found.
             </summary>
            </member>
        <member name="M:Urho.Serializable.GetAttributeDefault(System.UInt32)">
             <summary>
             Return attribute default value by index. Return empty if illegal index.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.GetAttributeDefault(System.String)">
             <summary>
             Return attribute default value by name. Return empty if not found.
             </summary>
            </member>
        <member name="M:Urho.Serializable.GetNumAttributes">
             <summary>
             Return number of attributes.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.GetNumNetworkAttributes">
             <summary>
             Return number of network replication attributes.
             </summary>
            </member>
        <member name="M:Urho.Serializable.IsTemporary">
             <summary>
             Return whether is temporary.
             
             </summary>
            </member>
        <member name="M:Urho.Serializable.GetInterceptNetworkUpdate(System.String)">
             <summary>
             Return whether an attribute's network updates are being intercepted.
             </summary>
            </member>
        <member name="M:Urho.Serializable.GetNetworkState">
             <summary>
             Return the network attribute state, if allocated.
             </summary>
            </member>
        <member name="P:Urho.Serializable.Temporary">
             <summary>
             Return whether is temporary.
             
             Or
             Set temporary flag. Temporary objects will not be saved.
             
             </summary>
            </member>
        <member name="P:Urho.Serializable.NumAttributes">
             <summary>
             Return number of attributes.
             
             </summary>
            </member>
        <member name="P:Urho.Serializable.NumNetworkAttributes">
             <summary>
             Return number of network replication attributes.
             </summary>
            </member>
        <member name="P:Urho.Serializable.NetworkState">
             <summary>
             Return the network attribute state, if allocated.
             </summary>
            </member>
        <member name="T:Urho.Skeleton">
             <summary>
             Hierarchical collection of bones.
             </summary>
            </member>
        <member name="M:Urho.Skeleton.Load(Urho.IO.File)">
             <summary>
             Read from a stream. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Skeleton.Load(Urho.MemoryBuffer)">
             <summary>
             Read from a stream. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Skeleton.Save(Urho.IO.File)">
             <summary>
             Write to a stream. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Skeleton.Save(Urho.MemoryBuffer)">
             <summary>
             Write to a stream. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Skeleton.SetRootBoneIndex(System.UInt32)">
             <summary>
             Set root bone's index.
             </summary>
            </member>
        <member name="M:Urho.Skeleton.ClearBones">
             <summary>
             Clear bones.
             </summary>
            </member>
        <member name="M:Urho.Skeleton.Reset">
             <summary>
             Reset all animating bones to initial positions.
             </summary>
            </member>
        <member name="M:Urho.Skeleton.GetNumBones">
             <summary>
             Return number of bones.
             
             </summary>
            </member>
        <member name="M:Urho.Skeleton.GetRootBone">
             <summary>
             Return root bone.
             
             </summary>
            </member>
        <member name="M:Urho.Skeleton.GetBoneIndex(System.String)">
             <summary>
             Return index of the bone by name. Return M_MAX_UNSIGNED if not found.
             </summary>
            </member>
        <member name="M:Urho.Skeleton.GetBoneIndex(Urho.Bone*)">
             <summary>
             Return index of the bone by the bone pointer. Return M_MAX_UNSIGNED if not found.
             </summary>
            </member>
        <member name="M:Urho.Skeleton.GetBoneParent(Urho.Bone*)">
             <summary>
             Return parent of the given bone. Return null for root bones.
             </summary>
            </member>
        <member name="M:Urho.Skeleton.GetBone(System.UInt32)">
             <summary>
             Return bone by index.
             
             </summary>
            </member>
        <member name="M:Urho.Skeleton.ResetSilent">
             <summary>
             Reset all animating bones to initial positions without marking the nodes dirty. Requires the node dirtying to be performed later.
             </summary>
            </member>
        <member name="P:Urho.Skeleton.NumBones">
             <summary>
             Return number of bones.
             
             </summary>
            </member>
        <member name="P:Urho.Skeleton.RootBone">
             <summary>
             Return root bone.
             
             </summary>
            </member>
        <member name="T:Urho.AnimatedModel">
             <summary>
             Animated model component.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. Drawable must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.Load(Urho.IO.File)">
             <summary>
             Load from binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.Load(Urho.MemoryBuffer)">
             <summary>
             Load from binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.LoadXml(Urho.Resources.XmlElement)">
             <summary>
             Load from XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetUpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.SetModel(Urho.Model,System.Boolean)">
             <summary>
             Set model.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.AddAnimationState(Urho.Animation)">
             <summary>
             Add an animation.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.RemoveAnimationState(Urho.Animation)">
             <summary>
             Remove an animation by animation pointer.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.RemoveAnimationState(System.String)">
             <summary>
             Remove an animation by animation name.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.RemoveAnimationState(Urho.StringHash)">
             <summary>
             Remove an animation by animation name hash.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.RemoveAnimationState(Urho.AnimationState)">
             <summary>
             Remove an animation by AnimationState pointer.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.RemoveAnimationState(System.UInt32)">
             <summary>
             Remove an animation by index.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.RemoveAllAnimationStates">
             <summary>
             Remove all animations.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.SetAnimationLodBias(System.Single)">
             <summary>
             Set animation LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.SetUpdateInvisible(System.Boolean)">
             <summary>
             Set whether to update animation and the bounding box when not visible. Recommended to enable for physically controlled models like ragdolls.
             
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.SetMorphWeight(System.UInt32,System.Single)">
             <summary>
             Set vertex morph weight by index.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.SetMorphWeight(System.String,System.Single)">
             <summary>
             Set vertex morph weight by name.
             
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.SetMorphWeight(Urho.StringHash,System.Single)">
             <summary>
             Set vertex morph weight by name hash.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.ResetMorphWeights">
             <summary>
             Reset all vertex morphs to zero.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.ApplyAnimation">
             <summary>
             Apply all animation states to nodes.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetAnimationStates">
             <summary>
             Return all animation states.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetNumAnimationStates">
             <summary>
             Return number of animation states.
             
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetAnimationState(Urho.Animation)">
             <summary>
             Return animation state by animation pointer.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetAnimationState(System.String)">
             <summary>
             Return animation state by animation name.
             
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetAnimationState(Urho.StringHash)">
             <summary>
             Return animation state by animation name hash.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetAnimationState(System.UInt32)">
             <summary>
             Return animation state by index.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetAnimationLodBias">
             <summary>
             Return animation LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetUpdateInvisible">
             <summary>
             Return whether to update animation when not visible.
             
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetMorphVertexBuffers">
             <summary>
             Return all morph vertex buffers.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetNumMorphs">
             <summary>
             Return number of vertex morphs.
             
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetMorphWeight(System.UInt32)">
             <summary>
             Return vertex morph weight by index.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetMorphWeight(System.String)">
             <summary>
             Return vertex morph weight by name.
             
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetMorphWeight(Urho.StringHash)">
             <summary>
             Return vertex morph weight by name hash.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.IsMaster">
             <summary>
             Return whether is the master (first) animated model.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.GetModelAttr">
             <summary>
             Return model attribute.
             </summary>
            </member>
        <member name="M:Urho.AnimatedModel.UpdateBoneBoundingBox">
             <summary>
             Recalculate the bone bounding box. Normally called internally, but can also be manually called if up-to-date information before rendering is necessary.
             </summary>
            </member>
        <member name="P:Urho.AnimatedModel.UpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="P:Urho.AnimatedModel.AnimationLodBias">
             <summary>
             Return animation LOD bias.
             
             Or
             Set animation LOD bias.
             
             </summary>
            </member>
        <member name="P:Urho.AnimatedModel.UpdateInvisible">
             <summary>
             Return whether to update animation when not visible.
             
             Or
             Set whether to update animation and the bounding box when not visible. Recommended to enable for physically controlled models like ragdolls.
             
             </summary>
            </member>
        <member name="P:Urho.AnimatedModel.AnimationStates">
             <summary>
             Return all animation states.
             </summary>
            </member>
        <member name="P:Urho.AnimatedModel.NumAnimationStates">
             <summary>
             Return number of animation states.
             
             </summary>
            </member>
        <member name="P:Urho.AnimatedModel.MorphVertexBuffers">
             <summary>
             Return all morph vertex buffers.
             </summary>
            </member>
        <member name="P:Urho.AnimatedModel.NumMorphs">
             <summary>
             Return number of vertex morphs.
             
             </summary>
            </member>
        <member name="P:Urho.AnimatedModel.Master">
             <summary>
             Return whether is the master (first) animated model.
             </summary>
            </member>
        <member name="P:Urho.AnimatedModel.ModelAttr">
             <summary>
             Return model attribute.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.IntRect.ToString-->
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Rect.ToString-->
        <member name="M:Urho.Matrix3x4.#ctor(Urho.Vector4,Urho.Vector4,Urho.Vector4)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix3x4" /> struct.
             </summary>
             <param name="row0">Top row of the matrix.</param>
             <param name="row1">Second row of the matrix.</param>
             <param name="row2">Bottom row of the matrix.</param>
            </member>
        <member name="P:Urho.Matrix3x4.Item(System.Int32,System.Int32)">
             <summary>Gets the component at the given row and column in the matrix.</summary>
             <param name="row">The row of the matrix.</param>
             <param name="column">The column of the matrix.</param>
             <returns>The component at the given row and column in the matrix.</returns>
            </member>
        <member name="F:Urho.VertexElement.Semantic">
             <summary>
             Semantic of element.
             </summary>
            </member>
        <member name="F:Urho.VertexElement.Index">
             <summary>
             Semantic index of element, for example multi-texcoords.
             </summary>
            </member>
        <member name="F:Urho.VertexElement.PerInstance">
             <summary>
             Per-instance flag.
             </summary>
            </member>
        <member name="F:Urho.VertexElement.Offset">
             <summary>
             Offset of element from vertex start. Filled by VertexBuffer once the vertex declaration is built.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.Texture2D">
             <summary>
             2D texture resource.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.Release">
             <summary>
             Release the texture.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.SetSize(System.Int32,System.Int32,System.UInt32,Urho.TextureUsage,System.Int32,System.Boolean)">
             <summary>
             Set size, format, usage and multisampling parameters for rendertargets. Zero size will follow application window size. Return true if successful.
             Autoresolve true means the multisampled texture will be automatically resolved to 1-sample after being rendered to and before being sampled as a texture.
             Autoresolve false means the multisampled texture will be read as individual samples in the shader and is not supported on Direct3D9.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.SetData(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Void*)">
             <summary>
             Set data either partially or fully on a mip level. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.SetData(Urho.Resources.Image,System.Boolean)">
             <summary>
             Set data from an image. Return true if successful. Optionally make a single channel image alpha-only.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.GetData(System.UInt32,System.IntPtr)">
             <summary>
             Get data from a mip level. The destination buffer must be big enough. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.GetImage(Urho.Resources.Image)">
             <summary>
             Get image data from zero mip level. Only RGB and RGBA textures are supported.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.GetImage">
             <summary>
             Get image data from zero mip level. Only RGB and RGBA textures are supported.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Texture2D.GetRenderSurface">
             <summary>
             Return render surface.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Texture2D.Image">
             <summary>
             Get image data from zero mip level. Only RGB and RGBA textures are supported.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Texture2D.RenderSurface">
             <summary>
             Return render surface.
             
             </summary>
            </member>
        <member name="M:Urho.Timer.Reset">
             Reset the timer.
            </member>
        <member name="F:Urho.Timer.startTime_">
             Starting clock value in milliseconds.
            </member>
        <member name="T:Urho.Gui.UI">
             <summary>
             %UI subsystem. Manages the graphical user interface.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetCursor(Urho.Gui.Cursor)">
             <summary>
             Set cursor UI element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetFocusElement(Urho.Gui.UIElement,System.Boolean)">
             <summary>
             Set focused UI element.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetModalElement(Urho.Gui.UIElement,System.Boolean)">
             <summary>
             Set modal element. Until all the modal elements are dismissed, all the inputs and events are only sent to them. Return true when successful.
             Only the modal element can clear its modal status or when it is being destructed.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.Clear">
             <summary>
             Clear the UI (excluding the cursor).
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.Update(System.Single)">
             <summary>
             Update the UI logic. Called by HandlePostUpdate().
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.RenderUpdate">
             <summary>
             Update the UI for rendering. Called by HandleRenderUpdate().
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.Render(System.Boolean)">
             <summary>
             Render the UI. If renderUICommand is false (default), is assumed to be the default UI render to backbuffer called by Engine, and will be performed only once. Additional UI renders to a different rendertarget may be triggered from the renderpath.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.DebugDraw(Urho.Gui.UIElement)">
             <summary>
             Debug draw a UI element.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.LoadLayout(Urho.IO.File,Urho.Resources.XmlFile)">
             <summary>
             Load a UI layout from an XML file. Optionally specify another XML file for element style. Return the root element.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.LoadLayout(Urho.MemoryBuffer,Urho.Resources.XmlFile)">
             <summary>
             Load a UI layout from an XML file. Optionally specify another XML file for element style. Return the root element.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.LoadLayout(Urho.Resources.XmlFile,Urho.Resources.XmlFile)">
             <summary>
             Load a UI layout from an XML file. Optionally specify another XML file for element style. Return the root element.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SaveLayout(Urho.IO.File,Urho.Gui.UIElement)">
             <summary>
             Save a UI layout to an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SaveLayout(Urho.MemoryBuffer,Urho.Gui.UIElement)">
             <summary>
             Save a UI layout to an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetClipboardText(System.String)">
             <summary>
             Set clipboard text.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetDoubleClickInterval(System.Single)">
             <summary>
             Set UI element double click interval in seconds.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetMaxDoubleClickDistance(System.Single)">
             <summary>
             Set max screen distance in pixels between double click clicks.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetDragBeginInterval(System.Single)">
             <summary>
             Set UI drag event start interval in seconds.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetDragBeginDistance(System.Int32)">
             <summary>
             Set UI drag event start distance threshold in pixels.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetDefaultToolTipDelay(System.Single)">
             <summary>
             Set tooltip default display delay in seconds.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetMaxFontTextureSize(System.Int32)">
             <summary>
             Set maximum font face texture size. Must be a power of two. Default is 2048.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetNonFocusedMouseWheel(System.Boolean)">
             <summary>
             Set whether mouse wheel can control also a non-focused element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetUseSystemClipboard(System.Boolean)">
             <summary>
             Set whether to use system clipboard. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetUseScreenKeyboard(System.Boolean)">
             <summary>
             Set whether to show the on-screen keyboard (if supported) when a %LineEdit is focused. Default true on mobile devices.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetUseMutableGlyphs(System.Boolean)">
             <summary>
             Set whether to use mutable (eraseable) glyphs to ensure a font face never expands to more than one texture. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetForceAutoHint(System.Boolean)">
             <summary>
             Set whether to force font autohinting instead of using FreeType's TTF bytecode interpreter.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetFontHintLevel(Urho.FontHintLevel)">
             <summary>
             Set the hinting level used by FreeType fonts.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetFontSubpixelThreshold(System.Single)">
             <summary>
             Set the font subpixel threshold. Below this size, if the hint level is LIGHT or NONE, fonts will use subpixel positioning plus oversampling for higher-quality rendering. Has no effect at hint level NORMAL.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetFontOversampling(System.Int32)">
             <summary>
             Set the oversampling (horizonal stretching) used to improve subpixel font rendering. Only affects fonts smaller than the subpixel limit.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetScale(System.Single)">
             <summary>
             Set %UI scale. 1.0 is default (pixel perfect). Resize the root element to match.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetWidth(System.Single)">
             <summary>
             Scale %UI to the specified width in pixels.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetHeight(System.Single)">
             <summary>
             Scale %UI to the specified height in pixels.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetCustomSize(Urho.IntVector2)">
             <summary>
             Set custom size of the root element. This disables automatic resizing of the root element according to window size. Set custom size 0,0 to return to automatic resizing.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetCustomSize(System.Int32,System.Int32)">
             <summary>
             Set custom size of the root element.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetRoot">
             <summary>
             Return root UI element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetRootModalElement">
             <summary>
             Return root modal element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetCursor">
             <summary>
             Return cursor.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetCursorPosition">
             <summary>
             Return cursor position.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetElementAt(Urho.IntVector2,System.Boolean)">
             <summary>
             Return UI element at global screen coordinates. By default returns only input-enabled elements.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetElementAt(System.Int32,System.Int32,System.Boolean)">
             <summary>
             Return UI element at global screen coordinates. By default returns only input-enabled elements.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetElementAt(Urho.Gui.UIElement,Urho.IntVector2,System.Boolean)">
             <summary>
             Get a child element at element's screen position relative to specified root element.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.ConvertSystemToUI(Urho.IntVector2)">
             <summary>
             Convert system mouse position (or offset) to scaled UI position (or offset).
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.ConvertUIToSystem(Urho.IntVector2)">
             <summary>
             Convert scaled UI position (or offset) to system mouse position (or offset).
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetFocusElement">
             <summary>
             Return focused element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetFrontElement">
             <summary>
             Return topmost enabled root-level non-modal element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetNumDragElements">
             <summary>
             Return the number of currently dragged elements.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetDragElement(System.UInt32)">
             <summary>
             Return the drag element at index.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetClipboardText">
             <summary>
             Return clipboard text.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetDoubleClickInterval">
             <summary>
             Return UI element double click interval in seconds.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetMaxDoubleClickDistance">
             <summary>
             Return max screen distance in pixels for double clicks to register.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetDragBeginInterval">
             <summary>
             Return UI drag start event interval in seconds.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetDragBeginDistance">
             <summary>
             Return UI drag start event distance threshold in pixels.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetDefaultToolTipDelay">
             <summary>
             Return tooltip default display delay in seconds.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetMaxFontTextureSize">
             <summary>
             Return font texture maximum size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.IsNonFocusedMouseWheel">
             <summary>
             Return whether mouse wheel can control also a non-focused element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetUseSystemClipboard">
             <summary>
             Return whether is using the system clipboard.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetUseScreenKeyboard">
             <summary>
             Return whether focusing a %LineEdit will show the on-screen keyboard.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetUseMutableGlyphs">
             <summary>
             Return whether is using mutable (eraseable) glyphs for fonts.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetForceAutoHint">
             <summary>
             Return whether is using forced autohinting.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetFontHintLevel">
             <summary>
             Return the current FreeType font hinting level.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetFontSubpixelThreshold">
             <summary>
             Get the font subpixel threshold. Below this size, if the hint level is LIGHT or NONE, fonts will use subpixel positioning plus oversampling for higher-quality rendering. Has no effect at hint level NORMAL.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetFontOversampling">
             <summary>
             Get the oversampling (horizonal stretching) used to improve subpixel font rendering. Only affects fonts smaller than the subpixel limit.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.HasModalElement">
             <summary>
             Return true when UI has modal element(s).
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.IsDragging">
             <summary>
             Return whether a drag is in progress.
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetScale">
             <summary>
             Return current UI scale.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.GetCustomSize">
             <summary>
             Return root element custom size. Returns 0,0 when custom size is not being used and automatic resizing according to window size is in use instead (default).
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UI.SetElementRenderTexture(Urho.Gui.UIElement,Urho.Urho2D.Texture2D)">
             <summary>
             Set texture to which element will be rendered.
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.Cursor">
             <summary>
             Return cursor.
             
             Or
             Set cursor UI element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.ClipboardText">
             <summary>
             Return clipboard text.
             
             Or
             Set clipboard text.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.DoubleClickInterval">
             <summary>
             Return UI element double click interval in seconds.
             
             Or
             Set UI element double click interval in seconds.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.MaxDoubleClickDistance">
             <summary>
             Return max screen distance in pixels for double clicks to register.
             
             Or
             Set max screen distance in pixels between double click clicks.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.DragBeginInterval">
             <summary>
             Return UI drag start event interval in seconds.
             
             Or
             Set UI drag event start interval in seconds.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.DragBeginDistance">
             <summary>
             Return UI drag start event distance threshold in pixels.
             
             Or
             Set UI drag event start distance threshold in pixels.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.DefaultToolTipDelay">
             <summary>
             Return tooltip default display delay in seconds.
             
             Or
             Set tooltip default display delay in seconds.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.MaxFontTextureSize">
             <summary>
             Return font texture maximum size.
             
             Or
             Set maximum font face texture size. Must be a power of two. Default is 2048.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.NonFocusedMouseWheel">
             <summary>
             Return whether mouse wheel can control also a non-focused element.
             
             Or
             Set whether mouse wheel can control also a non-focused element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.UseSystemClipboard">
             <summary>
             Return whether is using the system clipboard.
             
             Or
             Set whether to use system clipboard. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.UseScreenKeyboard">
             <summary>
             Return whether focusing a %LineEdit will show the on-screen keyboard.
             
             Or
             Set whether to show the on-screen keyboard (if supported) when a %LineEdit is focused. Default true on mobile devices.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.UseMutableGlyphs">
             <summary>
             Return whether is using mutable (eraseable) glyphs for fonts.
             
             Or
             Set whether to use mutable (eraseable) glyphs to ensure a font face never expands to more than one texture. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.ForceAutoHint">
             <summary>
             Return whether is using forced autohinting.
             
             Or
             Set whether to force font autohinting instead of using FreeType's TTF bytecode interpreter.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.FontHintLevel">
             <summary>
             Return the current FreeType font hinting level.
             
             Or
             Set the hinting level used by FreeType fonts.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.FontSubpixelThreshold">
             <summary>
             Get the font subpixel threshold. Below this size, if the hint level is LIGHT or NONE, fonts will use subpixel positioning plus oversampling for higher-quality rendering. Has no effect at hint level NORMAL.
             
             Or
             Set the font subpixel threshold. Below this size, if the hint level is LIGHT or NONE, fonts will use subpixel positioning plus oversampling for higher-quality rendering. Has no effect at hint level NORMAL.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.FontOversampling">
             <summary>
             Get the oversampling (horizonal stretching) used to improve subpixel font rendering. Only affects fonts smaller than the subpixel limit.
             
             Or
             Set the oversampling (horizonal stretching) used to improve subpixel font rendering. Only affects fonts smaller than the subpixel limit.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.Scale">
             <summary>
             Return current UI scale.
             
             Or
             Set %UI scale. 1.0 is default (pixel perfect). Resize the root element to match.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.CustomSize">
             <summary>
             Return root element custom size. Returns 0,0 when custom size is not being used and automatic resizing according to window size is in use instead (default).
             
             Or
             Set custom size of the root element. This disables automatic resizing of the root element according to window size. Set custom size 0,0 to return to automatic resizing.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.Root">
             <summary>
             Return root UI element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.RootModalElement">
             <summary>
             Return root modal element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.CursorPosition">
             <summary>
             Return cursor position.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.FocusElement">
             <summary>
             Return focused element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.FrontElement">
             <summary>
             Return topmost enabled root-level non-modal element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.NumDragElements">
             <summary>
             Return the number of currently dragged elements.
             </summary>
            </member>
        <member name="P:Urho.Gui.UI.Dragging">
             <summary>
             Return whether a drag is in progress.
             </summary>
            </member>
        <member name="T:Urho.Gui.UIElement">
             <summary>
             Base class for %UI elements.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.LoadXml(Urho.Resources.XmlElement)">
             <summary>
             Load from XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.LoadXml(Urho.Resources.XmlElement,Urho.Resources.XmlFile)">
             <summary>
             Load from XML data with style. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.LoadChildXml(Urho.Resources.XmlElement,Urho.Resources.XmlFile)">
             <summary>
             Create a child by loading from XML data with style. Returns the child element if successful, null if otherwise.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SaveXml(Urho.Resources.XmlElement)">
             <summary>
             Save as XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.Update(System.Single)">
             <summary>
             Perform UI element update.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsWithinScissor(Urho.IntRect)">
             <summary>
             Return whether is visible and inside a scissor rectangle and should be rendered.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetScreenPosition">
             <summary>
             Update and return screen position.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.OnTextInput(System.String)">
             <summary>
             React to text input event.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.OnResize(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             React to resize.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.OnPositionSet(Urho.IntVector2)">
             <summary>
             React to position change.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.OnSetEditable">
             <summary>
             React to editable status change.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.OnIndentSet">
             <summary>
             React to indent change.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.ScreenToElement(Urho.IntVector2)">
             <summary>
             Convert screen coordinates to element coordinates.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.ElementToScreen(Urho.IntVector2)">
             <summary>
             Convert element coordinates to screen coordinates.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsWheelHandler">
             <summary>
             Return whether the element could handle wheel input.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.LoadXml(Urho.IO.File)">
             <summary>
             Load from an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.LoadXml(Urho.MemoryBuffer)">
             <summary>
             Load from an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SaveXml(Urho.IO.File,System.String)">
             <summary>
             Save to an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SaveXml(Urho.MemoryBuffer,System.String)">
             <summary>
             Save to an XML file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.FilterAttributes(Urho.Resources.XmlElement)">
             <summary>
             Filter attributes in serialization process.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetName(System.String)">
             <summary>
             Set name.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetPosition(Urho.IntVector2)">
             <summary>
             Set position.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetPosition(System.Int32,System.Int32)">
             <summary>
             Set position.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetSize(Urho.IntVector2)">
             <summary>
             Set size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetSize(System.Int32,System.Int32)">
             <summary>
             Set size.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetWidth(System.Int32)">
             <summary>
             Set width only.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetHeight(System.Int32)">
             <summary>
             Set height only.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMinSize(Urho.IntVector2)">
             <summary>
             Set minimum size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMinSize(System.Int32,System.Int32)">
             <summary>
             Set minimum size.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMinWidth(System.Int32)">
             <summary>
             Set minimum width.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMinHeight(System.Int32)">
             <summary>
             Set minimum height.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMaxSize(Urho.IntVector2)">
             <summary>
             Set maximum size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMaxSize(System.Int32,System.Int32)">
             <summary>
             Set maximum size.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMaxWidth(System.Int32)">
             <summary>
             Set maximum width.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMaxHeight(System.Int32)">
             <summary>
             Set maximum height.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetFixedSize(Urho.IntVector2)">
             <summary>
             Set fixed size.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetFixedSize(System.Int32,System.Int32)">
             <summary>
             Set fixed size.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetFixedWidth(System.Int32)">
             <summary>
             Set fixed width.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetFixedHeight(System.Int32)">
             <summary>
             Set fixed height.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetAlignment(Urho.Gui.HorizontalAlignment,Urho.Gui.VerticalAlignment)">
             <summary>
             Set horizontal and vertical alignment.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetHorizontalAlignment(Urho.Gui.HorizontalAlignment)">
             <summary>
             Set horizontal alignment.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVerticalAlignment(Urho.Gui.VerticalAlignment)">
             <summary>
             Set vertical alignment.
             
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Gui.UIElement.SetEnableAnchor(System.Boolean)-->
        <member name="M:Urho.Gui.UIElement.SetMinAnchor(Urho.Vector2)">
             <summary>
             Set minimum (top left) anchor in relation to the parent element (from 0 to 1). No effect when anchor is not enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMinAnchor(System.Single,System.Single)">
             <summary>
             Set minimum anchor.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMaxAnchor(Urho.Vector2)">
             <summary>
             Set maximum (bottom right) anchor in relation to the parent element (from 0 to 1). No effect when anchor is not enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMaxAnchor(System.Single,System.Single)">
             <summary>
             Set maximum anchor.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMinOffset(Urho.IntVector2)">
             <summary>
             Set offset of element's top left from the minimum anchor in pixels. No effect when anchor is not enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetMaxOffset(Urho.IntVector2)">
             <summary>
             Set offset of element's bottom right from the maximum anchor in pixels. No effect when anchor is not enabled.
             
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Gui.UIElement.SetPivot(Urho.Vector2)-->
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Gui.UIElement.SetPivot(System.Single,System.Single)-->
        <member name="M:Urho.Gui.UIElement.SetClipBorder(Urho.IntRect)">
             <summary>
             Set child element clipping border.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetColor(Urho.Color)">
             <summary>
             Set color on all corners.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetColor(Urho.Gui.Corner,Urho.Color)">
             <summary>
             Set color on one corner.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetPriority(System.Int32)">
             <summary>
             Set priority.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetOpacity(System.Single)">
             <summary>
             Set opacity.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetBringToFront(System.Boolean)">
             <summary>
             Set whether should be brought to front when focused.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetBringToBack(System.Boolean)">
             <summary>
             Set whether should be put to background when another element is focused.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetClipChildren(System.Boolean)">
             <summary>
             Set whether should clip child elements. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetSortChildren(System.Boolean)">
             <summary>
             Set whether should sort child elements according to priority. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetUseDerivedOpacity(System.Boolean)">
             <summary>
             Set whether parent elements' opacity affects opacity. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetEnabled(System.Boolean)">
             <summary>
             Set whether reacts to input. Default false, but is enabled by subclasses if applicable.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetDeepEnabled(System.Boolean)">
             <summary>
             Set enabled state on self and child elements. Elements' own enabled state is remembered (IsEnabledSelf) and can be restored.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.ResetDeepEnabled">
             <summary>
             Reset enabled state to the element's remembered state prior to calling SetDeepEnabled.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetEnabledRecursive(System.Boolean)">
             <summary>
             Set enabled state on self and child elements. Unlike SetDeepEnabled this does not remember the elements' own enabled state, but overwrites it.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetEditable(System.Boolean)">
             <summary>
             Set whether value is editable through input. Not applicable to all elements. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetFocus(System.Boolean)">
             <summary>
             Set whether is focused. Only one element can be focused at a time.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetSelected(System.Boolean)">
             <summary>
             Set selected mode. Actual meaning is element dependent, for example constant hover or pressed effect.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVisible(System.Boolean)">
             <summary>
             Set whether is visible. Visibility propagates to child elements.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetFocusMode(Urho.Gui.FocusMode)">
             <summary>
             Set focus mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetStyle(System.String,Urho.Resources.XmlFile)">
             <summary>
             Set style from an XML file. Find the style element by name. If the style file is not explicitly provided, use the default style from parental chain. Return true if the style is applied successfully. See also
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetStyle(Urho.Resources.XmlElement)">
             <summary>
             Set style from an XML element. Return true if the style is applied successfully.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetStyleAuto(Urho.Resources.XmlFile)">
             <summary>
             Set style from an XML file. Find the style element automatically by using the element's typename. If the style file is not explicitly provided, use the default style from parental chain. Return true if the style is applied successfully. See also
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetDefaultStyle(Urho.Resources.XmlFile)">
             <summary>
             Set default style file for later use by children elements.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetLayout(Urho.Gui.LayoutMode,System.Int32,Urho.IntRect)">
             <summary>
             Set layout parameters.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetLayoutMode(Urho.Gui.LayoutMode)">
             <summary>
             Set layout mode only.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetLayoutSpacing(System.Int32)">
             <summary>
             Set layout spacing.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetLayoutBorder(Urho.IntRect)">
             <summary>
             Set layout border.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetLayoutFlexScale(Urho.Vector2)">
             <summary>
             Set layout flex scale.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetIndent(System.Int32)">
             <summary>
             Set horizontal indentation.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetIndentSpacing(System.Int32)">
             <summary>
             Set indent spacing (number of pixels per indentation level).
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.UpdateLayout">
             <summary>
             Manually update layout. Should not be necessary in most cases, but is provided for completeness.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.DisableLayoutUpdate">
             <summary>
             Disable automatic layout update. Should only be used if there are performance problems.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.EnableLayoutUpdate">
             <summary>
             Enable automatic layout update.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.BringToFront">
             <summary>
             Bring UI element to front.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.CreateChild(Urho.StringHash,System.String,System.UInt32)">
             <summary>
             Create and add a child element and return it.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.AddChild(Urho.Gui.UIElement)">
             <summary>
             Add a child element.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.InsertChild(System.UInt32,Urho.Gui.UIElement)">
             <summary>
             Insert a child element into a specific position in the child list.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.RemoveChild(Urho.Gui.UIElement,System.UInt32)">
             <summary>
             Remove a child element. Starting search at specified index if provided.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.RemoveChildAtIndex(System.UInt32)">
             <summary>
             Remove a child element at index.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.RemoveAllChildren">
             <summary>
             Remove all child elements.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.Remove">
             <summary>
             Remove from the parent element. If no other shared pointer references exist, causes immediate deletion.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.FindChild(Urho.Gui.UIElement)">
             <summary>
             Find child index. Return M_MAX_UNSIGNED if not found.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetParent(Urho.Gui.UIElement,System.UInt32)">
             <summary>
             Set parent element. Same as parent-&gt;InsertChild(index, this).
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,Urho.Vector3)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,Urho.IntRect)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,Urho.Color)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,Urho.Vector2)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,Urho.Vector4)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,Urho.IntVector2)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,Urho.Quaternion)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,Urho.Matrix4)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,Urho.Matrix3)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,Urho.Matrix3x4)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,System.Int32)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,System.Single)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,System.String)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetVar(Urho.StringHash,System.Boolean)">
             <summary>
             Set a user variable.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetInternal(System.Boolean)">
             <summary>
             Mark as internally (programmatically) created. Used when an element composes itself out of child elements.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetTraversalMode(Urho.Gui.TraversalMode)">
             <summary>
             Set traversal mode for rendering. The default traversal mode is TM_BREADTH_FIRST for non-root element. Root element should be set to TM_DEPTH_FIRST to avoid artifacts during rendering.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetElementEventSender(System.Boolean)">
             <summary>
             Set element event sender flag. When child element is added or deleted, the event would be sent using UIElement found in the parental chain having this flag set. If not set, the event is sent using UI's root as per normal.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.AddTag(System.String)">
             <summary>
             Add a tag.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.RemoveTag(System.String)">
             <summary>
             Remove specific tag. Return true if existed.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.RemoveAllTags">
             <summary>
             Remove all tags.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetName">
             <summary>
             Return name.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetPosition">
             <summary>
             Return position.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetSize">
             <summary>
             Return size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetWidth">
             <summary>
             Return width.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetHeight">
             <summary>
             Return height.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetMinSize">
             <summary>
             Return minimum size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetMinWidth">
             <summary>
             Return minimum width.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetMinHeight">
             <summary>
             Return minimum height.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetMaxSize">
             <summary>
             Return maximum size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetMaxWidth">
             <summary>
             Return minimum width.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetMaxHeight">
             <summary>
             Return minimum height.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsFixedSize">
             <summary>
             Return true if size is fixed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsFixedWidth">
             <summary>
             Return true if width is fixed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsFixedHeight">
             <summary>
             Return true if height is fixed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetChildOffset">
             <summary>
             Return child element offset.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetHorizontalAlignment">
             <summary>
             Return horizontal alignment. If pivot has been adjusted to a custom horizontal setting, returns HA_CUSTOM.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetVerticalAlignment">
             <summary>
             Return vertical alignment. If pivot has been adjusted to a custom vertical setting, returns VA_CUSTOM.
             
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Gui.UIElement.GetEnableAnchor-->
        <member name="M:Urho.Gui.UIElement.GetMinAnchor">
             <summary>
             Return minimum anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetMaxAnchor">
             <summary>
             Return maximum anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetMinOffset">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetMaxOffset">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetPivot">
             <summary>
             Return pivot.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetClipBorder">
             <summary>
             Return child element clipping border.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetColor(Urho.Gui.Corner)">
             <summary>
             Return corner color.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetPriority">
             <summary>
             Return priority.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetOpacity">
             <summary>
             Return opacity.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetDerivedOpacity">
             <summary>
             Return derived opacity (affected by parent elements). If UseDerivedOpacity is false, returns same as element's own opacity.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetBringToFront">
             <summary>
             Return whether should be brought to front when focused.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetBringToBack">
             <summary>
             Return whether should be put to background when another element is focused.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetClipChildren">
             <summary>
             Return whether should clip child elements.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetSortChildren">
             <summary>
             Return whether should sort child elements according to priority.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetUseDerivedOpacity">
             <summary>
             Return whether parent elements' opacity affects opacity.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.HasFocus">
             <summary>
             Return whether has focus.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsChildOf(Urho.Gui.UIElement)">
             <summary>
             Return whether is a direct or indirect child of specified element.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsEnabled">
             <summary>
             Return whether reacts to input.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsEnabledSelf">
             <summary>
             Returns the element's last own enabled state. May be different than the value returned by IsEnabled when SetDeepEnabled has been used.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsEditable">
             <summary>
             Return whether value is editable through input.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsSelected">
             <summary>
             Return whether is selected. Actual meaning is element dependent.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsVisible">
             <summary>
             Return whether element itself should be visible. Elements can be also hidden due to the parent being not visible, use IsVisibleEffective() to check.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsVisibleEffective">
             <summary>
             Return whether element is effectively visible (parent element chain is visible).
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsHovering">
             <summary>
             Return whether the cursor is hovering on this element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsInternal">
             <summary>
             Return whether is internally created.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.HasColorGradient">
             <summary>
             Return whether has different color in at least one corner.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetFocusMode">
             <summary>
             Return focus mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetAppliedStyle">
             <summary>
             Return applied style name. Return an empty string when the applied style is an 'auto' style (i.e. style derived from instance's type).
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetDefaultStyle(System.Boolean)">
             <summary>
             Return default style.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetLayoutMode">
             <summary>
             Return layout mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetLayoutSpacing">
             <summary>
             Return layout spacing.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetLayoutBorder">
             <summary>
             Return layout border.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetLayoutFlexScale">
             <summary>
             Return layout flex scale.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetNumChildren(System.Boolean)">
             <summary>
             Return number of child elements.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetChild(System.UInt32)">
             <summary>
             Return child element by index.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetChild(System.String,System.Boolean)">
             <summary>
             Return child element by name.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetChildren">
             <summary>
             Return immediate child elements.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetParent">
             <summary>
             Return parent element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetRoot">
             <summary>
             Return root element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetDerivedColor">
             <summary>
             Return derived color. Only valid when no gradient.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.HasTag(System.String)">
             <summary>
             Return whether element is tagged by a specific tag.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetDragButtonCount">
             <summary>
             Return the number of buttons dragging this element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsInside(Urho.IntVector2,System.Boolean)">
             <summary>
             Return whether a point (either in element or screen coordinates) is inside the element.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsInsideCombined(Urho.IntVector2,System.Boolean)">
             <summary>
             Return whether a point (either in element or screen coordinates) is inside the combined rect of the element and its children.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetCombinedScreenRect">
             <summary>
             Return combined screen coordinate rect of element and its children.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SortChildren">
             <summary>
             Sort child elements if sorting enabled and order dirty. Called by UI.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetLayoutElementMaxSize">
             <summary>
             Return maximum layout element size in the layout direction. Only valid after layout has been calculated. Used internally by UI for optimizations.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetIndent">
             <summary>
             Return horizontal indentation.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetIndentSpacing">
             <summary>
             Return indent spacing (number of pixels per indentation level).
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetIndentWidth">
             <summary>
             Return indent width in pixels.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetChildOffset(Urho.IntVector2)">
             <summary>
             Set child offset.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetHovering(System.Boolean)">
             <summary>
             Set hovering state.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetColorAttr">
             <summary>
             Return color attribute. Uses just the top-left color.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetTraversalMode">
             <summary>
             Return traversal mode for rendering.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.IsElementEventSender">
             <summary>
             Return whether element should send child added / removed events by itself. If false, defers to parent element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetElementEventSender">
             <summary>
             Get element which should send child added / removed events.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.GetEffectiveMinSize">
             <summary>
             Return effective minimum size, also considering layout. Used internally.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIElement.SetRenderTexture(Urho.Urho2D.Texture2D)">
             <summary>
             Set texture to which element will be rendered.
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.ScreenPosition">
             <summary>
             Update and return screen position.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.WheelHandler">
             <summary>
             Return whether the element could handle wheel input.
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Name">
             <summary>
             Return name.
             
             Or
             Set name.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Position">
             <summary>
             Return position.
             
             Or
             Set position.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Size">
             <summary>
             Return size.
             
             Or
             Set size.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Width">
             <summary>
             Return width.
             
             Or
             Set width only.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Height">
             <summary>
             Return height.
             
             Or
             Set height only.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.MinSize">
             <summary>
             Return minimum size.
             
             Or
             Set minimum size.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.MinWidth">
             <summary>
             Return minimum width.
             
             Or
             Set minimum width.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.MinHeight">
             <summary>
             Return minimum height.
             
             Or
             Set minimum height.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.MaxSize">
             <summary>
             Return maximum size.
             
             Or
             Set maximum size.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.MaxWidth">
             <summary>
             Return minimum width.
             
             Or
             Set maximum width.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.MaxHeight">
             <summary>
             Return minimum height.
             
             Or
             Set maximum height.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.FixedSize">
             <summary>
             Return true if size is fixed.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.FixedWidth">
             <summary>
             Return true if width is fixed.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.FixedHeight">
             <summary>
             Return true if height is fixed.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.HorizontalAlignment">
             <summary>
             Return horizontal alignment. If pivot has been adjusted to a custom horizontal setting, returns HA_CUSTOM.
             
             Or
             Set horizontal alignment.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.VerticalAlignment">
             <summary>
             Return vertical alignment. If pivot has been adjusted to a custom vertical setting, returns VA_CUSTOM.
             
             Or
             Set vertical alignment.
             
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member P:Urho.Gui.UIElement.EnableAnchor-->
        <member name="P:Urho.Gui.UIElement.MinAnchor">
             <summary>
             Return minimum anchor.
             
             Or
             Set minimum (top left) anchor in relation to the parent element (from 0 to 1). No effect when anchor is not enabled.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.MaxAnchor">
             <summary>
             Return maximum anchor.
             
             Or
             Set maximum (bottom right) anchor in relation to the parent element (from 0 to 1). No effect when anchor is not enabled.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.MinOffset">
             <summary>
             
             Or
             Set offset of element's top left from the minimum anchor in pixels. No effect when anchor is not enabled.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.MaxOffset">
             <summary>
             
             Or
             Set offset of element's bottom right from the maximum anchor in pixels. No effect when anchor is not enabled.
             
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member P:Urho.Gui.UIElement.Pivot-->
        <member name="P:Urho.Gui.UIElement.ClipBorder">
             <summary>
             Return child element clipping border.
             
             Or
             Set child element clipping border.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Priority">
             <summary>
             Return priority.
             
             Or
             Set priority.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Opacity">
             <summary>
             Return opacity.
             
             Or
             Set opacity.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.BringToFrontOnFocus">
             <summary>
             Return whether should be brought to front when focused.
             
             Or
             Set whether should be brought to front when focused.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.BringToBackOnFocus">
             <summary>
             Return whether should be put to background when another element is focused.
             
             Or
             Set whether should be put to background when another element is focused.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.ClipChildren">
             <summary>
             Return whether should clip child elements.
             
             Or
             Set whether should clip child elements. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.ShouldSortChildren">
             <summary>
             Return whether should sort child elements according to priority.
             
             Or
             Set whether should sort child elements according to priority. Default true.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.UseDerivedOpacity">
             <summary>
             Return whether parent elements' opacity affects opacity.
             
             Or
             Set whether parent elements' opacity affects opacity. Default true.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Enabled">
             <summary>
             Return whether reacts to input.
             
             Or
             Set whether reacts to input. Default false, but is enabled by subclasses if applicable.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Editable">
             <summary>
             Return whether value is editable through input.
             
             Or
             Set whether value is editable through input. Not applicable to all elements. Default true.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Selected">
             <summary>
             Return whether is selected. Actual meaning is element dependent.
             
             Or
             Set selected mode. Actual meaning is element dependent, for example constant hover or pressed effect.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Visible">
             <summary>
             Return whether element itself should be visible. Elements can be also hidden due to the parent being not visible, use IsVisibleEffective() to check.
             
             Or
             Set whether is visible. Visibility propagates to child elements.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.FocusMode">
             <summary>
             Return focus mode.
             
             Or
             Set focus mode.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.LayoutMode">
             <summary>
             Return layout mode.
             
             Or
             Set layout mode only.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.LayoutSpacing">
             <summary>
             Return layout spacing.
             
             Or
             Set layout spacing.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.LayoutBorder">
             <summary>
             Return layout border.
             
             Or
             Set layout border.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.LayoutFlexScale">
             <summary>
             Return layout flex scale.
             
             Or
             Set layout flex scale.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Indent">
             <summary>
             Return horizontal indentation.
             
             Or
             Set horizontal indentation.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.IndentSpacing">
             <summary>
             Return indent spacing (number of pixels per indentation level).
             
             Or
             Set indent spacing (number of pixels per indentation level).
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Internal">
             <summary>
             Return whether is internally created.
             
             Or
             Mark as internally (programmatically) created. Used when an element composes itself out of child elements.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.TraversalMode">
             <summary>
             Return traversal mode for rendering.
             
             Or
             Set traversal mode for rendering. The default traversal mode is TM_BREADTH_FIRST for non-root element. Root element should be set to TM_DEPTH_FIRST to avoid artifacts during rendering.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.ElementEventSender">
             <summary>
             Get element which should send child added / removed events.
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.ChildOffset">
             <summary>
             Return child element offset.
             
             Or
             Set child offset.
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.DerivedOpacity">
             <summary>
             Return derived opacity (affected by parent elements). If UseDerivedOpacity is false, returns same as element's own opacity.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.EnabledSelf">
             <summary>
             Returns the element's last own enabled state. May be different than the value returned by IsEnabled when SetDeepEnabled has been used.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.VisibleEffective">
             <summary>
             Return whether element is effectively visible (parent element chain is visible).
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Hovering">
             <summary>
             Return whether the cursor is hovering on this element.
             
             Or
             Set hovering state.
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.AppliedStyle">
             <summary>
             Return applied style name. Return an empty string when the applied style is an 'auto' style (i.e. style derived from instance's type).
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Children">
             <summary>
             Return immediate child elements.
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Parent">
             <summary>
             Return parent element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.Root">
             <summary>
             Return root element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.DerivedColor">
             <summary>
             Return derived color. Only valid when no gradient.
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.DragButtonCount">
             <summary>
             Return the number of buttons dragging this element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.CombinedScreenRect">
             <summary>
             Return combined screen coordinate rect of element and its children.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.LayoutElementMaxSize">
             <summary>
             Return maximum layout element size in the layout direction. Only valid after layout has been calculated. Used internally by UI for optimizations.
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.IndentWidth">
             <summary>
             Return indent width in pixels.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.ColorAttr">
             <summary>
             Return color attribute. Uses just the top-left color.
             </summary>
            </member>
        <member name="P:Urho.Gui.UIElement.EffectiveMinSize">
             <summary>
             Return effective minimum size, also considering layout. Used internally.
             </summary>
            </member>
        <member name="T:Urho.UrhoConsole">
             <summary>
             %Console window with log history and command line prompt.
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.SetDefaultStyle(Urho.Resources.XmlFile)">
             <summary>
             Set UI elements' style from an XML file.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.SetVisible(System.Boolean)">
             <summary>
             Show or hide.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.Toggle">
             <summary>
             Toggle visibility.
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.SetAutoVisibleOnError(System.Boolean)">
             <summary>
             Automatically set console to visible when receiving an error log message.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.SetCommandInterpreter(System.String)">
             <summary>
             Set the command interpreter.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.SetNumBufferedRows(System.UInt32)">
             <summary>
             Set number of buffered rows.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.SetNumRows(System.UInt32)">
             <summary>
             Set number of displayed rows.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.SetNumHistoryRows(System.UInt32)">
             <summary>
             Set command history maximum size, 0 disables history.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.SetFocusOnShow(System.Boolean)">
             <summary>
             Set whether to automatically focus the line edit when showing. Default true on desktops and false on mobile devices, as on mobiles it would pop up the screen keyboard.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.AddAutoComplete(System.String)">
             <summary>
             Add auto complete option.
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.RemoveAutoComplete(System.String)">
             <summary>
             Remove auto complete option.
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.UpdateElements">
             <summary>
             Update elements to layout properly. Call this after manually adjusting the sub-elements.
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.GetDefaultStyle">
             <summary>
             Return the UI style file.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.GetBackground">
             <summary>
             Return the background element.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.GetLineEdit">
             <summary>
             Return the line edit element.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.GetCloseButton">
             <summary>
             Return the close butoon element.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.IsVisible">
             <summary>
             Return whether is visible.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.IsAutoVisibleOnError">
             <summary>
             Return true when console is set to automatically visible when receiving an error log message.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.GetCommandInterpreter">
             <summary>
             Return the last used command interpreter.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.GetNumBufferedRows">
             <summary>
             Return number of buffered rows.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.GetNumRows">
             <summary>
             Return number of displayed rows.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.CopySelectedRows">
             <summary>
             Copy selected rows to system clipboard.
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.GetNumHistoryRows">
             <summary>
             Return history maximum size.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.GetHistoryPosition">
             <summary>
             Return current history position.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.GetHistoryRow(System.UInt32)">
             <summary>
             Return history row at index.
             
             </summary>
            </member>
        <member name="M:Urho.UrhoConsole.GetFocusOnShow">
             <summary>
             Return whether automatically focuses the line edit when showing.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.DefaultStyle">
             <summary>
             Return the UI style file.
             
             Or
             Set UI elements' style from an XML file.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.Visible">
             <summary>
             Return whether is visible.
             
             Or
             Show or hide.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.AutoVisibleOnError">
             <summary>
             Return true when console is set to automatically visible when receiving an error log message.
             
             Or
             Automatically set console to visible when receiving an error log message.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.CommandInterpreter">
             <summary>
             Return the last used command interpreter.
             
             Or
             Set the command interpreter.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.NumBufferedRows">
             <summary>
             Return number of buffered rows.
             
             Or
             Set number of buffered rows.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.NumRows">
             <summary>
             Return number of displayed rows.
             
             Or
             Set number of displayed rows.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.NumHistoryRows">
             <summary>
             Return history maximum size.
             
             Or
             Set command history maximum size, 0 disables history.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.FocusOnShow">
             <summary>
             Return whether automatically focuses the line edit when showing.
             
             Or
             Set whether to automatically focus the line edit when showing. Default true on desktops and false on mobile devices, as on mobiles it would pop up the screen keyboard.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.Background">
             <summary>
             Return the background element.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.LineEdit">
             <summary>
             Return the line edit element.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.CloseButton">
             <summary>
             Return the close butoon element.
             
             </summary>
            </member>
        <member name="P:Urho.UrhoConsole.HistoryPosition">
             <summary>
             Return current history position.
             
             </summary>
            </member>
        <member name="T:Urho.EventDataContainer">
             <summary>
             Helper functions to return elements from a VariantMap
             </summary>
            </member>
        <member name="T:Urho.UrhoString">
             <summary>
             %String class.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Replace(System.String,System.String,System.Boolean)">
             <summary>
             Replace all occurrences of a string.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Replace(System.UInt32,System.UInt32,System.String)">
             <summary>
             Replace a substring.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Replaced(System.String,System.String,System.Boolean)">
             <summary>
             Return a string with all occurrences of a string replaced.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Insert(System.UInt32,System.String)">
             <summary>
             Insert a string.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Erase(System.UInt32,System.UInt32)">
             <summary>
             Erase a substring.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Resize(System.UInt32)">
             <summary>
             Resize the string.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Reserve(System.UInt32)">
             <summary>
             Set new capacity.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Compact">
             <summary>
             Reallocate so that no extra memory is used.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Clear">
             <summary>
             Clear the string.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Substring(System.UInt32)">
             <summary>
             Return a substring from position to end.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Substring(System.UInt32,System.UInt32)">
             <summary>
             Return a substring with length from position.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Trimmed">
             <summary>
             Return string with whitespace trimmed from the beginning and the end.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.ToUpper">
             <summary>
             Return string in uppercase.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.ToLower">
             <summary>
             Return string in lowercase.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Find(System.String,System.UInt32,System.Boolean)">
             <summary>
             Return index to the first occurrence of a string, or NPOS if not found.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.FindLast(System.String,System.UInt32,System.Boolean)">
             <summary>
             Return index to the last occurrence of a string, or NPOS if not found.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.StartsWith(System.String,System.Boolean)">
             <summary>
             Return whether starts with a string.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.EndsWith(System.String,System.Boolean)">
             <summary>
             Return whether ends with a string.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Length">
             <summary>
             Return length.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Capacity">
             <summary>
             Return buffer capacity.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Empty">
             <summary>
             Return whether the string is empty.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Compare(System.String,System.Boolean)">
             <summary>
             Return comparison result with a string.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.Contains(System.String,System.Boolean)">
             <summary>
             Return whether contains a specific occurrence of a string.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.LengthUTF8">
             <summary>
             Calculate number of characters in UTF8 content.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.ByteOffsetUTF8(System.UInt32)">
             <summary>
             Return byte offset to char in UTF8 content.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.AtUTF8(System.UInt32)">
             <summary>
             Return Unicode character at index from UTF8 content.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.ReplaceUTF8(System.UInt32,System.UInt32)">
             <summary>
             Replace Unicode character at index from UTF8 content.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.SubstringUTF8(System.UInt32)">
             <summary>
             Return a UTF8 substring from position to end.
             </summary>
            </member>
        <member name="M:Urho.UrhoString.SubstringUTF8(System.UInt32,System.UInt32)">
             <summary>
             Return a UTF8 substring with length from position.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.UrhoString.ToHash-->
        <member name="T:Urho.VGComponent">
             <summary>
             Return child VGComponent.
             </summary>
            </member>
        <member name="M:Urho.VGComponent.GetChild(System.String,System.Boolean)">
             <summary>
             Return child VGComponent.
             </summary>
            </member>
        <member name="M:Urho.VGComponent.SetPosition(Urho.Vector2)">
             <summary>
             Set floating point position.
             
             </summary>
            </member>
        <member name="M:Urho.VGComponent.SetPosition(System.Single,System.Single)">
             <summary>
             Set floating point position.
             </summary>
            </member>
        <member name="M:Urho.VGComponent.SetHotSpot(Urho.Vector2)">
             <summary>
             Set hotspot for positioning and rotation.
             
             </summary>
            </member>
        <member name="M:Urho.VGComponent.SetHotSpot(System.Single,System.Single)">
             <summary>
             Set hotspot for positioning and rotation.
             </summary>
            </member>
        <member name="M:Urho.VGComponent.SetScale(Urho.Vector2)">
             <summary>
             Set scale. Scale also affects child sprites.
             
             </summary>
            </member>
        <member name="M:Urho.VGComponent.SetScale(System.Single,System.Single)">
             <summary>
             Set scale. Scale also affects child sprites.
             </summary>
            </member>
        <member name="M:Urho.VGComponent.SetScale(System.Single)">
             <summary>
             Set uniform scale. Scale also affects child sprites.
             </summary>
            </member>
        <member name="M:Urho.VGComponent.SetRotation(System.Single)">
             <summary>
             Set rotation angle.
             
             </summary>
            </member>
        <member name="M:Urho.VGComponent.GetHotSpot">
             <summary>
             Return hotspot.
             
             </summary>
            </member>
        <member name="P:Urho.VGComponent.HotSpot">
             <summary>
             Return hotspot.
             
             Or
             Set hotspot for positioning and rotation.
             
             </summary>
            </member>
        <member name="T:Urho.VGElement">
             <summary>
             Register object factory.
             </summary>
             <summary>
             Register object factory.
             </summary>
            </member>
        <member name="M:Urho.VGElement.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.VGElement.OnResize(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             React to resize.
             </summary>
            </member>
        <member name="T:Urho.VGTextRowBuffer">
             <summary>
             Destruct.
             </summary>
             <summary>
             Destruct.
             </summary>
            </member>
        <member name="T:Urho.VertexBuffer">
             <summary>
             Hardware vertex buffer.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.OnDeviceLost">
             <summary>
             Mark the buffer destroyed on graphics context destruction. May be a no-op depending on the API.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.Release">
             <summary>
             Release buffer.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.SetShadowed(System.Boolean)">
             <summary>
             Enable shadowing in CPU memory. Shadowing is forced on if the graphics subsystem does not exist.
             
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.SetSize(System.UInt32,Urho.ElementMask,System.Boolean)">
             <summary>
             Set size and vertex elements and dynamic mode using legacy element bitmask. Previous data will be lost.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.SetData(System.Void*)">
             <summary>
             Set all data in the buffer.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.SetDataRange(System.Void*,System.UInt32,System.UInt32,System.Boolean)">
             <summary>
             Set a data range in the buffer. Optionally discard data outside the range.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.Lock(System.UInt32,System.UInt32,System.Boolean)">
             <summary>
             Lock the buffer for write-only editing. Return data pointer if successful. Optionally discard data outside the range.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.Unlock">
             <summary>
             Unlock the buffer and apply changes to the GPU buffer.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.IsShadowed">
             <summary>
             Return whether CPU memory shadowing is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.IsDynamic">
             <summary>
             Return whether is dynamic.
             
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.IsLocked">
             <summary>
             Return whether is currently locked.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.GetVertexCount">
             <summary>
             Return number of vertices.
             
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.GetVertexSize">
             <summary>
             Return vertex size in bytes.
             
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.GetElement(Urho.VertexElementSemantic,System.Byte)">
             <summary>
             Return vertex element, or null if does not exist.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.GetElement(Urho.VertexElementType,Urho.VertexElementSemantic,System.Byte)">
             <summary>
             Return vertex element with specific type, or null if does not exist.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.HasElement(Urho.VertexElementSemantic,System.Byte)">
             <summary>
             Return whether has a specified element semantic.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.HasElement(Urho.VertexElementType,Urho.VertexElementSemantic,System.Byte)">
             <summary>
             Return whether has an element semantic with specific type.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.GetElementOffset(Urho.VertexElementSemantic,System.Byte)">
             <summary>
             Return offset of a element within vertex, or M_MAX_UNSIGNED if does not exist.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.GetElementOffset(Urho.VertexElementType,Urho.VertexElementSemantic,System.Byte)">
             <summary>
             Return offset of a element with specific type within vertex, or M_MAX_UNSIGNED if element does not exist.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.GetShadowData">
             <summary>
             Return CPU memory shadow data.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.GetBufferHash(System.UInt32)">
             <summary>
             Return buffer hash for building vertex declarations. Used internally.
             </summary>
            </member>
        <member name="M:Urho.VertexBuffer.GetVertexSize(Urho.ElementMask)">
             <summary>
             Return vertex size for a legacy vertex element bitmask.
             </summary>
            </member>
        <member name="P:Urho.VertexBuffer.Shadowed">
             <summary>
             Return whether CPU memory shadowing is enabled.
             
             Or
             Enable shadowing in CPU memory. Shadowing is forced on if the graphics subsystem does not exist.
             
             </summary>
            </member>
        <member name="P:Urho.VertexBuffer.Dynamic">
             <summary>
             Return whether is dynamic.
             
             </summary>
            </member>
        <member name="P:Urho.VertexBuffer.Locked">
             <summary>
             Return whether is currently locked.
             </summary>
            </member>
        <member name="P:Urho.VertexBuffer.VertexCount">
             <summary>
             Return number of vertices.
             
             </summary>
            </member>
        <member name="P:Urho.VertexBuffer.VertexSize">
             <summary>
             Return vertex size in bytes.
             
             </summary>
            </member>
        <member name="P:Urho.VertexBuffer.ShadowData">
             <summary>
             Return CPU memory shadow data.
             </summary>
            </member>
        <member name="T:Urho.Viewport">
             <summary>
             %Viewport definition either for a render surface or the backbuffer.
             </summary>
            </member>
        <member name="M:Urho.Viewport.SetScene(Urho.Scene)">
             <summary>
             Set scene.
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.SetCamera(Urho.Camera)">
             <summary>
             Set viewport camera.
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.SetRect(Urho.IntRect)">
             <summary>
             Set view rectangle. A zero rectangle (0 0 0 0) means to use the rendertarget's full dimensions.
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.SetRenderPath(Urho.RenderPath)">
             <summary>
             Set rendering path.
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.SetRenderPath(Urho.Resources.XmlFile)">
             <summary>
             Set rendering path from an XML file.
             </summary>
            </member>
        <member name="M:Urho.Viewport.SetDrawDebug(System.Boolean)">
             <summary>
             Set whether to render debug geometry. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.SetCullCamera(Urho.Camera)">
             <summary>
             Set separate camera to use for culling. Sharing a culling camera between several viewports allows to prepare the view only once, saving in CPU use. The culling camera's frustum should cover all the viewport cameras' frusta or else objects may be missing from the rendered view.
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.GetScene">
             <summary>
             Return scene.
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.GetCamera">
             <summary>
             Return viewport camera.
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.GetView">
             <summary>
             Return the internal rendering structure. May be null if the viewport has not been rendered yet.
             </summary>
            </member>
        <member name="M:Urho.Viewport.GetRect">
             <summary>
             Return view rectangle. A zero rectangle (0 0 0 0) means to use the rendertarget's full dimensions. In this case you could fetch the actual view rectangle from View object, though it will be valid only after the first frame.
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.GetRenderPath">
             <summary>
             Return rendering path.
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.GetDrawDebug">
             <summary>
             Return whether to draw debug geometry.
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.GetCullCamera">
             <summary>
             Return the culling camera. If null, the viewport camera will be used for culling (normal case).
             
             </summary>
            </member>
        <member name="M:Urho.Viewport.GetScreenRay(System.Int32,System.Int32)">
             <summary>
             Return ray corresponding to normalized screen coordinates.
             </summary>
            </member>
        <member name="M:Urho.Viewport.WorldToScreenPoint(Urho.Vector3)">
             <summary>
             Convert a world space point to normalized screen coordinates.
             </summary>
            </member>
        <member name="M:Urho.Viewport.ScreenToWorldPoint(System.Int32,System.Int32,System.Single)">
             <summary>
             Convert screen coordinates and depth to a world space point.
             </summary>
            </member>
        <member name="M:Urho.Viewport.AllocateView">
             <summary>
             Allocate the view structure. Called by Renderer.
             </summary>
            </member>
        <member name="M:Urho.Viewport.SetClearColor(Urho.Color)">
             <summary>
             Set  Viewport clear color , will override the color set in the RenderPath (CLEAR_CMD) , setting  the value of Color(0,0,0,0) will reset it to the default clear color used in the RenderPath
             </summary>
            </member>
        <member name="P:Urho.Viewport.Scene">
             <summary>
             Return scene.
             
             Or
             Set scene.
             
             </summary>
            </member>
        <member name="P:Urho.Viewport.Camera">
             <summary>
             Return viewport camera.
             
             Or
             Set viewport camera.
             
             </summary>
            </member>
        <member name="P:Urho.Viewport.Rect">
             <summary>
             Return view rectangle. A zero rectangle (0 0 0 0) means to use the rendertarget's full dimensions. In this case you could fetch the actual view rectangle from View object, though it will be valid only after the first frame.
             
             Or
             Set view rectangle. A zero rectangle (0 0 0 0) means to use the rendertarget's full dimensions.
             
             </summary>
            </member>
        <member name="P:Urho.Viewport.RenderPath">
             <summary>
             Return rendering path.
             
             Or
             Set rendering path.
             
             </summary>
            </member>
        <member name="P:Urho.Viewport.DrawDebug">
             <summary>
             Return whether to draw debug geometry.
             
             Or
             Set whether to render debug geometry. Default true.
             
             </summary>
            </member>
        <member name="P:Urho.Viewport.CullCamera">
             <summary>
             Return the culling camera. If null, the viewport camera will be used for culling (normal case).
             
             Or
             Set separate camera to use for culling. Sharing a culling camera between several viewports allows to prepare the view only once, saving in CPU use. The culling camera's frustum should cover all the viewport cameras' frusta or else objects may be missing from the rendered view.
             
             </summary>
            </member>
        <member name="P:Urho.Viewport.View">
             <summary>
             Return the internal rendering structure. May be null if the viewport has not been rendered yet.
             </summary>
            </member>
        <member name="T:Urho.Resources.XmlElement">
             <summary>
             Element in an XML file.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.CreateChild(System.String)">
             <summary>
             Create a child element.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetOrCreateChild(System.String)">
             <summary>
             Return the first child element with name or create if does not exist.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.AppendChild(Urho.Resources.XmlElement,System.Boolean)">
             <summary>
             Append element. If asCopy is set to true then original element is copied and appended, otherwise specified element is appended.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.Remove">
             <summary>
             Remove element from its parent.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.RemoveChild(Urho.Resources.XmlElement)">
             <summary>
             Remove a child element. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.RemoveChild(System.String)">
             <summary>
             Remove a child element by name. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.RemoveChildren(System.String)">
             <summary>
             Remove child elements of certain name, or all child elements if name is empty. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.RemoveAttribute(System.String)">
             <summary>
             Remove an attribute by name. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetValue(System.String)">
             <summary>
             Set the value for an inner node in the following format
             <node>value
             </node>.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetAttribute(System.String,System.String)">
             <summary>
             Set an attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetAttribute(System.String)">
             <summary>
             Set an attribute. Only valid if it is an attribute only XPath query result.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetBool(System.String,System.Boolean)">
             <summary>
             Set a bool attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetBoundingBox(Urho.BoundingBox)">
             <summary>
             Set a BoundingBox attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetBoundingBox(System.String,Urho.BoundingBox)">
             <summary>
             Set a BoundingBox attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetBuffer(System.String,System.Void*,System.UInt32)">
             <summary>
             Set a buffer attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetColor(System.String,Urho.Color)">
             <summary>
             Set a color attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetFloat(System.String,System.Single)">
             <summary>
             Set a float attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetDouble(System.String,System.Double)">
             <summary>
             Set a double attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetUInt(System.String,System.UInt32)">
             <summary>
             Set an unsigned integer attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetInt(System.String,System.Int32)">
             <summary>
             Set an integer attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetUInt64(System.String,System.UInt64)">
             <summary>
             Set an unsigned long long integer attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetInt64(System.String,System.Int64)">
             <summary>
             Set a long long integer attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetIntRect(System.String,Urho.IntRect)">
             <summary>
             Set an IntRect attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetIntVector2(System.String,Urho.IntVector2)">
             <summary>
             Set an IntVector2 attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetQuaternion(System.String,Urho.Quaternion)">
             <summary>
             Set a quaternion attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetString(System.String,System.String)">
             <summary>
             Set a string attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(Urho.Vector3)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(Urho.IntRect)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(Urho.Color)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(Urho.Vector2)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(Urho.Vector4)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(Urho.IntVector2)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(Urho.Quaternion)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(Urho.Matrix4)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(Urho.Matrix3)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(Urho.Matrix3x4)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(System.Int32)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(System.Single)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(System.String)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariant(System.Boolean)">
             <summary>
             Set a variant attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(Urho.Vector3)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(Urho.IntRect)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(Urho.Color)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(Urho.Vector2)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(Urho.Vector4)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(Urho.IntVector2)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(Urho.Quaternion)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(Urho.Matrix4)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(Urho.Matrix3)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(Urho.Matrix3x4)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(System.Int32)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(System.Single)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(System.String)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVariantValue(System.Boolean)">
             <summary>
             Set a variant attribute excluding the type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVector2(System.String,Urho.Vector2)">
             <summary>
             Set a Vector2 attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVector3(System.String,Urho.Vector3)">
             <summary>
             Set a Vector3 attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVector4(System.String,Urho.Vector4)">
             <summary>
             Set a Vector4 attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,Urho.Vector3)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,Urho.IntRect)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,Urho.Color)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,Urho.Vector2)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,Urho.Vector4)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,Urho.IntVector2)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,Urho.Quaternion)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,Urho.Matrix4)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,Urho.Matrix3)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,Urho.Matrix3x4)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,System.Int32)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,System.Single)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,System.String)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetVectorVariant(System.String,System.Boolean)">
             <summary>
             Set a float, Vector or Matrix attribute stored in a variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetMatrix3(System.String,Urho.Matrix3)">
             <summary>
             Set a Matrix3 attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetMatrix3x4(System.String,Urho.Matrix3x4)">
             <summary>
             Set a Matrix3x4 attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.SetMatrix4(System.String,Urho.Matrix4)">
             <summary>
             Set a Matrix4 attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.IsNull">
             <summary>
             Return whether does not refer to an element or an XPath node.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.NotNull">
             <summary>
             Return whether refers to an element or an XPath node.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetName">
             <summary>
             Return element name (or attribute name if it is an attribute only XPath query result).
             
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.HasChild(System.String)">
             <summary>
             Return whether has a child element.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetChild(System.String)">
             <summary>
             Return child element, or null if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetNext(System.String)">
             <summary>
             Return next sibling element.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetParent">
             <summary>
             Return parent element.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetNumAttributes">
             <summary>
             Return number of attributes.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.HasAttribute(System.String)">
             <summary>
             Return whether has an attribute.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetValue">
             <summary>
             Return inner value, or empty if missing for nodes like
             <node>value
             </node>.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetAttribute(System.String)">
             <summary>
             Return attribute, or empty if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetAttributeLower(System.String)">
             <summary>
             Return attribute in lowercase, or empty if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetAttributeUpper(System.String)">
             <summary>
             Return attribute in lowercase, or empty if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetBool(System.String)">
             <summary>
             Return bool attribute, or false if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetBuffer(System.String,System.IntPtr,System.UInt32)">
             <summary>
             Copy buffer attribute into a supplied buffer. Return true if buffer was large enough.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetBoundingBox">
             <summary>
             Return bounding box attribute, or empty if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetBoundingBox(System.String)">
             <summary>
             Return bounding box attribute, or empty if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetColor(System.String)">
             <summary>
             Return a color attribute, or default if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetFloat(System.String)">
             <summary>
             Return a float attribute, or zero if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetDouble(System.String)">
             <summary>
             Return a double attribute, or zero if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetUInt(System.String)">
             <summary>
             Return an unsigned integer attribute, or zero if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetInt(System.String)">
             <summary>
             Return an integer attribute, or zero if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetUInt64(System.String)">
             <summary>
             Return an unsigned long long integer attribute, or zero if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetInt64(System.String)">
             <summary>
             Return a long long integer attribute, or zero if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetIntRect(System.String)">
             <summary>
             Return an IntRect attribute, or default if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetIntVector2(System.String)">
             <summary>
             Return an IntVector2 attribute, or default if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetIntVector3(System.String)">
             <summary>
             Return an IntVector3 attribute, or default if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetRect(System.String)">
             <summary>
             Return a Rect attribute, or default if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetQuaternion(System.String)">
             <summary>
             Return a quaternion attribute, or default if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetVariant">
             <summary>
             Return a variant attribute, or empty if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetVariantValue(Urho.VariantType)">
             <summary>
             Return a variant attribute with static type.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetResourceRef">
             <summary>
             Return a resource reference attribute, or empty if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetResourceRefList">
             <summary>
             Return a resource reference list attribute, or empty if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetVector2(System.String)">
             <summary>
             Return a Vector2 attribute, or zero vector if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetVector3(System.String)">
             <summary>
             Return a Vector3 attribute, or zero vector if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetVector4(System.String)">
             <summary>
             Return a Vector4 attribute, or zero vector if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetVector(System.String)">
             <summary>
             Return any Vector attribute as Vector4. Missing coordinates will be zero.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetVectorVariant(System.String)">
             <summary>
             Return a float, Vector or Matrix attribute as Variant.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetMatrix3(System.String)">
             <summary>
             Return a Matrix3 attribute, or zero matrix if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetMatrix3x4(System.String)">
             <summary>
             Return a Matrix3x4 attribute, or zero matrix if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetMatrix4(System.String)">
             <summary>
             Return a Matrix4 attribute, or zero matrix if missing.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetFile">
             <summary>
             Return XML file.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetXPathResultSet">
             <summary>
             Return XPath query result set.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.GetXPathResultIndex">
             <summary>
             Return current result index.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlElement.NextResult">
             <summary>
             Return next XPath query result. Only valid when this instance of XMLElement is itself one of the query result in the result set.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.Value">
             <summary>
             Return inner value, or empty if missing for nodes like
             <node>value
             </node>.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.BoundingBox">
             <summary>
             Return bounding box attribute, or empty if missing.
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.Variant">
             <summary>
             Return a variant attribute, or empty if missing.
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.ResourceRef">
             <summary>
             Return a resource reference attribute, or empty if missing.
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.ResourceRefList">
             <summary>
             Return a resource reference list attribute, or empty if missing.
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.Null">
             <summary>
             Return whether does not refer to an element or an XPath node.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.Name">
             <summary>
             Return element name (or attribute name if it is an attribute only XPath query result).
             
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.Parent">
             <summary>
             Return parent element.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.NumAttributes">
             <summary>
             Return number of attributes.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.File">
             <summary>
             Return XML file.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.XPathResultSet">
             <summary>
             Return XPath query result set.
             </summary>
            </member>
        <member name="P:Urho.Resources.XmlElement.XPathResultIndex">
             <summary>
             Return current result index.
             </summary>
            </member>
        <member name="P:Urho.Actions.ActionState.Target">
             <summary>
             Gets or sets the target.
             
             Will be set with the 'StartAction' method of the corresponding Action. 
             When the 'Stop' method is called, Target will be set to null. 
             
             </summary>
             <value>The target.</value>
            </member>
        <member name="P:Urho.Actions.ActionState.IsDone">
             <summary>
             Gets a value indicating whether this instance is done.
             </summary>
             <value><c>true</c> if this instance is done; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:Urho.Actions.ActionState.Stop">
             <summary>
             Called after the action has finished.
             It will set the 'Target' to null. 
             IMPORTANT: You should never call this method manually. Instead, use: "target.StopAction(actionState);"
             </summary>
            </member>
        <member name="M:Urho.Actions.ActionState.Step(System.Single)">
             <summary>
             Called every frame with it's delta time. 
             
             DON'T override unless you know what you are doing.
             
             </summary>
             <param name="dt">Delta Time</param>
            </member>
        <member name="M:Urho.Actions.ActionState.Update(System.Single)">
             <summary>
             Called once per frame.
             </summary>
             <param name="time">A value between 0 and 1
            
             For example:
            
             0 means that the action just started
             0.5 means that the action is in the middle
             1 means that the action is over</param>
            </member>
        <member name="T:Urho.IntVector2">
             <summary>Represents a 2D vector using two single-precision inting-point numbers.</summary>
             <remarks>
             The IntVector2 structure is suitable for interoperation with unmanaged code requiring two consecutive ints.
             </remarks>
            </member>
        <member name="F:Urho.IntVector2.X">
             <summary>
             The X component of the IntVector2.
             </summary>
            </member>
        <member name="F:Urho.IntVector2.Y">
             <summary>
             The Y component of the IntVector2.
             </summary>
            </member>
        <member name="M:Urho.IntVector2.#ctor(System.Int32,System.Int32)">
             <summary>
             Constructs a new IntVector2.
             </summary>
             <param name="x">The x coordinate of the net IntVector2.</param>
             <param name="y">The y coordinate of the net IntVector2.</param>
            </member>
        <member name="M:Urho.IntVector2.#ctor(Urho.IntVector2)">
             <summary>
             Constructs a new IntVector2 from the given IntVector2.
             </summary>
             <param name="v">The IntVector2 to copy components from.</param>
            </member>
        <member name="M:Urho.IntVector2.#ctor(Urho.Vector2)">
             <summary>
             Constructs a new IntVector2 from the given Vector2.
             </summary>
             <param name="v">The IntVector2 to copy components from.</param>
            </member>
        <member name="M:Urho.IntVector2.Add(Urho.IntVector2)">
             <summary>Add the Vector passed as parameter to this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.IntVector2.Add(Urho.IntVector2@)">
             <summary>Add the Vector passed as parameter to this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.IntVector2.Sub(Urho.IntVector2)">
             <summary>Subtract the Vector passed as parameter from this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.IntVector2.Sub(Urho.IntVector2@)">
             <summary>Subtract the Vector passed as parameter from this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.IntVector2.Mult(System.Int32)">
             <summary>Multiply this instance by a scalar.</summary>
             <param name="f">Scalar operand.</param>
            </member>
        <member name="M:Urho.IntVector2.Div(System.Int32)">
             <summary>Divide this instance by a scalar.</summary>
             <param name="f">Scalar operand.</param>
            </member>
        <member name="P:Urho.IntVector2.Length">
             <summary>
             Gets the length (magnitude) of the vector.
             </summary>
             <see cref="P:Urho.IntVector2.LengthFast" />
             <seealso cref="P:Urho.IntVector2.LengthSquared" />
            </member>
        <member name="P:Urho.IntVector2.LengthFast">
             <summary>
             Gets an approximation of the vector length (magnitude).
             </summary>
             <remarks>
             This property uses an approximation of the square root function to calculate vector magnitude, with
             an upper error bound of 0.001.
             </remarks>
             <see cref="P:Urho.IntVector2.Length" />
             <seealso cref="P:Urho.IntVector2.LengthSquared" />
            </member>
        <member name="P:Urho.IntVector2.LengthSquared">
             <summary>
             Gets the square of the vector length (magnitude).
             </summary>
             <remarks>
             This property avoids the costly square root operation required by the Length property. This makes it more suitable
             for comparisons.
             </remarks>
             <see cref="P:Urho.IntVector2.Length" />
             <seealso cref="P:Urho.IntVector2.LengthFast" />
            </member>
        <member name="P:Urho.IntVector2.PerpendicularRight">
             <summary>
             Gets the perpendicular vector on the right side of this vector.
             </summary>
            </member>
        <member name="P:Urho.IntVector2.PerpendicularLeft">
             <summary>
             Gets the perpendicular vector on the left side of this vector.
             </summary>
            </member>
        <member name="M:Urho.IntVector2.Normalize">
             <summary>
             Scales the IntVector2 to unit length.
             </summary>
            </member>
        <member name="M:Urho.IntVector2.NormalizeFast">
             <summary>
             Scales the IntVector2 to approximately unit length.
             </summary>
            </member>
        <member name="M:Urho.IntVector2.Scale(System.Int32,System.Int32)">
             <summary>
             Scales the current IntVector2 by the given amounts.
             </summary>
             <param name="sx">The scale of the X component.</param>
             <param name="sy">The scale of the Y component.</param>
            </member>
        <member name="M:Urho.IntVector2.Scale(Urho.IntVector2)">
             <summary>Scales this instance by the given parameter.</summary>
             <param name="scale">The scaling of the individual components.</param>
            </member>
        <member name="M:Urho.IntVector2.Scale(Urho.IntVector2@)">
             <summary>Scales this instance by the given parameter.</summary>
             <param name="scale">The scaling of the individual components.</param>
            </member>
        <member name="F:Urho.IntVector2.UnitX">
             <summary>
             Defines a unit-length IntVector2 that points towards the X-axis.
             </summary>
            </member>
        <member name="F:Urho.IntVector2.UnitY">
             <summary>
             Defines a unit-length IntVector2 that points towards the Y-axis.
             </summary>
            </member>
        <member name="F:Urho.IntVector2.Zero">
             <summary>
             Defines a zero-length IntVector2.
             </summary>
            </member>
        <member name="F:Urho.IntVector2.One">
             <summary>
             Defines an instance with all components set to 1.
             </summary>
            </member>
        <member name="F:Urho.IntVector2.SizeInBytes">
             <summary>
             Defines the size of the IntVector2 struct in bytes.
             </summary>
            </member>
        <member name="M:Urho.IntVector2.Add(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Adds two vectors.
             </summary>
             <param name="a">Left operand.</param>
             <param name="b">Right operand.</param>
             <returns>Result of operation.</returns>
            </member>
        <member name="M:Urho.IntVector2.Add(Urho.IntVector2@,Urho.IntVector2@,Urho.IntVector2@)">
             <summary>
             Adds two vectors.
             </summary>
             <param name="a">Left operand.</param>
             <param name="b">Right operand.</param>
             <param name="result">Result of operation.</param>
            </member>
        <member name="M:Urho.IntVector2.Subtract(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>Result of subtraction</returns>
            </member>
        <member name="M:Urho.IntVector2.Subtract(Urho.IntVector2@,Urho.IntVector2@,Urho.IntVector2@)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">Result of subtraction</param>
            </member>
        <member name="M:Urho.IntVector2.Multiply(Urho.IntVector2,System.Int32)">
             <summary>
             Multiplies a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.IntVector2.Multiply(Urho.IntVector2@,System.Int32,Urho.IntVector2@)">
             <summary>
             Multiplies a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.IntVector2.Multiply(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Multiplies a vector by the components a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.IntVector2.Multiply(Urho.IntVector2@,Urho.IntVector2@,Urho.IntVector2@)">
             <summary>
             Multiplies a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.IntVector2.Divide(Urho.IntVector2,System.Int32)">
             <summary>
             Divides a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.IntVector2.Divide(Urho.IntVector2@,System.Int32,Urho.IntVector2@)">
             <summary>
             Divides a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.IntVector2.Divide(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Divides a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.IntVector2.Divide(Urho.IntVector2@,Urho.IntVector2@,Urho.IntVector2@)">
             <summary>
             Divide a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.IntVector2.ComponentMin(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Calculate the component-wise minimum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>The component-wise minimum</returns>
            </member>
        <member name="M:Urho.IntVector2.ComponentMin(Urho.IntVector2@,Urho.IntVector2@,Urho.IntVector2@)">
             <summary>
             Calculate the component-wise minimum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">The component-wise minimum</param>
            </member>
        <member name="M:Urho.IntVector2.ComponentMax(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Calculate the component-wise maximum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>The component-wise maximum</returns>
            </member>
        <member name="M:Urho.IntVector2.ComponentMax(Urho.IntVector2@,Urho.IntVector2@,Urho.IntVector2@)">
             <summary>
             Calculate the component-wise maximum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">The component-wise maximum</param>
            </member>
        <member name="M:Urho.IntVector2.Min(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Returns the Vector3 with the minimum magnitude
             </summary>
             <param name="left">Left operand</param>
             <param name="right">Right operand</param>
             <returns>The minimum Vector3</returns>
            </member>
        <member name="M:Urho.IntVector2.Max(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Returns the Vector3 with the minimum magnitude
             </summary>
             <param name="left">Left operand</param>
             <param name="right">Right operand</param>
             <returns>The minimum Vector3</returns>
            </member>
        <member name="M:Urho.IntVector2.Clamp(Urho.IntVector2,Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Clamp a vector to the given minimum and maximum vectors
             </summary>
             <param name="vec">Input vector</param>
             <param name="min">Minimum vector</param>
             <param name="max">Maximum vector</param>
             <returns>The clamped vector</returns>
            </member>
        <member name="M:Urho.IntVector2.Clamp(Urho.IntVector2@,Urho.IntVector2@,Urho.IntVector2@,Urho.IntVector2@)">
             <summary>
             Clamp a vector to the given minimum and maximum vectors
             </summary>
             <param name="vec">Input vector</param>
             <param name="min">Minimum vector</param>
             <param name="max">Maximum vector</param>
             <param name="result">The clamped vector</param>
            </member>
        <member name="M:Urho.IntVector2.Normalize(Urho.IntVector2)">
             <summary>
             Scale a vector to unit length
             </summary>
             <param name="vec">The input vector</param>
             <returns>The normalized vector</returns>
            </member>
        <member name="M:Urho.IntVector2.Normalize(Urho.IntVector2@,Urho.IntVector2@)">
             <summary>
             Scale a vector to unit length
             </summary>
             <param name="vec">The input vector</param>
             <param name="result">The normalized vector</param>
            </member>
        <member name="M:Urho.IntVector2.NormalizeFast(Urho.IntVector2)">
             <summary>
             Scale a vector to approximately unit length
             </summary>
             <param name="vec">The input vector</param>
             <returns>The normalized vector</returns>
            </member>
        <member name="M:Urho.IntVector2.NormalizeFast(Urho.IntVector2@,Urho.IntVector2@)">
             <summary>
             Scale a vector to approximately unit length
             </summary>
             <param name="vec">The input vector</param>
             <param name="result">The normalized vector</param>
            </member>
        <member name="M:Urho.IntVector2.Dot(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Calculate the dot (scalar) product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <returns>The dot product of the two inputs</returns>
            </member>
        <member name="M:Urho.IntVector2.Dot(Urho.IntVector2@,Urho.IntVector2@,System.Int32@)">
             <summary>
             Calculate the dot (scalar) product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <param name="result">The dot product of the two inputs</param>
            </member>
        <member name="M:Urho.IntVector2.Lerp(Urho.IntVector2,Urho.IntVector2,System.Int32)">
             <summary>
             Returns a new Vector that is the linear blend of the 2 given Vectors
             </summary>
             <param name="a">First input vector</param>
             <param name="b">Second input vector</param>
             <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
             <returns>a when blend=0, b when blend=1, and a linear combination otherwise</returns>
            </member>
        <member name="M:Urho.IntVector2.Lerp(Urho.IntVector2@,Urho.IntVector2@,System.Int32,Urho.IntVector2@)">
             <summary>
             Returns a new Vector that is the linear blend of the 2 given Vectors
             </summary>
             <param name="a">First input vector</param>
             <param name="b">Second input vector</param>
             <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
             <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
            </member>
        <member name="M:Urho.IntVector2.BaryCentric(Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,System.Int32,System.Int32)">
             <summary>
             Interpolate 3 Vectors using Barycentric coordinates
             </summary>
             <param name="a">First input Vector</param>
             <param name="b">Second input Vector</param>
             <param name="c">Third input Vector</param>
             <param name="u">First Barycentric Coordinate</param>
             <param name="v">Second Barycentric Coordinate</param>
             <returns>a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</returns>
            </member>
        <member name="M:Urho.IntVector2.BaryCentric(Urho.IntVector2@,Urho.IntVector2@,Urho.IntVector2@,System.Int32,System.Int32,Urho.IntVector2@)">
             <summary>Interpolate 3 Vectors using Barycentric coordinates</summary>
             <param name="a">First input Vector.</param>
             <param name="b">Second input Vector.</param>
             <param name="c">Third input Vector.</param>
             <param name="u">First Barycentric Coordinate.</param>
             <param name="v">Second Barycentric Coordinate.</param>
             <param name="result">Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</param>
            </member>
        <member name="M:Urho.IntVector2.op_Addition(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Adds the specified instances.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>Result of addition.</returns>
            </member>
        <member name="M:Urho.IntVector2.op_Subtraction(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Subtracts the specified instances.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>Result of subtraction.</returns>
            </member>
        <member name="M:Urho.IntVector2.op_UnaryNegation(Urho.IntVector2)">
             <summary>
             Negates the specified instance.
             </summary>
             <param name="vec">Operand.</param>
             <returns>Result of negation.</returns>
            </member>
        <member name="M:Urho.IntVector2.op_Multiply(Urho.IntVector2,System.Int32)">
             <summary>
             Multiplies the specified instance by a scalar.
             </summary>
             <param name="vec">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of multiplication.</returns>
            </member>
        <member name="M:Urho.IntVector2.op_Multiply(System.Int32,Urho.IntVector2)">
             <summary>
             Multiplies the specified instance by a scalar.
             </summary>
             <param name="scale">Left operand.</param>
             <param name="vec">Right operand.</param>
             <returns>Result of multiplication.</returns>
            </member>
        <member name="M:Urho.IntVector2.op_Division(Urho.IntVector2,System.Int32)">
             <summary>
             Divides the specified instance by a scalar.
             </summary>
             <param name="vec">Left operand</param>
             <param name="scale">Right operand</param>
             <returns>Result of the division.</returns>
            </member>
        <member name="M:Urho.IntVector2.op_Equality(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Compares the specified instances for equality.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>True if both instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.IntVector2.op_Inequality(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Compares the specified instances for inequality.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>True if both instances are not equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.IntVector2.ToString">
             <summary>
             Returns a System.String that represents the current IntVector2.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Urho.IntVector2.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.IntVector2.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare to.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.IntVector2.Equals(Urho.IntVector2)">
             <summary>Indicates whether the current vector is equal to another vector.</summary>
             <param name="other">A vector to compare with this vector.</param>
             <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
            </member>
        <member name="M:Urho.IntVector2.Distance(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Distance between two 2D points (should be moved to IntVector2).
             </summary>
            </member>
        <member name="T:Urho.IntVector3">
             <summary>Represents a 2D vector using two single-precision inting-point numbers.</summary>
             <remarks>
             The IntVector3 structure is suitable for interoperation with unmanaged code requiring two consecutive ints.
             </remarks>
            </member>
        <member name="F:Urho.IntVector3.X">
             <summary>
             The X component of the IntVector3.
             </summary>
            </member>
        <member name="F:Urho.IntVector3.Y">
             <summary>
             The Y component of the IntVector3.
             </summary>
            </member>
        <member name="F:Urho.IntVector3.Z">
             <summary>
             The Y component of the IntVector3.
             </summary>
            </member>
        <member name="M:Urho.IntVector3.#ctor(System.Int32,System.Int32,System.Int32)">
             <summary>
             Constructs a new IntVector3.
             </summary>
             <param name="x">The x coordinate of the net IntVector3.</param>
             <param name="y">The y coordinate of the net IntVector3.</param>
             <param name="z">The z coordinate of the net IntVector3.</param>
            </member>
        <member name="M:Urho.IntVector3.#ctor(Urho.IntVector3)">
             <summary>
             Constructs a new IntVector3 from the given IntVector3.
             </summary>
             <param name="v">The IntVector3 to copy components from.</param>
            </member>
        <member name="M:Urho.IntVector3.#ctor(Urho.Vector3)">
             <summary>
             Constructs a new IntVector3 from the given Vector2.
             </summary>
             <param name="v">The IntVector3 to copy components from.</param>
            </member>
        <member name="M:Urho.IntVector3.Add(Urho.IntVector3)">
             <summary>Add the Vector passed as parameter to this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.IntVector3.Add(Urho.IntVector3@)">
             <summary>Add the Vector passed as parameter to this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.IntVector3.Sub(Urho.IntVector3)">
             <summary>Subtract the Vector passed as parameter from this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.IntVector3.Sub(Urho.IntVector3@)">
             <summary>Subtract the Vector passed as parameter from this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.IntVector3.Mult(System.Int32)">
             <summary>Multiply this instance by a scalar.</summary>
             <param name="f">Scalar operand.</param>
            </member>
        <member name="M:Urho.IntVector3.Div(System.Int32)">
             <summary>Divide this instance by a scalar.</summary>
             <param name="f">Scalar operand.</param>
            </member>
        <member name="P:Urho.IntVector3.Length">
             <summary>
             Gets the length (magnitude) of the vector.
             </summary>
             <see cref="P:Urho.IntVector3.LengthFast" />
             <seealso cref="P:Urho.IntVector3.LengthSquared" />
            </member>
        <member name="P:Urho.IntVector3.LengthFast">
             <summary>
             Gets an approximation of the vector length (magnitude).
             </summary>
             <remarks>
             This property uses an approximation of the square root function to calculate vector magnitude, with
             an upper error bound of 0.001.
             </remarks>
             <see cref="P:Urho.IntVector3.Length" />
             <seealso cref="P:Urho.IntVector3.LengthSquared" />
            </member>
        <member name="P:Urho.IntVector3.LengthSquared">
             <summary>
             Gets the square of the vector length (magnitude).
             </summary>
             <remarks>
             This property avoids the costly square root operation required by the Length property. This makes it more suitable
             for comparisons.
             </remarks>
             <see cref="P:Urho.IntVector3.Length" />
             <seealso cref="P:Urho.IntVector3.LengthFast" />
            </member>
        <member name="P:Urho.IntVector3.PerpendicularRight">
             <summary>
             Gets the perpendicular vector on the right side of this vector.
             </summary>
            </member>
        <member name="P:Urho.IntVector3.PerpendicularLeft">
             <summary>
             Gets the perpendicular vector on the left side of this vector.
             </summary>
            </member>
        <member name="M:Urho.IntVector3.Normalize">
             <summary>
             Scales the IntVector3 to unit length.
             </summary>
            </member>
        <member name="M:Urho.IntVector3.NormalizeFast">
             <summary>
             Scales the IntVector3 to approximately unit length.
             </summary>
            </member>
        <member name="M:Urho.IntVector3.Scale(System.Int32,System.Int32,System.Int32)">
             <summary>
             Scales the current IntVector3 by the given amounts.
             </summary>
             <param name="sx">The scale of the X component.</param>
             <param name="sy">The scale of the Y component.</param>
             <param name="sz">The scale of the Z component.</param>
            </member>
        <member name="M:Urho.IntVector3.Scale(Urho.IntVector3)">
             <summary>Scales this instance by the given parameter.</summary>
             <param name="scale">The scaling of the individual components.</param>
            </member>
        <member name="M:Urho.IntVector3.Scale(Urho.IntVector3@)">
             <summary>Scales this instance by the given parameter.</summary>
             <param name="scale">The scaling of the individual components.</param>
            </member>
        <member name="F:Urho.IntVector3.UnitX">
             <summary>
             Defines a unit-length IntVector3 that points towards the X-axis.
             </summary>
            </member>
        <member name="F:Urho.IntVector3.UnitY">
             <summary>
             Defines a unit-length IntVector3 that points towards the Y-axis.
             </summary>
            </member>
        <member name="F:Urho.IntVector3.UnitZ">
             <summary>
             Defines a unit-length IntVector3 that points towards the Z-axis.
             </summary>
            </member>
        <member name="F:Urho.IntVector3.Zero">
             <summary>
             Defines a zero-length IntVector3.
             </summary>
            </member>
        <member name="F:Urho.IntVector3.One">
             <summary>
             Defines an instance with all components set to 1.
             </summary>
            </member>
        <member name="F:Urho.IntVector3.SizeInBytes">
             <summary>
             Defines the size of the IntVector3 struct in bytes.
             </summary>
            </member>
        <member name="M:Urho.IntVector3.Add(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Adds two vectors.
             </summary>
             <param name="a">Left operand.</param>
             <param name="b">Right operand.</param>
             <returns>Result of operation.</returns>
            </member>
        <member name="M:Urho.IntVector3.Add(Urho.IntVector3@,Urho.IntVector3@,Urho.IntVector3@)">
             <summary>
             Adds two vectors.
             </summary>
             <param name="a">Left operand.</param>
             <param name="b">Right operand.</param>
             <param name="result">Result of operation.</param>
            </member>
        <member name="M:Urho.IntVector3.Subtract(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>Result of subtraction</returns>
            </member>
        <member name="M:Urho.IntVector3.Subtract(Urho.IntVector3@,Urho.IntVector3@,Urho.IntVector3@)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">Result of subtraction</param>
            </member>
        <member name="M:Urho.IntVector3.Multiply(Urho.IntVector3,System.Int32)">
             <summary>
             Multiplies a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.IntVector3.Multiply(Urho.IntVector3@,System.Int32,Urho.IntVector3@)">
             <summary>
             Multiplies a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.IntVector3.Multiply(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Multiplies a vector by the components a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.IntVector3.Multiply(Urho.IntVector3@,Urho.IntVector3@,Urho.IntVector3@)">
             <summary>
             Multiplies a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.IntVector3.Divide(Urho.IntVector3,System.Int32)">
             <summary>
             Divides a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.IntVector3.Divide(Urho.IntVector3@,System.Int32,Urho.IntVector3@)">
             <summary>
             Divides a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.IntVector3.Divide(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Divides a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.IntVector3.Divide(Urho.IntVector3@,Urho.IntVector3@,Urho.IntVector3@)">
             <summary>
             Divide a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.IntVector3.ComponentMin(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Calculate the component-wise minimum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>The component-wise minimum</returns>
            </member>
        <member name="M:Urho.IntVector3.ComponentMin(Urho.IntVector3@,Urho.IntVector3@,Urho.IntVector3@)">
             <summary>
             Calculate the component-wise minimum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">The component-wise minimum</param>
            </member>
        <member name="M:Urho.IntVector3.ComponentMax(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Calculate the component-wise maximum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>The component-wise maximum</returns>
            </member>
        <member name="M:Urho.IntVector3.ComponentMax(Urho.IntVector3@,Urho.IntVector3@,Urho.IntVector3@)">
             <summary>
             Calculate the component-wise maximum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">The component-wise maximum</param>
            </member>
        <member name="M:Urho.IntVector3.Min(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Returns the Vector3 with the minimum magnitude
             </summary>
             <param name="left">Left operand</param>
             <param name="right">Right operand</param>
             <returns>The minimum Vector3</returns>
            </member>
        <member name="M:Urho.IntVector3.Max(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Returns the Vector3 with the minimum magnitude
             </summary>
             <param name="left">Left operand</param>
             <param name="right">Right operand</param>
             <returns>The minimum Vector3</returns>
            </member>
        <member name="M:Urho.IntVector3.Clamp(Urho.IntVector3,Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Clamp a vector to the given minimum and maximum vectors
             </summary>
             <param name="vec">Input vector</param>
             <param name="min">Minimum vector</param>
             <param name="max">Maximum vector</param>
             <returns>The clamped vector</returns>
            </member>
        <member name="M:Urho.IntVector3.Clamp(Urho.IntVector3@,Urho.IntVector3@,Urho.IntVector3@,Urho.IntVector3@)">
             <summary>
             Clamp a vector to the given minimum and maximum vectors
             </summary>
             <param name="vec">Input vector</param>
             <param name="min">Minimum vector</param>
             <param name="max">Maximum vector</param>
             <param name="result">The clamped vector</param>
            </member>
        <member name="M:Urho.IntVector3.Normalize(Urho.IntVector3)">
             <summary>
             Scale a vector to unit length
             </summary>
             <param name="vec">The input vector</param>
             <returns>The normalized vector</returns>
            </member>
        <member name="M:Urho.IntVector3.Normalize(Urho.IntVector3@,Urho.IntVector3@)">
             <summary>
             Scale a vector to unit length
             </summary>
             <param name="vec">The input vector</param>
             <param name="result">The normalized vector</param>
            </member>
        <member name="M:Urho.IntVector3.NormalizeFast(Urho.IntVector3)">
             <summary>
             Scale a vector to approximately unit length
             </summary>
             <param name="vec">The input vector</param>
             <returns>The normalized vector</returns>
            </member>
        <member name="M:Urho.IntVector3.NormalizeFast(Urho.IntVector3@,Urho.IntVector3@)">
             <summary>
             Scale a vector to approximately unit length
             </summary>
             <param name="vec">The input vector</param>
             <param name="result">The normalized vector</param>
            </member>
        <member name="M:Urho.IntVector3.Dot(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Calculate the dot (scalar) product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <returns>The dot product of the two inputs</returns>
            </member>
        <member name="M:Urho.IntVector3.Dot(Urho.IntVector3@,Urho.IntVector3@,System.Int32@)">
             <summary>
             Calculate the dot (scalar) product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <param name="result">The dot product of the two inputs</param>
            </member>
        <member name="M:Urho.IntVector3.Lerp(Urho.IntVector3,Urho.IntVector3,System.Int32)">
             <summary>
             Returns a new Vector that is the linear blend of the 2 given Vectors
             </summary>
             <param name="a">First input vector</param>
             <param name="b">Second input vector</param>
             <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
             <returns>a when blend=0, b when blend=1, and a linear combination otherwise</returns>
            </member>
        <member name="M:Urho.IntVector3.Lerp(Urho.IntVector3@,Urho.IntVector3@,System.Int32,Urho.IntVector3@)">
             <summary>
             Returns a new Vector that is the linear blend of the 2 given Vectors
             </summary>
             <param name="a">First input vector</param>
             <param name="b">Second input vector</param>
             <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
             <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
            </member>
        <member name="M:Urho.IntVector3.BaryCentric(Urho.IntVector3,Urho.IntVector3,Urho.IntVector3,System.Int32,System.Int32)">
             <summary>
             Interpolate 3 Vectors using Barycentric coordinates
             </summary>
             <param name="a">First input Vector</param>
             <param name="b">Second input Vector</param>
             <param name="c">Third input Vector</param>
             <param name="u">First Barycentric Coordinate</param>
             <param name="v">Second Barycentric Coordinate</param>
             <returns>a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</returns>
            </member>
        <member name="M:Urho.IntVector3.BaryCentric(Urho.IntVector3@,Urho.IntVector3@,Urho.IntVector3@,System.Int32,System.Int32,Urho.IntVector3@)">
             <summary>Interpolate 3 Vectors using Barycentric coordinates</summary>
             <param name="a">First input Vector.</param>
             <param name="b">Second input Vector.</param>
             <param name="c">Third input Vector.</param>
             <param name="u">First Barycentric Coordinate.</param>
             <param name="v">Second Barycentric Coordinate.</param>
             <param name="result">Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</param>
            </member>
        <member name="M:Urho.IntVector3.op_Addition(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Adds the specified instances.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>Result of addition.</returns>
            </member>
        <member name="M:Urho.IntVector3.op_Subtraction(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Subtracts the specified instances.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>Result of subtraction.</returns>
            </member>
        <member name="M:Urho.IntVector3.op_UnaryNegation(Urho.IntVector3)">
             <summary>
             Negates the specified instance.
             </summary>
             <param name="vec">Operand.</param>
             <returns>Result of negation.</returns>
            </member>
        <member name="M:Urho.IntVector3.op_Multiply(Urho.IntVector3,System.Int32)">
             <summary>
             Multiplies the specified instance by a scalar.
             </summary>
             <param name="vec">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of multiplication.</returns>
            </member>
        <member name="M:Urho.IntVector3.op_Multiply(System.Int32,Urho.IntVector3)">
             <summary>
             Multiplies the specified instance by a scalar.
             </summary>
             <param name="scale">Left operand.</param>
             <param name="vec">Right operand.</param>
             <returns>Result of multiplication.</returns>
            </member>
        <member name="M:Urho.IntVector3.op_Division(Urho.IntVector3,System.Int32)">
             <summary>
             Divides the specified instance by a scalar.
             </summary>
             <param name="vec">Left operand</param>
             <param name="scale">Right operand</param>
             <returns>Result of the division.</returns>
            </member>
        <member name="M:Urho.IntVector3.op_Equality(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Compares the specified instances for equality.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>True if both instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.IntVector3.op_Inequality(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Compares the specified instances for inequality.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>True if both instances are not equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.IntVector3.ToString">
             <summary>
             Returns a System.String that represents the current IntVector3.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Urho.IntVector3.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.IntVector3.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare to.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.IntVector3.Equals(Urho.IntVector3)">
             <summary>Indicates whether the current vector is equal to another vector.</summary>
             <param name="other">A vector to compare with this vector.</param>
             <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
            </member>
        <member name="M:Urho.IntVector3.Distance(Urho.IntVector3,Urho.IntVector3)">
             <summary>
             Distance between two 2D points (should be moved to IntVector3).
             </summary>
            </member>
        <member name="T:Urho.MathHelper">
             <summary>
             Contains common mathematical functions and constants.
             </summary>
            </member>
        <member name="F:Urho.MathHelper.Pi">
             <summary>
             Defines the value of Pi as a <see cref="T:System.Single" />.
             </summary>
            </member>
        <member name="F:Urho.MathHelper.PiOver2">
             <summary>
             Defines the value of Pi divided by two as a <see cref="T:System.Single" />.
             </summary>
            </member>
        <member name="F:Urho.MathHelper.PiOver3">
             <summary>
             Defines the value of Pi divided by three as a <see cref="T:System.Single" />.
             </summary>
            </member>
        <member name="F:Urho.MathHelper.PiOver4">
             <summary>
             Definesthe value of  Pi divided by four as a <see cref="T:System.Single" />.
             </summary>
            </member>
        <member name="F:Urho.MathHelper.PiOver6">
             <summary>
             Defines the value of Pi divided by six as a <see cref="T:System.Single" />.
             </summary>
            </member>
        <member name="F:Urho.MathHelper.TwoPi">
             <summary>
             Defines the value of Pi multiplied by two as a <see cref="T:System.Single" />.
             </summary>
            </member>
        <member name="F:Urho.MathHelper.ThreePiOver2">
             <summary>
             Defines the value of Pi multiplied by 3 and divided by two as a <see cref="T:System.Single" />.
             </summary>
            </member>
        <member name="F:Urho.MathHelper.E">
             <summary>
             Defines the value of E as a <see cref="T:System.Single" />.
             </summary>
            </member>
        <member name="F:Urho.MathHelper.Log10E">
             <summary>
             Defines the base-10 logarithm of E.
             </summary>
            </member>
        <member name="F:Urho.MathHelper.Log2E">
             <summary>
             Defines the base-2 logarithm of E.
             </summary>
            </member>
        <member name="M:Urho.MathHelper.NextPowerOfTwo(System.Int64)">
             <summary>
             Returns the next power of two that is larger than the specified number.
             </summary>
             <param name="n">The specified number.</param>
             <returns>The next power of two.</returns>
            </member>
        <member name="M:Urho.MathHelper.NextPowerOfTwo(System.Int32)">
             <summary>
             Returns the next power of two that is larger than the specified number.
             </summary>
             <param name="n">The specified number.</param>
             <returns>The next power of two.</returns>
            </member>
        <member name="M:Urho.MathHelper.NextPowerOfTwo(System.Single)">
             <summary>
             Returns the next power of two that is larger than the specified number.
             </summary>
             <param name="n">The specified number.</param>
             <returns>The next power of two.</returns>
            </member>
        <member name="M:Urho.MathHelper.NextPowerOfTwo(System.Double)">
             <summary>
             Returns the next power of two that is larger than the specified number.
             </summary>
             <param name="n">The specified number.</param>
             <returns>The next power of two.</returns>
            </member>
        <member name="M:Urho.MathHelper.Factorial(System.Int32)">
             <summary>Calculates the factorial of a given natural number.
             </summary>
             <param name="n">The number.</param>
             <returns>n!</returns>
            </member>
        <member name="M:Urho.MathHelper.BinomialCoefficient(System.Int32,System.Int32)">
             <summary>
             Calculates the binomial coefficient <paramref name="n" /> above <paramref name="k" />.
             </summary>
             <param name="n">The n.</param>
             <param name="k">The k.</param>
             <returns>n! / (k! * (n - k)!)</returns>
            </member>
        <member name="M:Urho.MathHelper.InverseSqrtFast(System.Single)">
             <summary>
             Returns an approximation of the inverse square root of left number.
             </summary>
             <param name="x">A number.</param>
             <returns>An approximation of the inverse square root of the specified number, with an upper error bound of 0.001</returns>
             <remarks>
             This is an improved implementation of the the method known as Carmack's inverse square root
             which is found in the Quake III source code. This implementation comes from
             http://www.codemaestro.com/reviews/review00000105.html. For the history of this method, see
             http://www.beyond3d.com/content/articles/8/
             </remarks>
            </member>
        <member name="M:Urho.MathHelper.InverseSqrtFast(System.Double)">
             <summary>
             Returns an approximation of the inverse square root of left number.
             </summary>
             <param name="x">A number.</param>
             <returns>An approximation of the inverse square root of the specified number, with an upper error bound of 0.001</returns>
             <remarks>
             This is an improved implementation of the the method known as Carmack's inverse square root
             which is found in the Quake III source code. This implementation comes from
             http://www.codemaestro.com/reviews/review00000105.html. For the history of this method, see
             http://www.beyond3d.com/content/articles/8/
             </remarks>
            </member>
        <member name="M:Urho.MathHelper.DegreesToRadians(System.Single)">
             <summary>
             Convert degrees to radians
             </summary>
             <param name="degrees">An angle in degrees</param>
             <returns>The angle expressed in radians</returns>
            </member>
        <member name="M:Urho.MathHelper.RadiansToDegrees(System.Single)">
             <summary>
             Convert radians to degrees
             </summary>
             <param name="radians">An angle in radians</param>
             <returns>The angle expressed in degrees</returns>
            </member>
        <member name="M:Urho.MathHelper.DegreesToRadians(System.Double)">
             <summary>
             Convert degrees to radians
             </summary>
             <param name="degrees">An angle in degrees</param>
             <returns>The angle expressed in radians</returns>
            </member>
        <member name="M:Urho.MathHelper.RadiansToDegrees(System.Double)">
             <summary>
             Convert radians to degrees
             </summary>
             <param name="radians">An angle in radians</param>
             <returns>The angle expressed in degrees</returns>
            </member>
        <member name="M:Urho.MathHelper.Swap(System.Double@,System.Double@)">
             <summary>
             Swaps two double values.
             </summary>
             <param name="a">The first value.</param>
             <param name="b">The second value.</param>
            </member>
        <member name="M:Urho.MathHelper.Swap(System.Single@,System.Single@)">
             <summary>
             Swaps two float values.
             </summary>
             <param name="a">The first value.</param>
             <param name="b">The second value.</param>
            </member>
        <member name="M:Urho.MathHelper.Clamp(System.Single,System.Single,System.Single)">
             <summary>
             Clamp a float to a range.
             </summary>
            </member>
        <member name="M:Urho.MathHelper.Clamp(System.Int32,System.Int32,System.Int32)">
             <summary>
             Clamp an integer to a range.
             </summary>
            </member>
        <member name="T:Urho.Matrix2">
             <summary>
             Represents a 2x2 matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix2.Row0">
             <summary>
             Top row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix2.Row1">
             <summary>
             Bottom row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix2.Identity">
             <summary>
             The identity matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix2.Zero">
             <summary>
             The zero matrix.
             </summary>
            </member>
        <member name="M:Urho.Matrix2.#ctor(Urho.Vector2,Urho.Vector2)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix2" /> struct.
             </summary>
             <param name="row0">Top row of the matrix.</param>
             <param name="row1">Bottom row of the matrix.</param>
            </member>
        <member name="M:Urho.Matrix2.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix2" /> struct.
             </summary>
             <param name="m00">First item of the first row of the matrix.</param>
             <param name="m01">Second item of the first row of the matrix.</param>
             <param name="m10">First item of the second row of the matrix.</param>
             <param name="m11">Second item of the second row of the matrix.</param>
            </member>
        <member name="P:Urho.Matrix2.Determinant">
             <summary>
             Gets the determinant of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2.Column0">
             <summary>
             Gets or sets the first column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2.Column1">
             <summary>
             Gets or sets the second column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2.M11">
             <summary>
             Gets or sets the value at row 1, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2.M12">
             <summary>
             Gets or sets the value at row 1, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2.M21">
             <summary>
             Gets or sets the value at row 2, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2.M22">
             <summary>
             Gets or sets the value at row 2, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2.Diagonal">
             <summary>
             Gets or sets the values along the main diagonal of the matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2.Trace">
             <summary>
             Gets the trace of the matrix, the sum of the values along the diagonal.
             </summary>
            </member>
        <member name="P:Urho.Matrix2.Item(System.Int32,System.Int32)">
             <summary>
             Gets or sets the value at a specified row and column.
             </summary>
             <param name="rowIndex">The index of the row.</param>
             <param name="columnIndex">The index of the column.</param>
             <returns>The element at the given row and column index.</returns>
            </member>
        <member name="M:Urho.Matrix2.Transpose">
             <summary>
             Converts this instance to it's transpose.
             </summary>
            </member>
        <member name="M:Urho.Matrix2.Invert">
             <summary>
             Converts this instance into its inverse.
             </summary>
            </member>
        <member name="M:Urho.Matrix2.CreateRotation(System.Single,Urho.Matrix2@)">
             <summary>
             Builds a rotation matrix.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <param name="result">The resulting Matrix2 instance.</param>
            </member>
        <member name="M:Urho.Matrix2.CreateRotation(System.Single)">
             <summary>
             Builds a rotation matrix.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <returns>The resulting Matrix2 instance.</returns>
            </member>
        <member name="M:Urho.Matrix2.CreateScale(System.Single,Urho.Matrix2@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Single scale factor for the x, y, and z axes.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix2.CreateScale(System.Single)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Single scale factor for the x and y axes.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2.CreateScale(Urho.Vector2,Urho.Matrix2@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Scale factors for the x and y axes.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix2.CreateScale(Urho.Vector2)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Scale factors for the x and y axes.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2.CreateScale(System.Single,System.Single,Urho.Matrix2@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="x">Scale factor for the x axis.</param>
             <param name="y">Scale factor for the y axis.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix2.CreateScale(System.Single,System.Single)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="x">Scale factor for the x axis.</param>
             <param name="y">Scale factor for the y axis.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2.Mult(Urho.Matrix2,System.Single,Urho.Matrix2@)">
             <summary>
             Multiplies and instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2.Mult(Urho.Matrix2,System.Single)">
             <summary>
             Multiplies and instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2.Mult(Urho.Matrix2,Urho.Vector2,Urho.Vector2@)">
             <summary>
             Multiplies and instance by a Vector2.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2.Mult(Urho.Matrix2,Urho.Vector2)">
             <summary>
             Multiplies and instance by a Vector2.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2.Mult(Urho.Matrix2,Urho.Matrix2,Urho.Matrix2@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2.Mult(Urho.Matrix2,Urho.Matrix2)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2.Mult(Urho.Matrix2,Urho.Matrix2x3,Urho.Matrix2x3@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2.Mult(Urho.Matrix2,Urho.Matrix2x3)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2.Mult(Urho.Matrix2,Urho.Matrix2x4,Urho.Matrix2x4@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2.Mult(Urho.Matrix2,Urho.Matrix2x4)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2.Add(Urho.Matrix2,Urho.Matrix2,Urho.Matrix2@)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <param name="result">A new instance that is the result of the addition.</param>
            </member>
        <member name="M:Urho.Matrix2.Add(Urho.Matrix2,Urho.Matrix2)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <returns>A new instance that is the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix2.Subtract(Urho.Matrix2,Urho.Matrix2,Urho.Matrix2@)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left operand of the subtraction.</param>
             <param name="right">The right operand of the subtraction.</param>
             <param name="result">A new instance that is the result of the subtraction.</param>
            </member>
        <member name="M:Urho.Matrix2.Subtract(Urho.Matrix2,Urho.Matrix2)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left operand of the subtraction.</param>
             <param name="right">The right operand of the subtraction.</param>
             <returns>A new instance that is the result of the subtraction.</returns>
            </member>
        <member name="M:Urho.Matrix2.Invert(Urho.Matrix2,Urho.Matrix2@)">
             <summary>
             Calculate the inverse of the given matrix.
             </summary>
             <param name="mat">The matrix to invert.</param>
             <param name="result">The inverse of the given matrix.</param>
             <exception cref="T:System.InvalidOperationException">Thrown if the Matrix2 is singular.</exception>
            </member>
        <member name="M:Urho.Matrix2.Invert(Urho.Matrix2)">
             <summary>
             Calculate the inverse of the given matrix.
             </summary>
             <param name="mat">The matrix to invert.</param>
             <returns>The inverse of the given matrix.</returns>
             <exception cref="T:System.InvalidOperationException">Thrown if the Matrix2 is singular.</exception>
             <returns>The inverted copy.</returns>
            </member>
        <member name="M:Urho.Matrix2.Transpose(Urho.Matrix2,Urho.Matrix2@)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <param name="result">The transpose of the given matrix.</param>
            </member>
        <member name="M:Urho.Matrix2.Transpose(Urho.Matrix2)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <returns>The transpose of the given matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2.op_Multiply(System.Single,Urho.Matrix2)">
             <summary>
             Scalar multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2.op_Multiply(Urho.Matrix2,System.Single)">
             <summary>
             Scalar multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2.op_Multiply(Urho.Matrix2,Urho.Vector2)">
             <summary>
             Vector2 multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Vector2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2.op_Multiply(Urho.Matrix2,Urho.Matrix2)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2.op_Multiply(Urho.Matrix2,Urho.Matrix2x3)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x3 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2.op_Multiply(Urho.Matrix2,Urho.Matrix2x4)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x4 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2.op_Addition(Urho.Matrix2,Urho.Matrix2)">
             <summary>
             Matrix addition.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2 which holds the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix2.op_Subtraction(Urho.Matrix2,Urho.Matrix2)">
             <summary>
             Matrix subtraction.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2 which holds the result of the subtraction.</returns>
            </member>
        <member name="M:Urho.Matrix2.op_Equality(Urho.Matrix2,Urho.Matrix2)">
             <summary>
             Compares two instances for equality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left equals right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix2.op_Inequality(Urho.Matrix2,Urho.Matrix2)">
             <summary>
             Compares two instances for inequality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left does not equal right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix2.ToString">
             <summary>
             Returns a System.String that represents the current Matrix4.
             </summary>
             <returns>The string representation of the matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.Matrix2.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare to.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix2.Equals(Urho.Matrix2)">
             <summary>
             Indicates whether the current matrix is equal to another matrix.
             </summary>
             <param name="other">An matrix to compare with this matrix.</param>
             <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="T:Urho.Matrix2x3">
             <summary>
             Represents a 2x3 matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix2x3.Row0">
             <summary>
             Top row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix2x3.Row1">
             <summary>
             Bottom row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix2x3.Zero">
             <summary>
             The zero matrix.
             </summary>
            </member>
        <member name="M:Urho.Matrix2x3.#ctor(Urho.Vector3,Urho.Vector3)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix2x3" /> struct.
             </summary>
             <param name="row0">Top row of the matrix.</param>
             <param name="row1">Bottom row of the matrix.</param>
            </member>
        <member name="M:Urho.Matrix2x3.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix2x3" /> struct.
             </summary>
             <param name="m00">First item of the first row of the matrix.</param>
             <param name="m01">Second item of the first row of the matrix.</param>
             <param name="m02">Third item of the first row of the matrix.</param>
             <param name="m10">First item of the second row of the matrix.</param>
             <param name="m11">Second item of the second row of the matrix.</param>
             <param name="m12">Third item of the second row of the matrix.</param>
            </member>
        <member name="P:Urho.Matrix2x3.Column0">
             <summary>
             Gets or sets the first column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x3.Column1">
             <summary>
             Gets or sets the second column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x3.Column2">
             <summary>
             Gets or sets the third column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x3.M11">
             <summary>
             Gets or sets the value at row 1, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x3.M12">
             <summary>
             Gets or sets the value at row 1, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x3.M13">
             <summary>
             Gets or sets the value at row 1, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x3.M21">
             <summary>
             Gets or sets the value at row 2, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x3.M22">
             <summary>
             Gets or sets the value at row 2, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x3.M23">
             <summary>
             Gets or sets the value at row 2, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x3.Diagonal">
             <summary>
             Gets or sets the values along the main diagonal of the matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x3.Trace">
             <summary>
             Gets the trace of the matrix, the sum of the values along the diagonal.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x3.Item(System.Int32,System.Int32)">
             <summary>
             Gets or sets the value at a specified row and column.
             </summary>
             <param name="rowIndex">The index of the row.</param>
             <param name="columnIndex">The index of the column.</param>
             <returns>The element at the given row and column index.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.CreateRotation(System.Single,Urho.Matrix2x3@)">
             <summary>
             Builds a rotation matrix.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <param name="result">The resulting Matrix2x3 instance.</param>
            </member>
        <member name="M:Urho.Matrix2x3.CreateRotation(System.Single)">
             <summary>
             Builds a rotation matrix.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <returns>The resulting Matrix2x3 instance.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.CreateScale(System.Single,Urho.Matrix2x3@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Single scale factor for the x, y, and z axes.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix2x3.CreateScale(System.Single)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Single scale factor for the x and y axes.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.CreateScale(Urho.Vector2,Urho.Matrix2x3@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Scale factors for the x and y axes.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix2x3.CreateScale(Urho.Vector2)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Scale factors for the x and y axes.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.CreateScale(System.Single,System.Single,Urho.Matrix2x3@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="x">Scale factor for the x axis.</param>
             <param name="y">Scale factor for the y axis.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix2x3.CreateScale(System.Single,System.Single)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="x">Scale factor for the x axis.</param>
             <param name="y">Scale factor for the y axis.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.Mult(Urho.Matrix2x3,System.Single,Urho.Matrix2x3@)">
             <summary>
             Multiplies and instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2x3.Mult(Urho.Matrix2x3,System.Single)">
             <summary>
             Multiplies and instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.Mult(Urho.Matrix2x3,Urho.Matrix3x2,Urho.Matrix2@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2x3.Mult(Urho.Matrix2x3,Urho.Matrix3x2)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.Mult(Urho.Matrix2x3,Urho.Matrix3,Urho.Matrix2x3@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2x3.Mult(Urho.Matrix2x3,Urho.Matrix3)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.Mult(Urho.Matrix2x3,Urho.Matrix3x4,Urho.Matrix2x4@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2x3.Mult(Urho.Matrix2x3,Urho.Matrix3x4)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.Add(Urho.Matrix2x3,Urho.Matrix2x3,Urho.Matrix2x3@)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <param name="result">A new instance that is the result of the addition.</param>
            </member>
        <member name="M:Urho.Matrix2x3.Add(Urho.Matrix2x3,Urho.Matrix2x3)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <returns>A new instance that is the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.Subtract(Urho.Matrix2x3,Urho.Matrix2x3,Urho.Matrix2x3@)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left operand of the subtraction.</param>
             <param name="right">The right operand of the subtraction.</param>
             <param name="result">A new instance that is the result of the subtraction.</param>
            </member>
        <member name="M:Urho.Matrix2x3.Subtract(Urho.Matrix2x3,Urho.Matrix2x3)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left operand of the subtraction.</param>
             <param name="right">The right operand of the subtraction.</param>
             <returns>A new instance that is the result of the subtraction.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.Transpose(Urho.Matrix2x3,Urho.Matrix3x2@)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <param name="result">The transpose of the given matrix.</param>
            </member>
        <member name="M:Urho.Matrix2x3.Transpose(Urho.Matrix2x3)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <returns>The transpose of the given matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.op_Multiply(System.Single,Urho.Matrix2x3)">
             <summary>
             Scalar multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x3 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.op_Multiply(Urho.Matrix2x3,System.Single)">
             <summary>
             Scalar multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x3 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.op_Multiply(Urho.Matrix2x3,Urho.Matrix3x2)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.op_Multiply(Urho.Matrix2x3,Urho.Matrix3)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x3 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.op_Multiply(Urho.Matrix2x3,Urho.Matrix3x4)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x4 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.op_Addition(Urho.Matrix2x3,Urho.Matrix2x3)">
             <summary>
             Matrix addition.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x3 which holds the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.op_Subtraction(Urho.Matrix2x3,Urho.Matrix2x3)">
             <summary>
             Matrix subtraction.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x3 which holds the result of the subtraction.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.op_Equality(Urho.Matrix2x3,Urho.Matrix2x3)">
             <summary>
             Compares two instances for equality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left equals right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.op_Inequality(Urho.Matrix2x3,Urho.Matrix2x3)">
             <summary>
             Compares two instances for inequality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left does not equal right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.ToString">
             <summary>
             Returns a System.String that represents the current Matrix2x3.
             </summary>
             <returns>The string representation of the matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare tresult.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix2x3.Equals(Urho.Matrix2x3)">
             <summary>
             Indicates whether the current matrix is equal to another matrix.
             </summary>
             <param name="other">An matrix to compare with this matrix.</param>
             <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="T:Urho.Matrix2x4">
             <summary>
             Represents a 2x4 matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix2x4.Row0">
             <summary>
             Top row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix2x4.Row1">
             <summary>
             Bottom row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix2x4.Zero">
             <summary>
             The zero matrix.
             </summary>
            </member>
        <member name="M:Urho.Matrix2x4.#ctor(Urho.Vector4,Urho.Vector4)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix2x4" /> struct.
             </summary>
             <param name="row0">Top row of the matrix.</param>
             <param name="row1">Bottom row of the matrix.</param>
            </member>
        <member name="M:Urho.Matrix2x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix2x4" /> struct.
             </summary>
             <param name="m00">First item of the first row of the matrix.</param>
             <param name="m01">Second item of the first row of the matrix.</param>
             <param name="m02">Third item of the first row of the matrix.</param>
             <param name="m03">Fourth item of the first row of the matrix.</param>
             <param name="m10">First item of the second row of the matrix.</param>
             <param name="m11">Second item of the second row of the matrix.</param>
             <param name="m12">Third item of the second row of the matrix.</param>
             <param name="m13">Fourth item of the second row of the matrix.</param>
            </member>
        <member name="P:Urho.Matrix2x4.Column0">
             <summary>
             Gets or sets the first column of the matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.Column1">
             <summary>
             Gets or sets the second column of the matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.Column2">
             <summary>
             Gets or sets the third column of the matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.Column3">
             <summary>
             Gets or sets the fourth column of the matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.M11">
             <summary>
             Gets or sets the value at row 1, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.M12">
             <summary>
             Gets or sets the value at row 1, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.M13">
             <summary>
             Gets or sets the value at row 1, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.M14">
             <summary>
             Gets or sets the value at row 1, column 4 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.M21">
             <summary>
             Gets or sets the value at row 2, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.M22">
             <summary>
             Gets or sets the value at row 2, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.M23">
             <summary>
             Gets or sets the value at row 2, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.M24">
             <summary>
             Gets or sets the value at row 2, column 4 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.Diagonal">
             <summary>
             Gets or sets the values along the main diagonal of the matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.Trace">
             <summary>
             Gets the trace of the matrix, the sum of the values along the diagonal.
             </summary>
            </member>
        <member name="P:Urho.Matrix2x4.Item(System.Int32,System.Int32)">
             <summary>
             Gets or sets the value at a specified row and column.
             </summary>
             <param name="rowIndex">The index of the row.</param>
             <param name="columnIndex">The index of the column.</param>
             <returns>The element at the given row and column index.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.CreateRotation(System.Single,Urho.Matrix2x4@)">
             <summary>
             Builds a rotation matrix.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <param name="result">The resulting Matrix2x4 instance.</param>
            </member>
        <member name="M:Urho.Matrix2x4.CreateRotation(System.Single)">
             <summary>
             Builds a rotation matrix.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <returns>The resulting Matrix2x3 instance.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.CreateScale(System.Single,Urho.Matrix2x4@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Single scale factor for the x, y, and z axes.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix2x4.CreateScale(System.Single)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Single scale factor for the x and y axes.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.CreateScale(Urho.Vector2,Urho.Matrix2x4@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Scale factors for the x and y axes.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix2x4.CreateScale(Urho.Vector2)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Scale factors for the x and y axes.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.CreateScale(System.Single,System.Single,Urho.Matrix2x4@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="x">Scale factor for the x axis.</param>
             <param name="y">Scale factor for the y axis.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix2x4.CreateScale(System.Single,System.Single)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="x">Scale factor for the x axis.</param>
             <param name="y">Scale factor for the y axis.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.Mult(Urho.Matrix2x4,System.Single,Urho.Matrix2x4@)">
             <summary>
             Multiplies and instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2x4.Mult(Urho.Matrix2x4,System.Single)">
             <summary>
             Multiplies and instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.Mult(Urho.Matrix2x4,Urho.Matrix4x2,Urho.Matrix2@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2x4.Mult(Urho.Matrix2x4,Urho.Matrix4x2)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.Mult(Urho.Matrix2x4,Urho.Matrix4x3,Urho.Matrix2x3@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2x4.Mult(Urho.Matrix2x4,Urho.Matrix4x3)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.Mult(Urho.Matrix2x4,Urho.Matrix4,Urho.Matrix2x4@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix2x4.Mult(Urho.Matrix2x4,Urho.Matrix4)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.Add(Urho.Matrix2x4,Urho.Matrix2x4,Urho.Matrix2x4@)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <param name="result">A new instance that is the result of the addition.</param>
            </member>
        <member name="M:Urho.Matrix2x4.Add(Urho.Matrix2x4,Urho.Matrix2x4)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <returns>A new instance that is the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.Subtract(Urho.Matrix2x4,Urho.Matrix2x4,Urho.Matrix2x4@)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left operand of the subtraction.</param>
             <param name="right">The right operand of the subtraction.</param>
             <param name="result">A new instance that is the result of the subtraction.</param>
            </member>
        <member name="M:Urho.Matrix2x4.Subtract(Urho.Matrix2x4,Urho.Matrix2x4)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left operand of the subtraction.</param>
             <param name="right">The right operand of the subtraction.</param>
             <returns>A new instance that is the result of the subtraction.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.Transpose(Urho.Matrix2x4,Urho.Matrix4x2@)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <param name="result">The transpose of the given matrix.</param>
            </member>
        <member name="M:Urho.Matrix2x4.Transpose(Urho.Matrix2x4)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <returns>The transpose of the given matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.op_Multiply(System.Single,Urho.Matrix2x4)">
             <summary>
             Scalar multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x4 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.op_Multiply(Urho.Matrix2x4,System.Single)">
             <summary>
             Scalar multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x4 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.op_Multiply(Urho.Matrix2x4,Urho.Matrix4x2)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.op_Multiply(Urho.Matrix2x4,Urho.Matrix4x3)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x3 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.op_Multiply(Urho.Matrix2x4,Urho.Matrix4)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x4 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.op_Addition(Urho.Matrix2x4,Urho.Matrix2x4)">
             <summary>
             Matrix addition.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2 which holds the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.op_Subtraction(Urho.Matrix2x4,Urho.Matrix2x4)">
             <summary>
             Matrix subtraction.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2x4 which holds the result of the subtraction.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.op_Equality(Urho.Matrix2x4,Urho.Matrix2x4)">
             <summary>
             Compares two instances for equality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left equals right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.op_Inequality(Urho.Matrix2x4,Urho.Matrix2x4)">
             <summary>
             Compares two instances for inequality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left does not equal right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.ToString">
             <summary>
             Returns a System.String that represents the current Matrix4.
             </summary>
             <returns>The string representation of the matrix.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare to.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix2x4.Equals(Urho.Matrix2x4)">
             <summary>
             Indicates whether the current matrix is equal to another matrix.
             </summary>
             <param name="other">An matrix to compare with this matrix.</param>
             <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="F:Urho.Matrix3.R0C0">
             <summary>Row 0, Column 0</summary>
            </member>
        <member name="F:Urho.Matrix3.R0C1">
             <summary>Row 0, Column 1</summary>
            </member>
        <member name="F:Urho.Matrix3.R0C2">
             <summary>Row 0, Column 2</summary>
            </member>
        <member name="F:Urho.Matrix3.R1C0">
             <summary>Row 1, Column 0</summary>
            </member>
        <member name="F:Urho.Matrix3.R1C1">
             <summary>Row 1, Column 1</summary>
            </member>
        <member name="F:Urho.Matrix3.R1C2">
             <summary>Row 1, Column 2</summary>
            </member>
        <member name="F:Urho.Matrix3.R2C0">
             <summary>Row 2, Column 0</summary>
            </member>
        <member name="F:Urho.Matrix3.R2C1">
             <summary>Row 2, Column 1</summary>
            </member>
        <member name="F:Urho.Matrix3.R2C2">
             <summary>Row 2, Column 2</summary>
            </member>
        <member name="P:Urho.Matrix3.Item(System.Int32,System.Int32)">
             <summary>Gets the component at the given row and column in the matrix.</summary>
             <param name="row">The row of the matrix.</param>
             <param name="column">The column of the matrix.</param>
             <returns>The component at the given row and column in the matrix.</returns>
            </member>
        <member name="P:Urho.Matrix3.Item(System.Int32)">
             <summary>Gets the component at the index into the matrix.</summary>
             <param name="index">The index into the components of the matrix.</param>
             <returns>The component at the given index into the matrix.</returns>
            </member>
        <member name="M:Urho.Matrix3.op_Explicit(Urho.Matrix3)~System.IntPtr">
             <summary>Converts the matrix into an IntPtr.</summary>
             <param name="matrix">The matrix to convert.</param>
             <returns>An IntPtr for the matrix.</returns>
            </member>
        <member name="M:Urho.Matrix3.op_Explicit(Urho.Matrix3)~System.Single*">
             <summary>Converts the matrix into left float*.</summary>
             <param name="matrix">The matrix to convert.</param>
             <returns>A float* for the matrix.</returns>
            </member>
        <member name="M:Urho.Matrix3.op_Explicit(Urho.Matrix3)~System.Single[]">
             <summary>Converts the matrix into an array of floats.</summary>
             <param name="matrix">The matrix to convert.</param>
             <returns>An array of floats for the matrix.</returns>
            </member>
        <member name="M:Urho.Matrix3.#ctor(Urho.Matrix3@)">
             <summary>Constructs left matrix with the same components as the given matrix.</summary>
             <param name="vector">The matrix whose components to copy.</param>
            </member>
        <member name="M:Urho.Matrix3.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>Constructs left matrix with the given values.</summary>
             <param name="r0c0">The value for row 0 column 0.</param>
             <param name="r0c1">The value for row 0 column 1.</param>
             <param name="r0c2">The value for row 0 column 2.</param>
             <param name="r1c0">The value for row 1 column 0.</param>
             <param name="r1c1">The value for row 1 column 1.</param>
             <param name="r1c2">The value for row 1 column 2.</param>
             <param name="r2c0">The value for row 2 column 0.</param>
             <param name="r2c1">The value for row 2 column 1.</param>
             <param name="r2c2">The value for row 2 column 2.</param>
            </member>
        <member name="M:Urho.Matrix3.#ctor(System.Single[])">
             <summary>Constructs left matrix from the given array of float-precision floating-point numbers.</summary>
             <param name="floatArray">The array of floats for the components of the matrix.</param>
            </member>
        <member name="M:Urho.Matrix3.#ctor(Urho.Vector3,Urho.Vector3,Urho.Vector3)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix3" /> struct.
             </summary>
             <param name="row0">Top row of the matrix.</param>
             <param name="row1">Second row of the matrix.</param>
             <param name="row2">Bottom row of the matrix.</param>
            </member>
        <member name="M:Urho.Matrix3.Equals(Urho.Matrix3)">
             <summary>Indicates whether the current matrix is equal to another matrix.</summary>
             <param name="matrix">The OpenTK.Matrix3 structure to compare with.</param>
             <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="M:Urho.Matrix3.Equals(Urho.Matrix3@)">
             <summary>Indicates whether the current matrix is equal to another matrix.</summary>
             <param name="matrix">The OpenTK.Matrix3 structure to compare to.</param>
             <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="M:Urho.Matrix3.Equals(Urho.Matrix3@,Urho.Matrix3@)">
             <summary>Indicates whether the current matrix is equal to another matrix.</summary>
             <param name="left">The left-hand operand.</param>
             <param name="right">The right-hand operand.</param>
             <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="M:Urho.Matrix3.EqualsApprox(Urho.Matrix3@,System.Single)">
             <summary>Indicates whether the current matrix is approximately equal to another matrix.</summary>
             <param name="matrix">The OpenTK.Matrix3 structure to compare with.</param>
             <param name="tolerance">The limit below which the matrices are considered equal.</param>
             <returns>true if the current matrix is approximately equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="M:Urho.Matrix3.EqualsApprox(Urho.Matrix3@,Urho.Matrix3@,System.Single)">
             <summary>Indicates whether the current matrix is approximately equal to another matrix.</summary>
             <param name="left">The left-hand operand.</param>
             <param name="right">The right-hand operand.</param>
             <param name="tolerance">The limit below which the matrices are considered equal.</param>
             <returns>true if the current matrix is approximately equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="M:Urho.Matrix3.Add(Urho.Matrix3@)">
             <summary>Add left matrix to this matrix.</summary>
             <param name="matrix">The matrix to add.</param>
            </member>
        <member name="M:Urho.Matrix3.Add(Urho.Matrix3@,Urho.Matrix3@)">
             <summary>Add left matrix to this matrix.</summary>
             <param name="matrix">The matrix to add.</param>
             <param name="result">The resulting matrix of the addition.</param>
            </member>
        <member name="M:Urho.Matrix3.Add(Urho.Matrix3@,Urho.Matrix3@,Urho.Matrix3@)">
             <summary>Add left matrix to left matrix.</summary>
             <param name="matrix">The matrix on the matrix side of the equation.</param>
             <param name="right">The matrix on the right side of the equation</param>
             <param name="result">The resulting matrix of the addition.</param>
            </member>
        <member name="M:Urho.Matrix3.Subtract(Urho.Matrix3@)">
             <summary>Subtract left matrix from this matrix.</summary>
             <param name="matrix">The matrix to subtract.</param>
            </member>
        <member name="M:Urho.Matrix3.Subtract(Urho.Matrix3@,Urho.Matrix3@)">
             <summary>Subtract left matrix from this matrix.</summary>
             <param name="matrix">The matrix to subtract.</param>
             <param name="result">The resulting matrix of the subtraction.</param>
            </member>
        <member name="M:Urho.Matrix3.Subtract(Urho.Matrix3@,Urho.Matrix3@,Urho.Matrix3@)">
             <summary>Subtract left matrix from left matrix.</summary>
             <param name="matrix">The matrix on the matrix side of the equation.</param>
             <param name="right">The matrix on the right side of the equation</param>
             <param name="result">The resulting matrix of the subtraction.</param>
            </member>
        <member name="M:Urho.Matrix3.Multiply(Urho.Matrix3@)">
             <summary>Multiply left martix times this matrix.</summary>
             <param name="matrix">The matrix to multiply.</param>
            </member>
        <member name="M:Urho.Matrix3.Multiply(Urho.Matrix3@,Urho.Matrix3@)">
             <summary>Multiply matrix times this matrix.</summary>
             <param name="matrix">The matrix to multiply.</param>
             <param name="result">The resulting matrix of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix3.Multiply(Urho.Matrix3@,Urho.Matrix3@,Urho.Matrix3@)">
             <summary>Multiply left matrix times left matrix.</summary>
             <param name="matrix">The matrix on the matrix side of the equation.</param>
             <param name="right">The matrix on the right side of the equation</param>
             <param name="result">The resulting matrix of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix3.Multiply(System.Single)">
             <summary>Multiply matrix times this matrix.</summary>
             <param name="matrix">The matrix to multiply.</param>
            </member>
        <member name="M:Urho.Matrix3.Multiply(System.Single,Urho.Matrix3@)">
             <summary>Multiply matrix times this matrix.</summary>
             <param name="matrix">The matrix to multiply.</param>
             <param name="result">The resulting matrix of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix3.Multiply(Urho.Matrix3@,System.Single,Urho.Matrix3@)">
             <summary>Multiply left matrix times left matrix.</summary>
             <param name="matrix">The matrix on the matrix side of the equation.</param>
             <param name="right">The matrix on the right side of the equation</param>
             <param name="result">The resulting matrix of the multiplication.</param>
            </member>
        <member name="F:Urho.Matrix3.Identity">
             <summary>The identity matrix.</summary>
            </member>
        <member name="F:Urho.Matrix3.Zero">
             <summary>A matrix of all zeros.</summary>
            </member>
        <member name="M:Urho.Matrix3.GetHashCode">
             <summary>Returns the hash code for this instance.</summary>
             <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
            </member>
        <member name="M:Urho.Matrix3.ToString">
             <summary>Returns the fully qualified type name of this instance.</summary>
             <returns>A System.String containing left fully qualified type name.</returns>
            </member>
        <member name="T:Urho.Matrix3x2">
             <summary>
             Represents a 3x2 matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix3x2.Row0">
             <summary>
             Top row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix3x2.Row1">
             <summary>
             Second row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix3x2.Row2">
             <summary>
             Bottom row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix3x2.Zero">
             <summary>
             The zero matrix.
             </summary>
            </member>
        <member name="M:Urho.Matrix3x2.#ctor(Urho.Vector2,Urho.Vector2,Urho.Vector2)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix3x2" /> struct.
             </summary>
             <param name="row0">Top row of the matrix.</param>
             <param name="row1">Second row of the matrix.</param>
             <param name="row2">Bottom row of the matrix.</param>
            </member>
        <member name="M:Urho.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix3x2" /> struct.
             </summary>
             <param name="m00">First item of the first row of the matrix.</param>
             <param name="m01">Second item of the first row of the matrix.</param>
             <param name="m10">First item of the second row of the matrix.</param>
             <param name="m11">Second item of the second row of the matrix.</param>
             <param name="m20">First item of the third row of the matrix.</param>
             <param name="m21">Second item of the third row of the matrix.</param>
            </member>
        <member name="P:Urho.Matrix3x2.Column0">
             <summary>
             Gets or sets the first column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix3x2.Column1">
             <summary>
             Gets or sets the second column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix3x2.M11">
             <summary>
             Gets or sets the value at row 1, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix3x2.M12">
             <summary>
             Gets or sets the value at row 1, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix3x2.M21">
             <summary>
             Gets or sets the value at row 2, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix3x2.M22">
             <summary>
             Gets or sets the value at row 2, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix3x2.M31">
             <summary>
             Gets or sets the value at row 3, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix3x2.M32">
             <summary>
             Gets or sets the value at row 3, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix3x2.Diagonal">
             <summary>
             Gets or sets the values along the main diagonal of the matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix3x2.Trace">
             <summary>
             Gets the trace of the matrix, the sum of the values along the diagonal.
             </summary>
            </member>
        <member name="P:Urho.Matrix3x2.Item(System.Int32,System.Int32)">
             <summary>
             Gets or sets the value at a specified row and column.
             </summary>
             <param name="rowIndex">The index of the row.</param>
             <param name="columnIndex">The index of the column.</param>
             <returns>The element at the given row and column index.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.CreateRotation(System.Single,Urho.Matrix3x2@)">
             <summary>
             Builds a rotation matrix.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <param name="result">The resulting Matrix3x2 instance.</param>
            </member>
        <member name="M:Urho.Matrix3x2.CreateRotation(System.Single)">
             <summary>
             Builds a rotation matrix.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <returns>The resulting Matrix3x2 instance.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.CreateScale(System.Single,Urho.Matrix3x2@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Single scale factor for the x, y, and z axes.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix3x2.CreateScale(System.Single)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Single scale factor for the x and y axes.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.CreateScale(Urho.Vector2,Urho.Matrix3x2@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Scale factors for the x and y axes.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix3x2.CreateScale(Urho.Vector2)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Scale factors for the x and y axes.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.CreateScale(System.Single,System.Single,Urho.Matrix3x2@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="x">Scale factor for the x axis.</param>
             <param name="y">Scale factor for the y axis.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix3x2.CreateScale(System.Single,System.Single)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="x">Scale factor for the x axis.</param>
             <param name="y">Scale factor for the y axis.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.Mult(Urho.Matrix3x2,System.Single,Urho.Matrix3x2@)">
             <summary>
             Multiplies and instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix3x2.Mult(Urho.Matrix3x2,System.Single)">
             <summary>
             Multiplies and instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.Mult(Urho.Matrix3x2,Urho.Matrix2,Urho.Matrix3x2@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix3x2.Mult(Urho.Matrix3x2,Urho.Matrix2)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.Mult(Urho.Matrix3x2,Urho.Matrix2x3,Urho.Matrix3@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix3x2.Mult(Urho.Matrix3x2,Urho.Matrix2x3)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.Mult(Urho.Matrix3x2,Urho.Matrix2x4,Urho.Matrix3x4@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix3x2.Mult(Urho.Matrix3x2,Urho.Matrix2x4)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.Add(Urho.Matrix3x2,Urho.Matrix3x2,Urho.Matrix3x2@)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <param name="result">A new instance that is the result of the addition.</param>
            </member>
        <member name="M:Urho.Matrix3x2.Add(Urho.Matrix3x2,Urho.Matrix3x2)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <returns>A new instance that is the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.Subtract(Urho.Matrix3x2,Urho.Matrix3x2,Urho.Matrix3x2@)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left operand of the subtraction.</param>
             <param name="right">The right operand of the subtraction.</param>
             <param name="result">A new instance that is the result of the subtraction.</param>
            </member>
        <member name="M:Urho.Matrix3x2.Subtract(Urho.Matrix3x2,Urho.Matrix3x2)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left operand of the subtraction.</param>
             <param name="right">The right operand of the subtraction.</param>
             <returns>A new instance that is the result of the subtraction.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.Transpose(Urho.Matrix3x2,Urho.Matrix2x3@)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <param name="result">The transpose of the given matrix.</param>
            </member>
        <member name="M:Urho.Matrix3x2.Transpose(Urho.Matrix3x2)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <returns>The transpose of the given matrix.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.op_Multiply(System.Single,Urho.Matrix3x2)">
             <summary>
             Scalar multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix3x2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.op_Multiply(Urho.Matrix3x2,System.Single)">
             <summary>
             Scalar multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix3x2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.op_Multiply(Urho.Matrix3x2,Urho.Matrix2)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix3x2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.op_Multiply(Urho.Matrix3x2,Urho.Matrix2x3)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix3 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.op_Multiply(Urho.Matrix3x2,Urho.Matrix2x4)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix3x4 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.op_Addition(Urho.Matrix3x2,Urho.Matrix3x2)">
             <summary>
             Matrix addition.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix3x2 which holds the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.op_Subtraction(Urho.Matrix3x2,Urho.Matrix3x2)">
             <summary>
             Matrix subtraction.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix3x2 which holds the result of the subtraction.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.op_Equality(Urho.Matrix3x2,Urho.Matrix3x2)">
             <summary>
             Compares two instances for equality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left equals right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.op_Inequality(Urho.Matrix3x2,Urho.Matrix3x2)">
             <summary>
             Compares two instances for inequality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left does not equal right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.ToString">
             <summary>
             Returns a System.String that represents the current Matrix3d.
             </summary>
             <returns>The string representation of the matrix.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare to.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix3x2.Equals(Urho.Matrix3x2)">
             <summary>
             Indicates whether the current matrix is equal to another matrix.
             </summary>
             <param name="other">An matrix to compare with this matrix.</param>
             <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="T:Urho.Matrix4">
             <summary>
             Represents a 4x4 Matrix
             </summary>
            </member>
        <member name="F:Urho.Matrix4.Row0">
             <summary>
             Top row of the matrix
             </summary>
            </member>
        <member name="F:Urho.Matrix4.Row1">
             <summary>
             2nd row of the matrix
             </summary>
            </member>
        <member name="F:Urho.Matrix4.Row2">
             <summary>
             3rd row of the matrix
             </summary>
            </member>
        <member name="F:Urho.Matrix4.Row3">
             <summary>
             Bottom row of the matrix
             </summary>
            </member>
        <member name="F:Urho.Matrix4.Identity">
             <summary>
             The identity matrix
             </summary>
            </member>
        <member name="M:Urho.Matrix4.#ctor(Urho.Vector4,Urho.Vector4,Urho.Vector4,Urho.Vector4)">
             <summary>
             Constructs a new instance.
             </summary>
             <param name="row0">Top row of the matrix</param>
             <param name="row1">Second row of the matrix</param>
             <param name="row2">Third row of the matrix</param>
             <param name="row3">Bottom row of the matrix</param>
            </member>
        <member name="M:Urho.Matrix4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Constructs a new instance.
             </summary>
             <param name="m00">First item of the first row of the matrix.</param>
             <param name="m01">Second item of the first row of the matrix.</param>
             <param name="m02">Third item of the first row of the matrix.</param>
             <param name="m03">Fourth item of the first row of the matrix.</param>
             <param name="m10">First item of the second row of the matrix.</param>
             <param name="m11">Second item of the second row of the matrix.</param>
             <param name="m12">Third item of the second row of the matrix.</param>
             <param name="m13">Fourth item of the second row of the matrix.</param>
             <param name="m20">First item of the third row of the matrix.</param>
             <param name="m21">Second item of the third row of the matrix.</param>
             <param name="m22">Third item of the third row of the matrix.</param>
             <param name="m23">First item of the third row of the matrix.</param>
             <param name="m30">Fourth item of the fourth row of the matrix.</param>
             <param name="m31">Second item of the fourth row of the matrix.</param>
             <param name="m32">Third item of the fourth row of the matrix.</param>
             <param name="m33">Fourth item of the fourth row of the matrix.</param>
            </member>
        <member name="P:Urho.Matrix4.Determinant">
             <summary>
             The determinant of this matrix
             </summary>
            </member>
        <member name="P:Urho.Matrix4.Column0">
             <summary>
             The first column of this matrix
             </summary>
            </member>
        <member name="P:Urho.Matrix4.Column1">
             <summary>
             The second column of this matrix
             </summary>
            </member>
        <member name="P:Urho.Matrix4.Column2">
             <summary>
             The third column of this matrix
             </summary>
            </member>
        <member name="P:Urho.Matrix4.Column3">
             <summary>
             The fourth column of this matrix
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M11">
             <summary>
             Gets or sets the value at row 1, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M12">
             <summary>
             Gets or sets the value at row 1, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M13">
             <summary>
             Gets or sets the value at row 1, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M14">
             <summary>
             Gets or sets the value at row 1, column 4 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M21">
             <summary>
             Gets or sets the value at row 2, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M22">
             <summary>
             Gets or sets the value at row 2, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M23">
             <summary>
             Gets or sets the value at row 2, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M24">
             <summary>
             Gets or sets the value at row 2, column 4 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M31">
             <summary>
             Gets or sets the value at row 3, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M32">
             <summary>
             Gets or sets the value at row 3, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M33">
             <summary>
             Gets or sets the value at row 3, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M34">
             <summary>
             Gets or sets the value at row 3, column 4 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M41">
             <summary>
             Gets or sets the value at row 4, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M42">
             <summary>
             Gets or sets the value at row 4, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M43">
             <summary>
             Gets or sets the value at row 4, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4.M44">
             <summary>
             Gets or sets the value at row 4, column 4 of this instance.
             </summary>
            </member>
        <member name="M:Urho.Matrix4.Invert">
             <summary>
             Converts this instance into its inverse.
             </summary>
            </member>
        <member name="M:Urho.Matrix4.Transpose">
             <summary>
             Converts this instance into its transpose.
             </summary>
            </member>
        <member name="M:Urho.Matrix4.CreateFromAxisAngle(Urho.Vector3,System.Single,Urho.Matrix4@)">
             <summary>
             Build a rotation matrix from the specified axis/angle rotation.
             </summary>
             <param name="axis">The axis to rotate about.</param>
             <param name="angle">Angle in radians to rotate counter-clockwise (looking in the direction of the given axis).</param>
             <param name="result">A matrix instance.</param>
            </member>
        <member name="M:Urho.Matrix4.CreateFromAxisAngle(Urho.Vector3,System.Single)">
             <summary>
             Build a rotation matrix from the specified axis/angle rotation.
             </summary>
             <param name="axis">The axis to rotate about.</param>
             <param name="angle">Angle in radians to rotate counter-clockwise (looking in the direction of the given axis).</param>
             <returns>A matrix instance.</returns>
            </member>
        <member name="M:Urho.Matrix4.CreateRotationX(System.Single,Urho.Matrix4@)">
             <summary>
             Builds a rotation matrix for a rotation around the x-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4.CreateRotationX(System.Single)">
             <summary>
             Builds a rotation matrix for a rotation around the x-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <returns>The resulting Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4.CreateRotationY(System.Single,Urho.Matrix4@)">
             <summary>
             Builds a rotation matrix for a rotation around the y-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4.CreateRotationY(System.Single)">
             <summary>
             Builds a rotation matrix for a rotation around the y-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <returns>The resulting Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4.CreateRotationZ(System.Single,Urho.Matrix4@)">
             <summary>
             Builds a rotation matrix for a rotation around the z-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4.CreateRotationZ(System.Single)">
             <summary>
             Builds a rotation matrix for a rotation around the z-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <returns>The resulting Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4.CreateTranslation(System.Single,System.Single,System.Single,Urho.Matrix4@)">
             <summary>
             Creates a translation matrix.
             </summary>
             <param name="x">X translation.</param>
             <param name="y">Y translation.</param>
             <param name="z">Z translation.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4.CreateTranslation(Urho.Vector3@,Urho.Matrix4@)">
             <summary>
             Creates a translation matrix.
             </summary>
             <param name="vector">The translation vector.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4.CreateTranslation(System.Single,System.Single,System.Single)">
             <summary>
             Creates a translation matrix.
             </summary>
             <param name="x">X translation.</param>
             <param name="y">Y translation.</param>
             <param name="z">Z translation.</param>
             <returns>The resulting Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4.CreateTranslation(Urho.Vector3)">
             <summary>
             Creates a translation matrix.
             </summary>
             <param name="vector">The translation vector.</param>
             <returns>The resulting Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,Urho.Matrix4@)">
             <summary>
             Creates an orthographic projection matrix.
             </summary>
             <param name="width">The width of the projection volume.</param>
             <param name="height">The height of the projection volume.</param>
             <param name="zNear">The near edge of the projection volume.</param>
             <param name="zFar">The far edge of the projection volume.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Creates an orthographic projection matrix.
             </summary>
             <param name="width">The width of the projection volume.</param>
             <param name="height">The height of the projection volume.</param>
             <param name="zNear">The near edge of the projection volume.</param>
             <param name="zFar">The far edge of the projection volume.</param>
             <rereturns>The resulting Matrix4 instance.</rereturns>
            </member>
        <member name="M:Urho.Matrix4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Urho.Matrix4@)">
             <summary>
             Creates an orthographic projection matrix.
             </summary>
             <param name="left">The left edge of the projection volume.</param>
             <param name="right">The right edge of the projection volume.</param>
             <param name="bottom">The bottom edge of the projection volume.</param>
             <param name="top">The top edge of the projection volume.</param>
             <param name="zNear">The near edge of the projection volume.</param>
             <param name="zFar">The far edge of the projection volume.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Creates an orthographic projection matrix.
             </summary>
             <param name="left">The left edge of the projection volume.</param>
             <param name="right">The right edge of the projection volume.</param>
             <param name="bottom">The bottom edge of the projection volume.</param>
             <param name="top">The top edge of the projection volume.</param>
             <param name="zNear">The near edge of the projection volume.</param>
             <param name="zFar">The far edge of the projection volume.</param>
             <returns>The resulting Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,Urho.Matrix4@)">
             <summary>
             Creates a perspective projection matrix.
             </summary>
             <param name="fovy">Angle of the field of view in the y direction (in radians)</param>
             <param name="aspect">Aspect ratio of the view (width / height)</param>
             <param name="zNear">Distance to the near clip plane</param>
             <param name="zFar">Distance to the far clip plane</param>
             <param name="result">A projection matrix that transforms camera space to raster space</param>
             <exception cref="T:System.ArgumentOutOfRangeException">
             Thrown under the following conditions:
             <list type="bullet">
             <item>fovy is zero, less than zero or larger than Math.PI</item>
             <item>aspect is negative or zero</item>
             <item>zNear is negative or zero</item>
             <item>zFar is negative or zero</item>
             <item>zNear is larger than zFar</item>
             </list>
             </exception>
            </member>
        <member name="M:Urho.Matrix4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Creates a perspective projection matrix.
             </summary>
             <param name="fovy">Angle of the field of view in the y direction (in radians)</param>
             <param name="aspect">Aspect ratio of the view (width / height)</param>
             <param name="zNear">Distance to the near clip plane</param>
             <param name="zFar">Distance to the far clip plane</param>
             <returns>A projection matrix that transforms camera space to raster space</returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
             Thrown under the following conditions:
             <list type="bullet">
             <item>fovy is zero, less than zero or larger than Math.PI</item>
             <item>aspect is negative or zero</item>
             <item>zNear is negative or zero</item>
             <item>zFar is negative or zero</item>
             <item>zNear is larger than zFar</item>
             </list>
             </exception>
            </member>
        <member name="M:Urho.Matrix4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Urho.Matrix4@)">
             <summary>
             Creates an perspective projection matrix.
             </summary>
             <param name="left">Left edge of the view frustum</param>
             <param name="right">Right edge of the view frustum</param>
             <param name="bottom">Bottom edge of the view frustum</param>
             <param name="top">Top edge of the view frustum</param>
             <param name="zNear">Distance to the near clip plane</param>
             <param name="zFar">Distance to the far clip plane</param>
             <param name="result">A projection matrix that transforms camera space to raster space</param>
             <exception cref="T:System.ArgumentOutOfRangeException">
             Thrown under the following conditions:
             <list type="bullet">
             <item>zNear is negative or zero</item>
             <item>zFar is negative or zero</item>
             <item>zNear is larger than zFar</item>
             </list>
             </exception>
            </member>
        <member name="M:Urho.Matrix4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Creates an perspective projection matrix.
             </summary>
             <param name="left">Left edge of the view frustum</param>
             <param name="right">Right edge of the view frustum</param>
             <param name="bottom">Bottom edge of the view frustum</param>
             <param name="top">Top edge of the view frustum</param>
             <param name="zNear">Distance to the near clip plane</param>
             <param name="zFar">Distance to the far clip plane</param>
             <returns>A projection matrix that transforms camera space to raster space</returns>
             <exception cref="T:System.ArgumentOutOfRangeException">
             Thrown under the following conditions:
             <list type="bullet">
             <item>zNear is negative or zero</item>
             <item>zFar is negative or zero</item>
             <item>zNear is larger than zFar</item>
             </list>
             </exception>
            </member>
        <member name="M:Urho.Matrix4.Translation(Urho.Vector3)">
             <summary>
             Builds a translation matrix.
             </summary>
             <param name="trans">The translation vector.</param>
             <returns>A new Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4.Translation(System.Single,System.Single,System.Single)">
             <summary>
             Build a translation matrix with the given translation
             </summary>
             <param name="x">X translation</param>
             <param name="y">Y translation</param>
             <param name="z">Z translation</param>
             <returns>A Translation matrix</returns>
            </member>
        <member name="M:Urho.Matrix4.Scale(System.Single)">
             <summary>
             Build a scaling matrix
             </summary>
             <param name="scale">Single scale factor for x,y and z axes</param>
             <returns>A scaling matrix</returns>
            </member>
        <member name="M:Urho.Matrix4.Scale(Urho.Vector3)">
             <summary>
             Build a scaling matrix
             </summary>
             <param name="scale">Scale factors for x,y and z axes</param>
             <returns>A scaling matrix</returns>
            </member>
        <member name="M:Urho.Matrix4.Scale(System.Single,System.Single,System.Single)">
             <summary>
             Build a scaling matrix
             </summary>
             <param name="x">Scale factor for x-axis</param>
             <param name="y">Scale factor for y-axis</param>
             <param name="z">Scale factor for z-axis</param>
             <returns>A scaling matrix</returns>
            </member>
        <member name="M:Urho.Matrix4.RotateX(System.Single)">
             <summary>
             Build a rotation matrix that rotates about the x-axis
             </summary>
             <param name="angle">angle in radians to rotate counter-clockwise around the x-axis</param>
             <returns>A rotation matrix</returns>
            </member>
        <member name="M:Urho.Matrix4.RotateY(System.Single)">
             <summary>
             Build a rotation matrix that rotates about the y-axis
             </summary>
             <param name="angle">angle in radians to rotate counter-clockwise around the y-axis</param>
             <returns>A rotation matrix</returns>
            </member>
        <member name="M:Urho.Matrix4.RotateZ(System.Single)">
             <summary>
             Build a rotation matrix that rotates about the z-axis
             </summary>
             <param name="angle">angle in radians to rotate counter-clockwise around the z-axis</param>
             <returns>A rotation matrix</returns>
            </member>
        <member name="M:Urho.Matrix4.Rotate(Urho.Vector3,System.Single)">
             <summary>
             Build a rotation matrix to rotate about the given axis
             </summary>
             <param name="axis">the axis to rotate about</param>
             <param name="angle">angle in radians to rotate counter-clockwise (looking in the direction of the given axis)</param>
             <returns>A rotation matrix</returns>
            </member>
        <member name="M:Urho.Matrix4.Rotate(Urho.Quaternion)">
             <summary>
             Build a rotation matrix from a quaternion
             </summary>
             <param name="q">the quaternion</param>
             <returns>A rotation matrix</returns>
            </member>
        <member name="M:Urho.Matrix4.LookAt(Urho.Vector3,Urho.Vector3,Urho.Vector3)">
             <summary>
             Build a world space to camera space matrix
             </summary>
             <param name="eye">Eye (camera) position in world space</param>
             <param name="target">Target position in world space</param>
             <param name="up">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
             <returns>A Matrix4 that transforms world space to camera space</returns>
            </member>
        <member name="M:Urho.Matrix4.LookAt(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Build a world space to camera space matrix
             </summary>
             <param name="eyeX">Eye (camera) position in world space</param>
             <param name="eyeY">Eye (camera) position in world space</param>
             <param name="eyeZ">Eye (camera) position in world space</param>
             <param name="targetX">Target position in world space</param>
             <param name="targetY">Target position in world space</param>
             <param name="targetZ">Target position in world space</param>
             <param name="upX">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
             <param name="upY">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
             <param name="upZ">Up vector in world space (should not be parallel to the camera direction, that is target - eye)</param>
             <returns>A Matrix4 that transforms world space to camera space</returns>
            </member>
        <member name="M:Urho.Matrix4.Frustum(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Build a projection matrix
             </summary>
             <param name="left">Left edge of the view frustum</param>
             <param name="right">Right edge of the view frustum</param>
             <param name="bottom">Bottom edge of the view frustum</param>
             <param name="top">Top edge of the view frustum</param>
             <param name="near">Distance to the near clip plane</param>
             <param name="far">Distance to the far clip plane</param>
             <returns>A projection matrix that transforms camera space to raster space</returns>
            </member>
        <member name="M:Urho.Matrix4.Perspective(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Build a projection matrix
             </summary>
             <param name="fovy">Angle of the field of view in the y direction (in radians)</param>
             <param name="aspect">Aspect ratio of the view (width / height)</param>
             <param name="near">Distance to the near clip plane</param>
             <param name="far">Distance to the far clip plane</param>
             <returns>A projection matrix that transforms camera space to raster space</returns>
            </member>
        <member name="M:Urho.Matrix4.Mult(Urho.Matrix4,Urho.Matrix4)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication</returns>
            </member>
        <member name="M:Urho.Matrix4.Mult(Urho.Matrix4@,Urho.Matrix4@,Urho.Matrix4@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication</param>
            </member>
        <member name="M:Urho.Matrix4.Invert(Urho.Matrix4)">
             <summary>
             Calculate the inverse of the given matrix
             </summary>
             <param name="mat">The matrix to invert</param>
             <returns>The inverse of the given matrix if it has one, or the input if it is singular</returns>
             <exception cref="T:System.InvalidOperationException">Thrown if the Matrix4 is singular.</exception>
            </member>
        <member name="M:Urho.Matrix4.Transpose(Urho.Matrix4)">
             <summary>
             Calculate the transpose of the given matrix
             </summary>
             <param name="mat">The matrix to transpose</param>
             <returns>The transpose of the given matrix</returns>
            </member>
        <member name="M:Urho.Matrix4.Transpose(Urho.Matrix4@,Urho.Matrix4@)">
             <summary>
             Calculate the transpose of the given matrix
             </summary>
             <param name="mat">The matrix to transpose</param>
             <param name="result">The result of the calculation</param>
            </member>
        <member name="M:Urho.Matrix4.op_Multiply(Urho.Matrix4,Urho.Matrix4)">
             <summary>
             Matrix multiplication
             </summary>
             <param name="left">left-hand operand</param>
             <param name="right">right-hand operand</param>
             <returns>A new Matrix44 which holds the result of the multiplication</returns>
            </member>
        <member name="M:Urho.Matrix4.op_Equality(Urho.Matrix4,Urho.Matrix4)">
             <summary>
             Compares two instances for equality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left equals right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix4.op_Inequality(Urho.Matrix4,Urho.Matrix4)">
             <summary>
             Compares two instances for inequality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left does not equal right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix4.ToString">
             <summary>
             Returns a System.String that represents the current Matrix44.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Urho.Matrix4.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.Matrix4.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare tresult.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix4.Equals(Urho.Matrix4)">
             <summary>Indicates whether the current matrix is equal to another matrix.</summary>
             <param name="other">An matrix to compare with this matrix.</param>
             <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="T:Urho.Matrix4x2">
             <summary>
             Represents a 4x2 matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix4x2.Row0">
             <summary>
             Top row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix4x2.Row1">
             <summary>
             Second row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix4x2.Row2">
             <summary>
             Third row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix4x2.Row3">
             <summary>
             Bottom row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix4x2.Zero">
             <summary>
             The zero matrix.
             </summary>
            </member>
        <member name="M:Urho.Matrix4x2.#ctor(Urho.Vector2,Urho.Vector2,Urho.Vector2,Urho.Vector2)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix4x2" /> struct.
             </summary>
             <param name="row0">Top row of the matrix.</param>
             <param name="row1">Second row of the matrix.</param>
             <param name="row2">Third row of the matrix.</param>
             <param name="row3">Bottom row of the matrix.</param>
            </member>
        <member name="M:Urho.Matrix4x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix4x2" /> struct.
             </summary>
             <param name="m00">First item of the first row of the matrix.</param>
             <param name="m01">Second item of the first row of the matrix.</param>
             <param name="m10">First item of the second row of the matrix.</param>
             <param name="m11">Second item of the second row of the matrix.</param>
             <param name="m20">First item of the third row of the matrix.</param>
             <param name="m21">Second item of the third row of the matrix.</param>
             <param name="m30">First item of the fourth row of the matrix.</param>
             <param name="m31">Second item of the fourth row of the matrix.</param>
            </member>
        <member name="P:Urho.Matrix4x2.Column0">
             <summary>
             Gets or sets the first column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.Column1">
             <summary>
             Gets or sets the second column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.M11">
             <summary>
             Gets or sets the value at row 1, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.M12">
             <summary>
             Gets or sets the value at row 1, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.M21">
             <summary>
             Gets or sets the value at row 2, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.M22">
             <summary>
             Gets or sets the value at row 2, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.M31">
             <summary>
             Gets or sets the value at row 3, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.M32">
             <summary>
             Gets or sets the value at row 3, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.M41">
             <summary>
             Gets or sets the value at row 4, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.M42">
             <summary>
             Gets or sets the value at row 4, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.Diagonal">
             <summary>
             Gets or sets the values along the main diagonal of the matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.Trace">
             <summary>
             Gets the trace of the matrix, the sum of the values along the diagonal.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x2.Item(System.Int32,System.Int32)">
             <summary>
             Gets or sets the value at a specified row and column.
             </summary>
             <param name="rowIndex">The index of the row.</param>
             <param name="columnIndex">The index of the column.</param>
             <returns>The element at the given row and column index.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.CreateRotation(System.Single,Urho.Matrix4x2@)">
             <summary>
             Builds a rotation matrix.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <param name="result">The resulting Matrix3x2 instance.</param>
            </member>
        <member name="M:Urho.Matrix4x2.CreateRotation(System.Single)">
             <summary>
             Builds a rotation matrix.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <returns>The resulting Matrix3x2 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.CreateScale(System.Single,Urho.Matrix4x2@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Single scale factor for the x, y, and z axes.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix4x2.CreateScale(System.Single)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Single scale factor for the x and y axes.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.CreateScale(Urho.Vector2,Urho.Matrix4x2@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Scale factors for the x and y axes.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix4x2.CreateScale(Urho.Vector2)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="scale">Scale factors for the x and y axes.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.CreateScale(System.Single,System.Single,Urho.Matrix4x2@)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="x">Scale factor for the x axis.</param>
             <param name="y">Scale factor for the y axis.</param>
             <param name="result">A scale matrix.</param>
            </member>
        <member name="M:Urho.Matrix4x2.CreateScale(System.Single,System.Single)">
             <summary>
             Creates a scale matrix.
             </summary>
             <param name="x">Scale factor for the x axis.</param>
             <param name="y">Scale factor for the y axis.</param>
             <returns>A scale matrix.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.Mult(Urho.Matrix4x2,System.Single,Urho.Matrix4x2@)">
             <summary>
             Multiplies and instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix4x2.Mult(Urho.Matrix4x2,System.Single)">
             <summary>
             Multiplies and instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.Mult(Urho.Matrix4x2,Urho.Matrix2,Urho.Matrix4x2@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix4x2.Mult(Urho.Matrix4x2,Urho.Matrix2)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.Mult(Urho.Matrix4x2,Urho.Matrix2x3,Urho.Matrix4x3@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix4x2.Mult(Urho.Matrix4x2,Urho.Matrix2x3)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.Mult(Urho.Matrix4x2,Urho.Matrix2x4,Urho.Matrix4@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix4x2.Mult(Urho.Matrix4x2,Urho.Matrix2x4)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.Add(Urho.Matrix4x2,Urho.Matrix4x2,Urho.Matrix4x2@)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <param name="result">A new instance that is the result of the addition.</param>
            </member>
        <member name="M:Urho.Matrix4x2.Add(Urho.Matrix4x2,Urho.Matrix4x2)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <returns>A new instance that is the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.Subtract(Urho.Matrix4x2,Urho.Matrix4x2,Urho.Matrix4x2@)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left operand of the subtraction.</param>
             <param name="right">The right operand of the subtraction.</param>
             <param name="result">A new instance that is the result of the subtraction.</param>
            </member>
        <member name="M:Urho.Matrix4x2.Subtract(Urho.Matrix4x2,Urho.Matrix4x2)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left operand of the subtraction.</param>
             <param name="right">The right operand of the subtraction.</param>
             <returns>A new instance that is the result of the subtraction.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.Transpose(Urho.Matrix4x2,Urho.Matrix2x4@)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <param name="result">The transpose of the given matrix.</param>
            </member>
        <member name="M:Urho.Matrix4x2.Transpose(Urho.Matrix4x2)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <returns>The transpose of the given matrix.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.op_Multiply(System.Single,Urho.Matrix4x2)">
             <summary>
             Scalar multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix4x2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.op_Multiply(Urho.Matrix4x2,System.Single)">
             <summary>
             Scalar multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix4x2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.op_Multiply(Urho.Matrix4x2,Urho.Matrix2)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix2 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.op_Multiply(Urho.Matrix4x2,Urho.Matrix2x3)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix4x3 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.op_Multiply(Urho.Matrix4x2,Urho.Matrix2x4)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix4 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.op_Addition(Urho.Matrix4x2,Urho.Matrix4x2)">
             <summary>
             Matrix addition.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix4x2 which holds the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.op_Subtraction(Urho.Matrix4x2,Urho.Matrix4x2)">
             <summary>
             Matrix subtraction.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix4x2 which holds the result of the subtraction.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.op_Equality(Urho.Matrix4x2,Urho.Matrix4x2)">
             <summary>
             Compares two instances for equality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left equals right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.op_Inequality(Urho.Matrix4x2,Urho.Matrix4x2)">
             <summary>
             Compares two instances for inequality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left does not equal right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.ToString">
             <summary>
             Returns a System.String that represents the current Matrix3d.
             </summary>
             <returns>The string representation of the matrix.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare to.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix4x2.Equals(Urho.Matrix4x2)">
             <summary>
             Indicates whether the current matrix is equal to another matrix.
             </summary>
             <param name="other">An matrix to compare with this matrix.</param>
             <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="T:Urho.Matrix4x3">
             <summary>
             Represents a 3x4 matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix4x3.Row0">
             <summary>
             Top row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix4x3.Row1">
             <summary>
             2nd row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix4x3.Row2">
             <summary>
             3rd row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix4x3.Row3">
             <summary>
             Bottom row of the matrix.
             </summary>
            </member>
        <member name="F:Urho.Matrix4x3.Zero">
             <summary>
             The zero matrix.
             </summary>
            </member>
        <member name="M:Urho.Matrix4x3.#ctor(Urho.Vector3,Urho.Vector3,Urho.Vector3,Urho.Vector3)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix4x3" /> struct.
             </summary>
             <param name="row0">Top row of the matrix.</param>
             <param name="row1">Second row of the matrix.</param>
             <param name="row2">Third row of the matrix.</param>
             <param name="row3">Bottom row of the matrix.</param>
            </member>
        <member name="M:Urho.Matrix4x3.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Initializes a new instance of the <see cref="T:Urho.Matrix4x3" /> struct.
             </summary>
             <param name="m00">First item of the first row of the matrix.</param>
             <param name="m01">Second item of the first row of the matrix.</param>
             <param name="m02">Third item of the first row of the matrix.</param>
             <param name="m10">First item of the second row of the matrix.</param>
             <param name="m11">Second item of the second row of the matrix.</param>
             <param name="m12">Third item of the second row of the matrix.</param>
             <param name="m20">First item of the third row of the matrix.</param>
             <param name="m21">Second item of the third row of the matrix.</param>
             <param name="m22">Third item of the third row of the matrix.</param>
             <param name="m30">First item of the fourth row of the matrix.</param>
             <param name="m31">Second item of the fourth row of the matrix.</param>
             <param name="m32">Third item of the fourth row of the matrix.</param>
            </member>
        <member name="P:Urho.Matrix4x3.Column0">
             <summary>
             Gets the first column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.Column1">
             <summary>
             Gets the second column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.Column2">
             <summary>
             Gets the third column of this matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M11">
             <summary>
             Gets or sets the value at row 1, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M12">
             <summary>
             Gets or sets the value at row 1, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M13">
             <summary>
             Gets or sets the value at row 1, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M21">
             <summary>
             Gets or sets the value at row 2, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M22">
             <summary>
             Gets or sets the value at row 2, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M23">
             <summary>
             Gets or sets the value at row 2, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M31">
             <summary>
             Gets or sets the value at row 3, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M32">
             <summary>
             Gets or sets the value at row 3, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M33">
             <summary>
             Gets or sets the value at row 3, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M41">
             <summary>
             Gets or sets the value at row 4, column 1 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M42">
             <summary>
             Gets or sets the value at row 4, column 2 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.M43">
             <summary>
             Gets or sets the value at row 4, column 3 of this instance.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.Diagonal">
             <summary>
             Gets or sets the values along the main diagonal of the matrix.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.Trace">
             <summary>
             Gets the trace of the matrix, the sum of the values along the diagonal.
             </summary>
            </member>
        <member name="P:Urho.Matrix4x3.Item(System.Int32,System.Int32)">
             <summary>
             Gets or sets the value at a specified row and column.
             </summary>
             <param name="rowIndex">The index of the row.</param>
             <param name="columnIndex">The index of the column.</param>
             <returns>The element at the given row and column index.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.Invert">
             <summary>
             Converts this instance into it's inverse by inverting the upper-left 3x3 and replacing Row3.
             </summary>
            </member>
        <member name="M:Urho.Matrix4x3.CreateFromAxisAngle(Urho.Vector3,System.Single,Urho.Matrix4x3@)">
             <summary>
             Build a rotation matrix from the specified axis/angle rotation.
             </summary>
             <param name="axis">The axis to rotate about.</param>
             <param name="angle">Angle in radians to rotate counter-clockwise (looking in the direction of the given axis).</param>
             <param name="result">A matrix instance.</param>
            </member>
        <member name="M:Urho.Matrix4x3.CreateFromAxisAngle(Urho.Vector3,System.Single)">
             <summary>
             Build a rotation matrix from the specified axis/angle rotation.
             </summary>
             <param name="axis">The axis to rotate about.</param>
             <param name="angle">Angle in radians to rotate counter-clockwise (looking in the direction of the given axis).</param>
             <returns>A matrix instance.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.CreateFromQuaternion(Urho.Quaternion,Urho.Matrix4x3@)">
             <summary>
             Builds a rotation matrix from a quaternion.
             </summary>
             <param name="q">The quaternion to rotate by.</param>
             <param name="result">A matrix instance.</param>
            </member>
        <member name="M:Urho.Matrix4x3.CreateFromQuaternion(Urho.Quaternion)">
             <summary>
             Builds a rotation matrix from a quaternion.
             </summary>
             <param name="q">The quaternion to rotate by.</param>
             <returns>A matrix instance.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.CreateRotationX(System.Single,Urho.Matrix4x3@)">
             <summary>
             Builds a rotation matrix for a rotation around the x-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4x3.CreateRotationX(System.Single)">
             <summary>
             Builds a rotation matrix for a rotation around the x-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <returns>The resulting Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.CreateRotationY(System.Single,Urho.Matrix4x3@)">
             <summary>
             Builds a rotation matrix for a rotation around the y-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4x3.CreateRotationY(System.Single)">
             <summary>
             Builds a rotation matrix for a rotation around the y-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <returns>The resulting Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.CreateRotationZ(System.Single,Urho.Matrix4x3@)">
             <summary>
             Builds a rotation matrix for a rotation around the z-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4x3.CreateRotationZ(System.Single)">
             <summary>
             Builds a rotation matrix for a rotation around the z-axis.
             </summary>
             <param name="angle">The counter-clockwise angle in radians.</param>
             <returns>The resulting Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.CreateTranslation(System.Single,System.Single,System.Single,Urho.Matrix4x3@)">
             <summary>
             Creates a translation matrix.
             </summary>
             <param name="x">X translation.</param>
             <param name="y">Y translation.</param>
             <param name="z">Z translation.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4x3.CreateTranslation(Urho.Vector3,Urho.Matrix4x3@)">
             <summary>
             Creates a translation matrix.
             </summary>
             <param name="vector">The translation vector.</param>
             <param name="result">The resulting Matrix4 instance.</param>
            </member>
        <member name="M:Urho.Matrix4x3.CreateTranslation(System.Single,System.Single,System.Single)">
             <summary>
             Creates a translation matrix.
             </summary>
             <param name="x">X translation.</param>
             <param name="y">Y translation.</param>
             <param name="z">Z translation.</param>
             <returns>The resulting Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.CreateTranslation(Urho.Vector3)">
             <summary>
             Creates a translation matrix.
             </summary>
             <param name="vector">The translation vector.</param>
             <returns>The resulting Matrix4 instance.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.CreateScale(System.Single)">
             <summary>
             Build a scaling matrix.
             </summary>
             <param name="scale">Single scale factor for x,y and z axes.</param>
             <returns>A scaling matrix.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.CreateScale(Urho.Vector3)">
             <summary>
             Build a scaling matrix.
             </summary>
             <param name="scale">Scale factors for x,y and z axes.</param>
             <returns>A scaling matrix.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.CreateScale(System.Single,System.Single,System.Single)">
             <summary>
             Build a scaling matrix.
             </summary>
             <param name="x">Scale factor for x-axis.</param>
             <param name="y">Scale factor for y-axis.</param>
             <param name="z">Scale factor for z-axis.</param>
             <returns>A scaling matrix.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.Mult(Urho.Matrix4x3,Urho.Matrix3x4)">
             <summary>
             This isn't quite a multiply, but the result may be useful in some situations.
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.Mult(Urho.Matrix4x3,Urho.Matrix3x4,Urho.Matrix4@)">
             <summary>
             This isn't quite a multiply, but the result may be useful in some situations.
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix4x3.Mult(Urho.Matrix4x3,Urho.Matrix4x3)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.Mult(Urho.Matrix4x3,Urho.Matrix4x3,Urho.Matrix4x3@)">
             <summary>
             This isn't quite a multiply, but the result may be useful in some situations.
             Multiplies two instances.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix4x3.Mult(Urho.Matrix4x3,System.Single)">
             <summary>
             Multiplies an instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <returns>A new instance that is the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.Mult(Urho.Matrix4x3,System.Single,Urho.Matrix4x3@)">
             <summary>
             Multiplies an instance by a scalar.
             </summary>
             <param name="left">The left operand of the multiplication.</param>
             <param name="right">The right operand of the multiplication.</param>
             <param name="result">A new instance that is the result of the multiplication.</param>
            </member>
        <member name="M:Urho.Matrix4x3.Add(Urho.Matrix4x3,Urho.Matrix4x3)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <returns>A new instance that is the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.Add(Urho.Matrix4x3,Urho.Matrix4x3,Urho.Matrix4x3@)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The left operand of the addition.</param>
             <param name="right">The right operand of the addition.</param>
             <param name="result">A new instance that is the result of the addition.</param>
            </member>
        <member name="M:Urho.Matrix4x3.Subtract(Urho.Matrix4x3,Urho.Matrix4x3)">
             <summary>
             Subtracts one instance from another.
             </summary>
             <param name="left">The left operand of the subraction.</param>
             <param name="right">The right operand of the subraction.</param>
             <returns>A new instance that is the result of the subraction.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.Subtract(Urho.Matrix4x3,Urho.Matrix4x3,Urho.Matrix4x3@)">
             <summary>
             Subtracts one instance from another.
             </summary>
             <param name="left">The left operand of the subraction.</param>
             <param name="right">The right operand of the subraction.</param>
             <param name="result">A new instance that is the result of the subraction.</param>
            </member>
        <member name="M:Urho.Matrix4x3.Invert(Urho.Matrix4x3)">
             <summary>
             Calculate the inverse of the given matrix.
             </summary>
             <param name="mat">The matrix to invert.</param>
             <returns>The inverse of the given matrix.</returns>
             <exception cref="T:System.InvalidOperationException">Thrown if the Matrix4 is singular.</exception>
            </member>
        <member name="M:Urho.Matrix4x3.Invert(Urho.Matrix4x3,Urho.Matrix4x3@)">
             <summary>
             Calculate the inverse of the given matrix.
             </summary>
             <param name="mat">The matrix to invert.</param>
             <param name="result">The inverse of the given matrix if it has one, or the input if it is singular.</param>
             <exception cref="T:System.InvalidOperationException">Thrown if the Matrix4 is singular.</exception>
            </member>
        <member name="M:Urho.Matrix4x3.Transpose(Urho.Matrix4x3)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <returns>The transpose of the given matrix.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.Transpose(Urho.Matrix4x3,Urho.Matrix3x4@)">
             <summary>
             Calculate the transpose of the given matrix.
             </summary>
             <param name="mat">The matrix to transpose.</param>
             <param name="result">The result of the calculation.</param>
            </member>
        <member name="M:Urho.Matrix4x3.op_Multiply(Urho.Matrix4x3,Urho.Matrix3x4)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix4 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.op_Multiply(Urho.Matrix4x3,Urho.Matrix4x3)">
             <summary>
             Matrix multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix4x3 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.op_Multiply(Urho.Matrix4x3,System.Single)">
             <summary>
             Matrix-scalar multiplication.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix4x3 which holds the result of the multiplication.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.op_Addition(Urho.Matrix4x3,Urho.Matrix4x3)">
             <summary>
             Matrix addition.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix4x3 which holds the result of the addition.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.op_Subtraction(Urho.Matrix4x3,Urho.Matrix4x3)">
             <summary>
             Matrix subtraction.
             </summary>
             <param name="left">left-hand operand.</param>
             <param name="right">right-hand operand.</param>
             <returns>A new Matrix4x3 which holds the result of the subtraction.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.op_Equality(Urho.Matrix4x3,Urho.Matrix4x3)">
             <summary>
             Compares two instances for equality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left equals right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.op_Inequality(Urho.Matrix4x3,Urho.Matrix4x3)">
             <summary>
             Compares two instances for inequality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left does not equal right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.ToString">
             <summary>
             Returns a System.String that represents the current Matrix4x3.
             </summary>
             <returns>The string representation of the matrix.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare tresult.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Matrix4x3.Equals(Urho.Matrix4x3)">
             <summary>
             Indicates whether the current matrix is equal to another matrix.
             </summary>
             <param name="other">An matrix to compare with this matrix.</param>
             <returns>true if the current matrix is equal to the matrix parameter; otherwise, false.</returns>
            </member>
        <member name="F:Urho.Plane.Normal">
             <summary>
             Plane normal.
             </summary>
            </member>
        <member name="F:Urho.Plane.AbsNormal">
             <summary>
             Plane absolute normal.
             </summary>
            </member>
        <member name="F:Urho.Plane.D">
             <summary>
             Plane constant.
             </summary>
            </member>
        <member name="M:Urho.Plane.#ctor(Urho.Vector3,Urho.Vector3)">
             <summary>
             Construct from a normal vector and a point on the plane.
             </summary>
            </member>
        <member name="M:Urho.Plane.#ctor(Urho.Vector4)">
             <summary>
             Construct from a 4-dimensional vector, where the w coordinate is the plane parameter.
             </summary>
            </member>
        <member name="T:Urho.Quaternion">
             <summary>
             Represents a Quaternion.
             </summary>
            </member>
        <member name="M:Urho.Quaternion.#ctor(Urho.Vector3,System.Single)">
             <summary>
             Construct a new Quaternion from vector and w components
             </summary>
             <param name="v">The vector part</param>
             <param name="w">The w part</param>
            </member>
        <member name="M:Urho.Quaternion.#ctor(System.Single,Urho.Vector3)">
             <summary>
             Construct a new Quaternion from axis and angle components
             </summary>
             <param name="axis">The axis part in degrees </param>
             <param name="angle">The angle part , may be not normalized</param>
            </member>
        <member name="M:Urho.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Construct a new Quaternion
             </summary>
             <param name="x">The x component</param>
             <param name="y">The y component</param>
             <param name="z">The z component</param>
             <param name="w">The w component</param>
            </member>
        <member name="P:Urho.Quaternion.XYZ">
             <summary>
             Gets or sets an OpenTK.Vector3 with the X, Y and Z components of this instance.
             </summary>
            </member>
        <member name="P:Urho.Quaternion.Xyz">
             <summary>
             Gets or sets an OpenTK.Vector3 with the X, Y and Z components of this instance.
             </summary>
            </member>
        <member name="P:Urho.Quaternion.X">
             <summary>
             Gets or sets the X component of this instance.
             </summary>
            </member>
        <member name="P:Urho.Quaternion.Y">
             <summary>
             Gets or sets the Y component of this instance.
             </summary>
            </member>
        <member name="P:Urho.Quaternion.Z">
             <summary>
             Gets or sets the Z component of this instance.
             </summary>
            </member>
        <member name="P:Urho.Quaternion.W">
             <summary>
             Gets or sets the W component of this instance.
             </summary>
            </member>
        <member name="M:Urho.Quaternion.ToAxisAngle(Urho.Vector3@,System.Single@)">
             <summary>
             Convert the current quaternion to axis angle representation
             </summary>
             <param name="axis">The resultant axis</param>
             <param name="angle">The resultant angle</param>
            </member>
        <member name="M:Urho.Quaternion.ToAxisAngle">
             <summary>
             Convert this instance to an axis-angle representation.
             </summary>
             <returns>A Vector4 that is the axis-angle representation of this quaternion.</returns>
            </member>
        <member name="P:Urho.Quaternion.Length">
             <summary>
             Gets the length (magnitude) of the quaternion.
             </summary>
             <seealso cref="P:Urho.Quaternion.LengthSquared" />
            </member>
        <member name="P:Urho.Quaternion.LengthSquared">
             <summary>
             Gets the square of the quaternion length (magnitude).
             </summary>
            </member>
        <member name="M:Urho.Quaternion.Normalize">
             <summary>
             Scales the Quaternion to unit length.
             </summary>
            </member>
        <member name="M:Urho.Quaternion.Conjugate">
             <summary>
             Convert this quaternion to its conjugate
             </summary>
            </member>
        <member name="F:Urho.Quaternion.Identity">
             <summary>
             Defines the identity quaternion.
             </summary>
            </member>
        <member name="M:Urho.Quaternion.Add(Urho.Quaternion,Urho.Quaternion)">
             <summary>
             Add two quaternions
             </summary>
             <param name="left">The first operand</param>
             <param name="right">The second operand</param>
             <returns>The result of the addition</returns>
            </member>
        <member name="M:Urho.Quaternion.Add(Urho.Quaternion@,Urho.Quaternion@,Urho.Quaternion@)">
             <summary>
             Add two quaternions
             </summary>
             <param name="left">The first operand</param>
             <param name="right">The second operand</param>
             <param name="result">The result of the addition</param>
            </member>
        <member name="M:Urho.Quaternion.Sub(Urho.Quaternion,Urho.Quaternion)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left instance.</param>
             <param name="right">The right instance.</param>
             <returns>The result of the operation.</returns>
            </member>
        <member name="M:Urho.Quaternion.Sub(Urho.Quaternion@,Urho.Quaternion@,Urho.Quaternion@)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The left instance.</param>
             <param name="right">The right instance.</param>
             <param name="result">The result of the operation.</param>
            </member>
        <member name="M:Urho.Quaternion.Mult(Urho.Quaternion,Urho.Quaternion)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>A new instance containing the result of the calculation.</returns>
            </member>
        <member name="M:Urho.Quaternion.Mult(Urho.Quaternion@,Urho.Quaternion@,Urho.Quaternion@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <param name="result">A new instance containing the result of the calculation.</param>
            </member>
        <member name="M:Urho.Quaternion.Multiply(Urho.Quaternion,Urho.Quaternion)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>A new instance containing the result of the calculation.</returns>
            </member>
        <member name="M:Urho.Quaternion.Multiply(Urho.Quaternion@,Urho.Quaternion@,Urho.Quaternion@)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <param name="result">A new instance containing the result of the calculation.</param>
            </member>
        <member name="M:Urho.Quaternion.Multiply(Urho.Quaternion@,System.Single,Urho.Quaternion@)">
             <summary>
             Multiplies an instance by a scalar.
             </summary>
             <param name="quaternion">The instance.</param>
             <param name="scale">The scalar.</param>
             <param name="result">A new instance containing the result of the calculation.</param>
            </member>
        <member name="M:Urho.Quaternion.Multiply(Urho.Quaternion,System.Single)">
             <summary>
             Multiplies an instance by a scalar.
             </summary>
             <param name="quaternion">The instance.</param>
             <param name="scale">The scalar.</param>
             <returns>A new instance containing the result of the calculation.</returns>
            </member>
        <member name="M:Urho.Quaternion.Conjugate(Urho.Quaternion)">
             <summary>
             Get the conjugate of the given quaternion
             </summary>
             <param name="q">The quaternion</param>
             <returns>The conjugate of the given quaternion</returns>
            </member>
        <member name="M:Urho.Quaternion.Conjugate(Urho.Quaternion@,Urho.Quaternion@)">
             <summary>
             Get the conjugate of the given quaternion
             </summary>
             <param name="q">The quaternion</param>
             <param name="result">The conjugate of the given quaternion</param>
            </member>
        <member name="M:Urho.Quaternion.Invert(Urho.Quaternion)">
             <summary>
             Get the inverse of the given quaternion
             </summary>
             <param name="q">The quaternion to invert</param>
             <returns>The inverse of the given quaternion</returns>
            </member>
        <member name="M:Urho.Quaternion.Invert(Urho.Quaternion@,Urho.Quaternion@)">
             <summary>
             Get the inverse of the given quaternion
             </summary>
             <param name="q">The quaternion to invert</param>
             <param name="result">The inverse of the given quaternion</param>
            </member>
        <member name="M:Urho.Quaternion.Normalize(Urho.Quaternion)">
             <summary>
             Scale the given quaternion to unit length
             </summary>
             <param name="q">The quaternion to normalize</param>
             <returns>The normalized quaternion</returns>
            </member>
        <member name="M:Urho.Quaternion.Normalize(Urho.Quaternion@,Urho.Quaternion@)">
             <summary>
             Scale the given quaternion to unit length
             </summary>
             <param name="q">The quaternion to normalize</param>
             <param name="result">The normalized quaternion</param>
            </member>
        <member name="M:Urho.Quaternion.FromAxisAngle(Urho.Vector3,System.Single)">
             <summary>
             Build a quaternion from the given axis and angle
             </summary>
             <param name="axis">The axis to rotate about</param>
             <param name="angle">The rotation angle in degrees</param>
             <returns></returns>
            </member>
        <member name="M:Urho.Quaternion.Slerp(Urho.Quaternion,Urho.Quaternion,System.Single)">
             <summary>
             Do Spherical linear interpolation between two quaternions 
             </summary>
             <param name="q1">The first quaternion</param>
             <param name="q2">The second quaternion</param>
             <param name="blend">The blend factor</param>
             <returns>A smooth blend between the given quaternions</returns>
            </member>
        <member name="M:Urho.Quaternion.op_Addition(Urho.Quaternion,Urho.Quaternion)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Quaternion.op_Subtraction(Urho.Quaternion,Urho.Quaternion)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Quaternion.op_Multiply(Urho.Quaternion,Urho.Quaternion)">
             <summary>
             Multiplies two instances.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Quaternion.op_Multiply(Urho.Quaternion,System.Single)">
             <summary>
             Multiplies an instance by a scalar.
             </summary>
             <param name="quaternion">The instance.</param>
             <param name="scale">The scalar.</param>
             <returns>A new instance containing the result of the calculation.</returns>
            </member>
        <member name="M:Urho.Quaternion.op_Multiply(System.Single,Urho.Quaternion)">
             <summary>
             Multiplies an instance by a scalar.
             </summary>
             <param name="quaternion">The instance.</param>
             <param name="scale">The scalar.</param>
             <returns>A new instance containing the result of the calculation.</returns>
            </member>
        <member name="M:Urho.Quaternion.op_Multiply(Urho.Quaternion,Urho.Vector3)">
             <summary>
             Multiplies an instance by a vector3.
             </summary>
             <param name="quaternion">The instance.</param>
             <param name="vector">The vector.</param>
             <returns>A new instance containing the result of the calculation.</returns>
            </member>
        <member name="M:Urho.Quaternion.op_Equality(Urho.Quaternion,Urho.Quaternion)">
             <summary>
             Compares two instances for equality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left equals right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Quaternion.op_Inequality(Urho.Quaternion,Urho.Quaternion)">
             <summary>
             Compares two instances for inequality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left does not equal right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Quaternion.ToString">
             <summary>
             Returns a System.String that represents the current Quaternion.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Urho.Quaternion.Equals(System.Object)">
             <summary>
             Compares this object instance to another object for equality. 
             </summary>
             <param name="other">The other object to be used in the comparison.</param>
             <returns>True if both objects are Quaternions of equal value. Otherwise it returns false.</returns>
            </member>
        <member name="M:Urho.Quaternion.GetHashCode">
             <summary>
             Provides the hash code for this object. 
             </summary>
             <returns>A hash code formed from the bitwise XOR of this objects members.</returns>
            </member>
        <member name="M:Urho.Quaternion.Equals(Urho.Quaternion)">
             <summary>
             Compares this Quaternion instance to another Quaternion for equality. 
             </summary>
             <param name="other">The other Quaternion to be used in the comparison.</param>
             <returns>True if both instances are equal; false otherwise.</returns>
            </member>
        <member name="T:Urho.Vector2">
             <summary>Represents a 2D vector using two single-precision floating-point numbers.</summary>
             <remarks>
             The Vector2 structure is suitable for interoperation with unmanaged code requiring two consecutive floats.
             </remarks>
            </member>
        <member name="F:Urho.Vector2.X">
             <summary>
             The X component of the Vector2.
             </summary>
            </member>
        <member name="F:Urho.Vector2.Y">
             <summary>
             The Y component of the Vector2.
             </summary>
            </member>
        <member name="M:Urho.Vector2.#ctor(System.Single,System.Single)">
             <summary>
             Constructs a new Vector2.
             </summary>
             <param name="x">The x coordinate of the net Vector2.</param>
             <param name="y">The y coordinate of the net Vector2.</param>
            </member>
        <member name="P:Urho.Vector2.Item(System.Int32)">
             <summary>
             Gets or sets the value at the index of the Vector.
             </summary>
             <param name="index">The index of the component from the Vector.</param>
             <exception cref="T:System.IndexOutOfRangeException">Thrown if the index is less than 0 or greater than 1.</exception>
            </member>
        <member name="M:Urho.Vector2.#ctor(Urho.Vector2)">
             <summary>
             Constructs a new Vector2 from the given Vector2.
             </summary>
             <param name="v">The Vector2 to copy components from.</param>
            </member>
        <member name="M:Urho.Vector2.#ctor(Urho.Vector3)">
             <summary>
             Constructs a new Vector2 from the given Vector3.
             </summary>
             <param name="v">The Vector3 to copy components from. Z is discarded.</param>
            </member>
        <member name="M:Urho.Vector2.#ctor(Urho.Vector4)">
             <summary>
             Constructs a new Vector2 from the given Vector4.
             </summary>
             <param name="v">The Vector4 to copy components from. Z and W are discarded.</param>
            </member>
        <member name="M:Urho.Vector2.Add(Urho.Vector2)">
             <summary>Add the Vector passed as parameter to this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector2.Add(Urho.Vector2@)">
             <summary>Add the Vector passed as parameter to this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector2.Sub(Urho.Vector2)">
             <summary>Subtract the Vector passed as parameter from this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector2.Sub(Urho.Vector2@)">
             <summary>Subtract the Vector passed as parameter from this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector2.Mult(System.Single)">
             <summary>Multiply this instance by a scalar.</summary>
             <param name="f">Scalar operand.</param>
            </member>
        <member name="M:Urho.Vector2.Div(System.Single)">
             <summary>Divide this instance by a scalar.</summary>
             <param name="f">Scalar operand.</param>
            </member>
        <member name="P:Urho.Vector2.Length">
             <summary>
             Gets the length (magnitude) of the vector.
             </summary>
             <see cref="P:Urho.Vector2.LengthFast" />
             <seealso cref="P:Urho.Vector2.LengthSquared" />
            </member>
        <member name="P:Urho.Vector2.LengthFast">
             <summary>
             Gets an approximation of the vector length (magnitude).
             </summary>
             <remarks>
             This property uses an approximation of the square root function to calculate vector magnitude, with
             an upper error bound of 0.001.
             </remarks>
             <see cref="P:Urho.Vector2.Length" />
             <seealso cref="P:Urho.Vector2.LengthSquared" />
            </member>
        <member name="P:Urho.Vector2.LengthSquared">
             <summary>
             Gets the square of the vector length (magnitude).
             </summary>
             <remarks>
             This property avoids the costly square root operation required by the Length property. This makes it more suitable
             for comparisons.
             </remarks>
             <see cref="P:Urho.Vector2.Length" />
             <seealso cref="P:Urho.Vector2.LengthFast" />
            </member>
        <member name="P:Urho.Vector2.PerpendicularRight">
             <summary>
             Gets the perpendicular vector on the right side of this vector.
             </summary>
            </member>
        <member name="P:Urho.Vector2.PerpendicularLeft">
             <summary>
             Gets the perpendicular vector on the left side of this vector.
             </summary>
            </member>
        <member name="M:Urho.Vector2.Normalize">
             <summary>
             Scales the Vector2 to unit length.
             </summary>
            </member>
        <member name="M:Urho.Vector2.NormalizeFast">
             <summary>
             Scales the Vector2 to approximately unit length.
             </summary>
            </member>
        <member name="M:Urho.Vector2.Scale(System.Single,System.Single)">
             <summary>
             Scales the current Vector2 by the given amounts.
             </summary>
             <param name="sx">The scale of the X component.</param>
             <param name="sy">The scale of the Y component.</param>
            </member>
        <member name="M:Urho.Vector2.Scale(Urho.Vector2)">
             <summary>Scales this instance by the given parameter.</summary>
             <param name="scale">The scaling of the individual components.</param>
            </member>
        <member name="M:Urho.Vector2.Scale(Urho.Vector2@)">
             <summary>Scales this instance by the given parameter.</summary>
             <param name="scale">The scaling of the individual components.</param>
            </member>
        <member name="F:Urho.Vector2.UnitX">
             <summary>
             Defines a unit-length Vector2 that points towards the X-axis.
             </summary>
            </member>
        <member name="F:Urho.Vector2.UnitY">
             <summary>
             Defines a unit-length Vector2 that points towards the Y-axis.
             </summary>
            </member>
        <member name="F:Urho.Vector2.Zero">
             <summary>
             Defines a zero-length Vector2.
             </summary>
            </member>
        <member name="F:Urho.Vector2.One">
             <summary>
             Defines an instance with all components set to 1.
             </summary>
            </member>
        <member name="F:Urho.Vector2.SizeInBytes">
             <summary>
             Defines the size of the Vector2 struct in bytes.
             </summary>
            </member>
        <member name="M:Urho.Vector2.Sub(Urho.Vector2,Urho.Vector2)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>Result of subtraction</returns>
            </member>
        <member name="M:Urho.Vector2.Sub(Urho.Vector2@,Urho.Vector2@,Urho.Vector2@)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">Result of subtraction</param>
            </member>
        <member name="M:Urho.Vector2.Mult(Urho.Vector2,System.Single)">
             <summary>
             Multiply a vector and a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <returns>Result of the multiplication</returns>
            </member>
        <member name="M:Urho.Vector2.Mult(Urho.Vector2@,System.Single,Urho.Vector2@)">
             <summary>
             Multiply a vector and a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <param name="result">Result of the multiplication</param>
            </member>
        <member name="M:Urho.Vector2.Div(Urho.Vector2,System.Single)">
             <summary>
             Divide a vector by a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <returns>Result of the division</returns>
            </member>
        <member name="M:Urho.Vector2.Div(Urho.Vector2@,System.Single,Urho.Vector2@)">
             <summary>
             Divide a vector by a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <param name="result">Result of the division</param>
            </member>
        <member name="M:Urho.Vector2.Add(Urho.Vector2,Urho.Vector2)">
             <summary>
             Adds two vectors.
             </summary>
             <param name="a">Left operand.</param>
             <param name="b">Right operand.</param>
             <returns>Result of operation.</returns>
            </member>
        <member name="M:Urho.Vector2.Add(Urho.Vector2@,Urho.Vector2@,Urho.Vector2@)">
             <summary>
             Adds two vectors.
             </summary>
             <param name="a">Left operand.</param>
             <param name="b">Right operand.</param>
             <param name="result">Result of operation.</param>
            </member>
        <member name="M:Urho.Vector2.Subtract(Urho.Vector2,Urho.Vector2)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>Result of subtraction</returns>
            </member>
        <member name="M:Urho.Vector2.Subtract(Urho.Vector2@,Urho.Vector2@,Urho.Vector2@)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">Result of subtraction</param>
            </member>
        <member name="M:Urho.Vector2.Multiply(Urho.Vector2,System.Single)">
             <summary>
             Multiplies a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector2.Multiply(Urho.Vector2@,System.Single,Urho.Vector2@)">
             <summary>
             Multiplies a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector2.Multiply(Urho.Vector2,Urho.Vector2)">
             <summary>
             Multiplies a vector by the components a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector2.Multiply(Urho.Vector2@,Urho.Vector2@,Urho.Vector2@)">
             <summary>
             Multiplies a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector2.Divide(Urho.Vector2,System.Single)">
             <summary>
             Divides a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector2.Divide(Urho.Vector2@,System.Single,Urho.Vector2@)">
             <summary>
             Divides a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector2.Divide(Urho.Vector2,Urho.Vector2)">
             <summary>
             Divides a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector2.Divide(Urho.Vector2@,Urho.Vector2@,Urho.Vector2@)">
             <summary>
             Divide a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector2.ComponentMin(Urho.Vector2,Urho.Vector2)">
             <summary>
             Calculate the component-wise minimum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>The component-wise minimum</returns>
            </member>
        <member name="M:Urho.Vector2.ComponentMin(Urho.Vector2@,Urho.Vector2@,Urho.Vector2@)">
             <summary>
             Calculate the component-wise minimum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">The component-wise minimum</param>
            </member>
        <member name="M:Urho.Vector2.ComponentMax(Urho.Vector2,Urho.Vector2)">
             <summary>
             Calculate the component-wise maximum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>The component-wise maximum</returns>
            </member>
        <member name="M:Urho.Vector2.ComponentMax(Urho.Vector2@,Urho.Vector2@,Urho.Vector2@)">
             <summary>
             Calculate the component-wise maximum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">The component-wise maximum</param>
            </member>
        <member name="M:Urho.Vector2.Min(Urho.Vector2,Urho.Vector2)">
             <summary>
             Returns the Vector3 with the minimum magnitude
             </summary>
             <param name="left">Left operand</param>
             <param name="right">Right operand</param>
             <returns>The minimum Vector3</returns>
            </member>
        <member name="M:Urho.Vector2.Max(Urho.Vector2,Urho.Vector2)">
             <summary>
             Returns the Vector3 with the minimum magnitude
             </summary>
             <param name="left">Left operand</param>
             <param name="right">Right operand</param>
             <returns>The minimum Vector3</returns>
            </member>
        <member name="M:Urho.Vector2.Clamp(Urho.Vector2,Urho.Vector2,Urho.Vector2)">
             <summary>
             Clamp a vector to the given minimum and maximum vectors
             </summary>
             <param name="vec">Input vector</param>
             <param name="min">Minimum vector</param>
             <param name="max">Maximum vector</param>
             <returns>The clamped vector</returns>
            </member>
        <member name="M:Urho.Vector2.Clamp(Urho.Vector2@,Urho.Vector2@,Urho.Vector2@,Urho.Vector2@)">
             <summary>
             Clamp a vector to the given minimum and maximum vectors
             </summary>
             <param name="vec">Input vector</param>
             <param name="min">Minimum vector</param>
             <param name="max">Maximum vector</param>
             <param name="result">The clamped vector</param>
            </member>
        <member name="M:Urho.Vector2.Normalize(Urho.Vector2)">
             <summary>
             Scale a vector to unit length
             </summary>
             <param name="vec">The input vector</param>
             <returns>The normalized vector</returns>
            </member>
        <member name="M:Urho.Vector2.Normalize(Urho.Vector2@,Urho.Vector2@)">
             <summary>
             Scale a vector to unit length
             </summary>
             <param name="vec">The input vector</param>
             <param name="result">The normalized vector</param>
            </member>
        <member name="M:Urho.Vector2.NormalizeFast(Urho.Vector2)">
             <summary>
             Scale a vector to approximately unit length
             </summary>
             <param name="vec">The input vector</param>
             <returns>The normalized vector</returns>
            </member>
        <member name="M:Urho.Vector2.NormalizeFast(Urho.Vector2@,Urho.Vector2@)">
             <summary>
             Scale a vector to approximately unit length
             </summary>
             <param name="vec">The input vector</param>
             <param name="result">The normalized vector</param>
            </member>
        <member name="M:Urho.Vector2.Dot(Urho.Vector2,Urho.Vector2)">
             <summary>
             Calculate the dot (scalar) product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <returns>The dot product of the two inputs</returns>
            </member>
        <member name="M:Urho.Vector2.Dot(Urho.Vector2@,Urho.Vector2@,System.Single@)">
             <summary>
             Calculate the dot (scalar) product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <param name="result">The dot product of the two inputs</param>
            </member>
        <member name="M:Urho.Vector2.Lerp(Urho.Vector2,Urho.Vector2,System.Single)">
             <summary>
             Returns a new Vector that is the linear blend of the 2 given Vectors
             </summary>
             <param name="a">First input vector</param>
             <param name="b">Second input vector</param>
             <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
             <returns>a when blend=0, b when blend=1, and a linear combination otherwise</returns>
            </member>
        <member name="M:Urho.Vector2.Lerp(Urho.Vector2@,Urho.Vector2@,System.Single,Urho.Vector2@)">
             <summary>
             Returns a new Vector that is the linear blend of the 2 given Vectors
             </summary>
             <param name="a">First input vector</param>
             <param name="b">Second input vector</param>
             <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
             <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
            </member>
        <member name="M:Urho.Vector2.BaryCentric(Urho.Vector2,Urho.Vector2,Urho.Vector2,System.Single,System.Single)">
             <summary>
             Interpolate 3 Vectors using Barycentric coordinates
             </summary>
             <param name="a">First input Vector</param>
             <param name="b">Second input Vector</param>
             <param name="c">Third input Vector</param>
             <param name="u">First Barycentric Coordinate</param>
             <param name="v">Second Barycentric Coordinate</param>
             <returns>a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</returns>
            </member>
        <member name="M:Urho.Vector2.BaryCentric(Urho.Vector2@,Urho.Vector2@,Urho.Vector2@,System.Single,System.Single,Urho.Vector2@)">
             <summary>Interpolate 3 Vectors using Barycentric coordinates</summary>
             <param name="a">First input Vector.</param>
             <param name="b">Second input Vector.</param>
             <param name="c">Third input Vector.</param>
             <param name="u">First Barycentric Coordinate.</param>
             <param name="v">Second Barycentric Coordinate.</param>
             <param name="result">Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</param>
            </member>
        <member name="M:Urho.Vector2.Angle(Urho.Vector2,Urho.Vector2)">
             <summary>
             Calculate the angle (in radians) between the two inputs
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <returns>The angle (in radians)  between the two inputs</returns>
             <remarks>Note that the returned angle is never bigger than the constant Pi.</remarks>
            </member>
        <member name="M:Urho.Vector2.Angle(Urho.Vector2@,Urho.Vector2@,System.Single@)">
             <summary>
             Calculate the angle (in radians) between the two inputs
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <param name="result">The angle (in radians) between the two inputs</param>
             <remarks>Note that the returned angle is never bigger than the constant Pi.</remarks>
            </member>
        <member name="M:Urho.Vector2.op_Addition(Urho.Vector2,Urho.Vector2)">
             <summary>
             Adds the specified instances.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>Result of addition.</returns>
            </member>
        <member name="M:Urho.Vector2.op_Subtraction(Urho.Vector2,Urho.Vector2)">
             <summary>
             Subtracts the specified instances.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>Result of subtraction.</returns>
            </member>
        <member name="M:Urho.Vector2.op_UnaryNegation(Urho.Vector2)">
             <summary>
             Negates the specified instance.
             </summary>
             <param name="vec">Operand.</param>
             <returns>Result of negation.</returns>
            </member>
        <member name="M:Urho.Vector2.op_Multiply(Urho.Vector2,System.Single)">
             <summary>
             Multiplies the specified instance by a scalar.
             </summary>
             <param name="vec">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of multiplication.</returns>
            </member>
        <member name="M:Urho.Vector2.op_Multiply(System.Single,Urho.Vector2)">
             <summary>
             Multiplies the specified instance by a scalar.
             </summary>
             <param name="scale">Left operand.</param>
             <param name="vec">Right operand.</param>
             <returns>Result of multiplication.</returns>
            </member>
        <member name="M:Urho.Vector2.op_Multiply(Urho.Vector2,Urho.Vector2)">
             <summary>
             Multiplies the specified instance by a Vector2.
             </summary>
             <param name="vec_left">Left operand.</param>
             <param name="vec_right">Right operand.</param>
             <returns>Result of multiplication.</returns>
            </member>
        <member name="M:Urho.Vector2.op_Division(Urho.Vector2,System.Single)">
             <summary>
             Divides the specified instance by a scalar.
             </summary>
             <param name="vec">Left operand</param>
             <param name="scale">Right operand</param>
             <returns>Result of the division.</returns>
            </member>
        <member name="M:Urho.Vector2.op_Equality(Urho.Vector2,Urho.Vector2)">
             <summary>
             Compares the specified instances for equality.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>True if both instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Vector2.op_Inequality(Urho.Vector2,Urho.Vector2)">
             <summary>
             Compares the specified instances for inequality.
             </summary>
             <param name="left">Left operand.</param>
             <param name="right">Right operand.</param>
             <returns>True if both instances are not equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Vector2.ToString">
             <summary>
             Returns a System.String that represents the current Vector2.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Urho.Vector2.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.Vector2.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare to.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Vector2.Equals(Urho.Vector2)">
             <summary>Indicates whether the current vector is equal to another vector.</summary>
             <param name="other">A vector to compare with this vector.</param>
             <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
            </member>
        <member name="T:Urho.Vector3">
             <summary>
             Represents a 3D vector using three single-precision floating-point numbers.
             </summary>
             <remarks>
             The Vector3 structure is suitable for interoperation with unmanaged code requiring three consecutive floats.
             </remarks>
            </member>
        <member name="F:Urho.Vector3.X">
             <summary>
             The X component of the Vector3.
             </summary>
            </member>
        <member name="F:Urho.Vector3.Y">
             <summary>
             The Y component of the Vector3.
             </summary>
            </member>
        <member name="F:Urho.Vector3.Z">
             <summary>
             The Z component of the Vector3.
             </summary>
            </member>
        <member name="M:Urho.Vector3.#ctor(System.Single,System.Single,System.Single)">
             <summary>
             Constructs a new Vector3.
             </summary>
             <param name="x">The x component of the Vector3.</param>
             <param name="y">The y component of the Vector3.</param>
             <param name="z">The z component of the Vector3.</param>
            </member>
        <member name="M:Urho.Vector3.#ctor(Urho.Vector2)">
             <summary>
             Constructs a new Vector3 from the given Vector2.
             </summary>
             <param name="v">The Vector2 to copy components from.</param>
            </member>
        <member name="M:Urho.Vector3.#ctor(Urho.Vector3)">
             <summary>
             Constructs a new Vector3 from the given Vector3.
             </summary>
             <param name="v">The Vector3 to copy components from.</param>
            </member>
        <member name="M:Urho.Vector3.#ctor(Urho.Vector4)">
             <summary>
             Constructs a new Vector3 from the given Vector4.
             </summary>
             <param name="v">The Vector4 to copy components from.</param>
            </member>
        <member name="P:Urho.Vector3.Item(System.Int32)">
             <summary>
             Gets or sets the value at the index of the Vector.
             </summary>
             <param name="index">The index of the component from the Vector.</param>
             <exception cref="T:System.IndexOutOfRangeException">Thrown if the index is less than 0 or greater than 2.</exception>
            </member>
        <member name="M:Urho.Vector3.Add(Urho.Vector3)">
             <summary>Add the Vector passed as parameter to this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector3.Add(Urho.Vector3@)">
             <summary>Add the Vector passed as parameter to this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector3.Sub(Urho.Vector3)">
             <summary>Subtract the Vector passed as parameter from this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector3.Sub(Urho.Vector3@)">
             <summary>Subtract the Vector passed as parameter from this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector3.Mult(System.Single)">
             <summary>Multiply this instance by a scalar.</summary>
             <param name="f">Scalar operand.</param>
            </member>
        <member name="M:Urho.Vector3.Div(System.Single)">
             <summary>Divide this instance by a scalar.</summary>
             <param name="f">Scalar operand.</param>
            </member>
        <member name="P:Urho.Vector3.Length">
             <summary>
             Gets the length (magnitude) of the vector.
             </summary>
             <see cref="P:Urho.Vector3.LengthFast" />
             <seealso cref="P:Urho.Vector3.LengthSquared" />
            </member>
        <member name="P:Urho.Vector3.LengthFast">
             <summary>
             Gets an approximation of the vector length (magnitude).
             </summary>
             <remarks>
             This property uses an approximation of the square root function to calculate vector magnitude, with
             an upper error bound of 0.001.
             </remarks>
             <see cref="P:Urho.Vector3.Length" />
             <seealso cref="P:Urho.Vector3.LengthSquared" />
            </member>
        <member name="P:Urho.Vector3.LengthSquared">
             <summary>
             Gets the square of the vector length (magnitude).
             </summary>
             <remarks>
             This property avoids the costly square root operation required by the Length property. This makes it more suitable
             for comparisons.
             </remarks>
             <see cref="P:Urho.Vector3.Length" />
             <seealso cref="P:Urho.Vector3.LengthFast" />
            </member>
        <member name="M:Urho.Vector3.Normalize">
             <summary>
             Scales the Vector3 to unit length.
             </summary>
            </member>
        <member name="M:Urho.Vector3.NormalizeFast">
             <summary>
             Scales the Vector3 to approximately unit length.
             </summary>
            </member>
        <member name="M:Urho.Vector3.Scale(System.Single,System.Single,System.Single)">
             <summary>
             Scales the current Vector3 by the given amounts.
             </summary>
             <param name="sx">The scale of the X component.</param>
             <param name="sy">The scale of the Y component.</param>
             <param name="sz">The scale of the Z component.</param>
            </member>
        <member name="M:Urho.Vector3.Scale(Urho.Vector3)">
             <summary>Scales this instance by the given parameter.</summary>
             <param name="scale">The scaling of the individual components.</param>
            </member>
        <member name="M:Urho.Vector3.Scale(Urho.Vector3@)">
             <summary>Scales this instance by the given parameter.</summary>
             <param name="scale">The scaling of the individual components.</param>
            </member>
        <member name="F:Urho.Vector3.UnitX">
             <summary>
             Defines a unit-length Vector3 that points towards the X-axis.
             </summary>
            </member>
        <member name="F:Urho.Vector3.UnitY">
             <summary>
             Defines a unit-length Vector3 that points towards the Y-axis.
             </summary>
            </member>
        <member name="F:Urho.Vector3.UnitZ">
             <summary>
             /// Defines a unit-length Vector3 that points towards the Z-axis.
             </summary>
            </member>
        <member name="F:Urho.Vector3.Zero">
             <summary>
             Defines a zero-length Vector3.
             </summary>
            </member>
        <member name="F:Urho.Vector3.One">
             <summary>
             Defines an instance with all components set to 1.
             </summary>
            </member>
        <member name="M:Urho.Vector3.Sub(Urho.Vector3,Urho.Vector3)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>Result of subtraction</returns>
            </member>
        <member name="M:Urho.Vector3.Sub(Urho.Vector3@,Urho.Vector3@,Urho.Vector3@)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">Result of subtraction</param>
            </member>
        <member name="M:Urho.Vector3.Mult(Urho.Vector3,System.Single)">
             <summary>
             Multiply a vector and a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <returns>Result of the multiplication</returns>
            </member>
        <member name="M:Urho.Vector3.Mult(Urho.Vector3@,System.Single,Urho.Vector3@)">
             <summary>
             Multiply a vector and a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <param name="result">Result of the multiplication</param>
            </member>
        <member name="M:Urho.Vector3.Div(Urho.Vector3,System.Single)">
             <summary>
             Divide a vector by a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <returns>Result of the division</returns>
            </member>
        <member name="M:Urho.Vector3.Div(Urho.Vector3@,System.Single,Urho.Vector3@)">
             <summary>
             Divide a vector by a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <param name="result">Result of the division</param>
            </member>
        <member name="M:Urho.Vector3.Add(Urho.Vector3,Urho.Vector3)">
             <summary>
             Adds two vectors.
             </summary>
             <param name="a">Left operand.</param>
             <param name="b">Right operand.</param>
             <returns>Result of operation.</returns>
            </member>
        <member name="M:Urho.Vector3.Add(Urho.Vector3@,Urho.Vector3@,Urho.Vector3@)">
             <summary>
             Adds two vectors.
             </summary>
             <param name="a">Left operand.</param>
             <param name="b">Right operand.</param>
             <param name="result">Result of operation.</param>
            </member>
        <member name="M:Urho.Vector3.Subtract(Urho.Vector3,Urho.Vector3)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>Result of subtraction</returns>
            </member>
        <member name="M:Urho.Vector3.Subtract(Urho.Vector3@,Urho.Vector3@,Urho.Vector3@)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">Result of subtraction</param>
            </member>
        <member name="M:Urho.Vector3.Multiply(Urho.Vector3,System.Single)">
             <summary>
             Multiplies a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector3.Multiply(Urho.Vector3@,System.Single,Urho.Vector3@)">
             <summary>
             Multiplies a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector3.Multiply(Urho.Vector3,Urho.Vector3)">
             <summary>
             Multiplies a vector by the components a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector3.Multiply(Urho.Vector3@,Urho.Vector3@,Urho.Vector3@)">
             <summary>
             Multiplies a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector3.Divide(Urho.Vector3,System.Single)">
             <summary>
             Divides a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector3.Divide(Urho.Vector3@,System.Single,Urho.Vector3@)">
             <summary>
             Divides a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector3.Divide(Urho.Vector3,Urho.Vector3)">
             <summary>
             Divides a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector3.Divide(Urho.Vector3@,Urho.Vector3@,Urho.Vector3@)">
             <summary>
             Divide a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector3.ComponentMin(Urho.Vector3,Urho.Vector3)">
             <summary>
             Calculate the component-wise minimum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>The component-wise minimum</returns>
            </member>
        <member name="M:Urho.Vector3.ComponentMin(Urho.Vector3@,Urho.Vector3@,Urho.Vector3@)">
             <summary>
             Calculate the component-wise minimum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">The component-wise minimum</param>
            </member>
        <member name="M:Urho.Vector3.ComponentMax(Urho.Vector3,Urho.Vector3)">
             <summary>
             Calculate the component-wise maximum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>The component-wise maximum</returns>
            </member>
        <member name="M:Urho.Vector3.ComponentMax(Urho.Vector3@,Urho.Vector3@,Urho.Vector3@)">
             <summary>
             Calculate the component-wise maximum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">The component-wise maximum</param>
            </member>
        <member name="M:Urho.Vector3.Min(Urho.Vector3,Urho.Vector3)">
             <summary>
             Returns the Vector3 with the minimum magnitude
             </summary>
             <param name="left">Left operand</param>
             <param name="right">Right operand</param>
             <returns>The minimum Vector3</returns>
            </member>
        <member name="M:Urho.Vector3.Max(Urho.Vector3,Urho.Vector3)">
             <summary>
             Returns the Vector3 with the minimum magnitude
             </summary>
             <param name="left">Left operand</param>
             <param name="right">Right operand</param>
             <returns>The minimum Vector3</returns>
            </member>
        <member name="M:Urho.Vector3.Clamp(Urho.Vector3,Urho.Vector3,Urho.Vector3)">
             <summary>
             Clamp a vector to the given minimum and maximum vectors
             </summary>
             <param name="vec">Input vector</param>
             <param name="min">Minimum vector</param>
             <param name="max">Maximum vector</param>
             <returns>The clamped vector</returns>
            </member>
        <member name="M:Urho.Vector3.Clamp(Urho.Vector3@,Urho.Vector3@,Urho.Vector3@,Urho.Vector3@)">
             <summary>
             Clamp a vector to the given minimum and maximum vectors
             </summary>
             <param name="vec">Input vector</param>
             <param name="min">Minimum vector</param>
             <param name="max">Maximum vector</param>
             <param name="result">The clamped vector</param>
            </member>
        <member name="M:Urho.Vector3.Normalize(Urho.Vector3)">
             <summary>
             Scale a vector to unit length
             </summary>
             <param name="vec">The input vector</param>
             <returns>The normalized vector</returns>
            </member>
        <member name="M:Urho.Vector3.Normalize(Urho.Vector3@,Urho.Vector3@)">
             <summary>
             Scale a vector to unit length
             </summary>
             <param name="vec">The input vector</param>
             <param name="result">The normalized vector</param>
            </member>
        <member name="M:Urho.Vector3.NormalizeFast(Urho.Vector3)">
             <summary>
             Scale a vector to approximately unit length
             </summary>
             <param name="vec">The input vector</param>
             <returns>The normalized vector</returns>
            </member>
        <member name="M:Urho.Vector3.NormalizeFast(Urho.Vector3@,Urho.Vector3@)">
             <summary>
             Scale a vector to approximately unit length
             </summary>
             <param name="vec">The input vector</param>
             <param name="result">The normalized vector</param>
            </member>
        <member name="M:Urho.Vector3.Dot(Urho.Vector3,Urho.Vector3)">
             <summary>
             Calculate the dot (scalar) product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <returns>The dot product of the two inputs</returns>
            </member>
        <member name="M:Urho.Vector3.Dot(Urho.Vector3@,Urho.Vector3@,System.Single@)">
             <summary>
             Calculate the dot (scalar) product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <param name="result">The dot product of the two inputs</param>
            </member>
        <member name="M:Urho.Vector3.Cross(Urho.Vector3,Urho.Vector3)">
             <summary>
             Caclulate the cross (vector) product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <returns>The cross product of the two inputs</returns>
            </member>
        <member name="M:Urho.Vector3.Cross(Urho.Vector3@,Urho.Vector3@,Urho.Vector3@)">
             <summary>
             Caclulate the cross (vector) product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <returns>The cross product of the two inputs</returns>
             <param name="result">The cross product of the two inputs</param>
            </member>
        <member name="M:Urho.Vector3.Lerp(Urho.Vector3,Urho.Vector3,System.Single)">
             <summary>
             Returns a new Vector that is the linear blend of the 2 given Vectors
             </summary>
             <param name="a">First input vector</param>
             <param name="b">Second input vector</param>
             <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
             <returns>a when blend=0, b when blend=1, and a linear combination otherwise</returns>
            </member>
        <member name="M:Urho.Vector3.Lerp(Urho.Vector3@,Urho.Vector3@,System.Single,Urho.Vector3@)">
             <summary>
             Returns a new Vector that is the linear blend of the 2 given Vectors
             </summary>
             <param name="a">First input vector</param>
             <param name="b">Second input vector</param>
             <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
             <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
            </member>
        <member name="M:Urho.Vector3.BaryCentric(Urho.Vector3,Urho.Vector3,Urho.Vector3,System.Single,System.Single)">
             <summary>
             Interpolate 3 Vectors using Barycentric coordinates
             </summary>
             <param name="a">First input Vector</param>
             <param name="b">Second input Vector</param>
             <param name="c">Third input Vector</param>
             <param name="u">First Barycentric Coordinate</param>
             <param name="v">Second Barycentric Coordinate</param>
             <returns>a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</returns>
            </member>
        <member name="M:Urho.Vector3.BaryCentric(Urho.Vector3@,Urho.Vector3@,Urho.Vector3@,System.Single,System.Single,Urho.Vector3@)">
             <summary>Interpolate 3 Vectors using Barycentric coordinates</summary>
             <param name="a">First input Vector.</param>
             <param name="b">Second input Vector.</param>
             <param name="c">Third input Vector.</param>
             <param name="u">First Barycentric Coordinate.</param>
             <param name="v">Second Barycentric Coordinate.</param>
             <param name="result">Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</param>
            </member>
        <member name="M:Urho.Vector3.TransformVector(Urho.Vector3,Urho.Matrix4)">
             <summary>Transform a direction vector by the given Matrix
             Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
             </summary>
             <param name="vec">The vector to transform</param>
             <param name="mat">The desired transformation</param>
             <returns>The transformed vector</returns>
            </member>
        <member name="M:Urho.Vector3.TransformVector(Urho.Vector3@,Urho.Matrix4@,Urho.Vector3@)">
             <summary>Transform a direction vector by the given Matrix
             Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
             </summary>
             <param name="vec">The vector to transform</param>
             <param name="mat">The desired transformation</param>
             <param name="result">The transformed vector</param>
            </member>
        <member name="M:Urho.Vector3.TransformNormal(Urho.Vector3,Urho.Matrix4)">
             <summary>Transform a Normal by the given Matrix</summary>
             <remarks>
             This calculates the inverse of the given matrix, use TransformNormalInverse if you
             already have the inverse to avoid this extra calculation
             </remarks>
             <param name="norm">The normal to transform</param>
             <param name="mat">The desired transformation</param>
             <returns>The transformed normal</returns>
            </member>
        <member name="M:Urho.Vector3.TransformNormal(Urho.Vector3@,Urho.Matrix4@,Urho.Vector3@)">
             <summary>Transform a Normal by the given Matrix</summary>
             <remarks>
             This calculates the inverse of the given matrix, use TransformNormalInverse if you
             already have the inverse to avoid this extra calculation
             </remarks>
             <param name="norm">The normal to transform</param>
             <param name="mat">The desired transformation</param>
             <param name="result">The transformed normal</param>
            </member>
        <member name="M:Urho.Vector3.TransformNormalInverse(Urho.Vector3,Urho.Matrix4)">
             <summary>Transform a Normal by the (transpose of the) given Matrix</summary>
             <remarks>
             This version doesn't calculate the inverse matrix.
             Use this version if you already have the inverse of the desired transform to hand
             </remarks>
             <param name="norm">The normal to transform</param>
             <param name="invMat">The inverse of the desired transformation</param>
             <returns>The transformed normal</returns>
            </member>
        <member name="M:Urho.Vector3.TransformNormalInverse(Urho.Vector3@,Urho.Matrix4@,Urho.Vector3@)">
             <summary>Transform a Normal by the (transpose of the) given Matrix</summary>
             <remarks>
             This version doesn't calculate the inverse matrix.
             Use this version if you already have the inverse of the desired transform to hand
             </remarks>
             <param name="norm">The normal to transform</param>
             <param name="invMat">The inverse of the desired transformation</param>
             <param name="result">The transformed normal</param>
            </member>
        <member name="M:Urho.Vector3.TransformPosition(Urho.Vector3,Urho.Matrix4)">
             <summary>Transform a Position by the given Matrix</summary>
             <param name="pos">The position to transform</param>
             <param name="mat">The desired transformation</param>
             <returns>The transformed position</returns>
            </member>
        <member name="M:Urho.Vector3.TransformPosition(Urho.Vector3@,Urho.Matrix4@,Urho.Vector3@)">
             <summary>Transform a Position by the given Matrix</summary>
             <param name="pos">The position to transform</param>
             <param name="mat">The desired transformation</param>
             <param name="result">The transformed position</param>
            </member>
        <member name="M:Urho.Vector3.Transform(Urho.Vector3,Urho.Matrix4)">
             <summary>Transform a Vector by the given Matrix</summary>
             <param name="vec">The vector to transform</param>
             <param name="mat">The desired transformation</param>
             <returns>The transformed vector</returns>
            </member>
        <member name="M:Urho.Vector3.Transform(Urho.Vector3@,Urho.Matrix4@,Urho.Vector4@)">
             <summary>Transform a Vector by the given Matrix</summary>
             <param name="vec">The vector to transform</param>
             <param name="mat">The desired transformation</param>
             <param name="result">The transformed vector</param>
            </member>
        <member name="M:Urho.Vector3.TransformPerspective(Urho.Vector3,Urho.Matrix4)">
             <summary>Transform a Vector3 by the given Matrix, and project the resulting Vector4 back to a Vector3</summary>
             <param name="vec">The vector to transform</param>
             <param name="mat">The desired transformation</param>
             <returns>The transformed vector</returns>
            </member>
        <member name="M:Urho.Vector3.TransformPerspective(Urho.Vector3@,Urho.Matrix4@,Urho.Vector3@)">
             <summary>Transform a Vector3 by the given Matrix, and project the resulting Vector4 back to a Vector3</summary>
             <param name="vec">The vector to transform</param>
             <param name="mat">The desired transformation</param>
             <param name="result">The transformed vector</param>
            </member>
        <member name="M:Urho.Vector3.CalculateAngle(Urho.Vector3,Urho.Vector3)">
             <summary>
             Calculates the angle (in radians) between two vectors.
             </summary>
             <param name="first">The first vector.</param>
             <param name="second">The second vector.</param>
             <returns>Angle (in radians) between the vectors.</returns>
             <remarks>Note that the returned angle is never bigger than the constant Pi.</remarks>
            </member>
        <member name="M:Urho.Vector3.CalculateAngle(Urho.Vector3@,Urho.Vector3@,System.Single@)">
             <summary>Calculates the angle (in radians) between two vectors.</summary>
             <param name="first">The first vector.</param>
             <param name="second">The second vector.</param>
             <param name="result">Angle (in radians) between the vectors.</param>
             <remarks>Note that the returned angle is never bigger than the constant Pi.</remarks>
            </member>
        <member name="P:Urho.Vector3.Xy">
             <summary>
             Gets or sets an OpenTK.Vector2 with the X and Y components of this instance.
             </summary>
            </member>
        <member name="M:Urho.Vector3.op_Addition(Urho.Vector3,Urho.Vector3)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector3.op_Subtraction(Urho.Vector3,Urho.Vector3)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector3.op_UnaryNegation(Urho.Vector3)">
             <summary>
             Negates an instance.
             </summary>
             <param name="vec">The instance.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector3.op_Multiply(Urho.Vector3,System.Single)">
             <summary>
             Multiplies an instance by a scalar.
             </summary>
             <param name="vec">The instance.</param>
             <param name="scale">The scalar.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector3.op_Multiply(System.Single,Urho.Vector3)">
             <summary>
             Multiplies an instance by a scalar.
             </summary>
             <param name="scale">The scalar.</param>
             <param name="vec">The instance.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector3.op_Division(Urho.Vector3,System.Single)">
             <summary>
             Divides an instance by a scalar.
             </summary>
             <param name="vec">The instance.</param>
             <param name="scale">The scalar.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector3.op_Equality(Urho.Vector3,Urho.Vector3)">
             <summary>
             Compares two instances for equality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left equals right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Vector3.op_Inequality(Urho.Vector3,Urho.Vector3)">
             <summary>
             Compares two instances for inequality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left does not equa lright; false otherwise.</returns>
            </member>
        <member name="M:Urho.Vector3.ToString">
             <summary>
             Returns a System.String that represents the current Vector3.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Urho.Vector3.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.Vector3.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare to.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Vector3.Equals(Urho.Vector3)">
             <summary>Indicates whether the current vector is equal to another vector.</summary>
             <param name="other">A vector to compare with this vector.</param>
             <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
            </member>
        <member name="T:Urho.Vector4">
             <summary>Represents a 4D vector using four single-precision floating-point numbers.</summary>
             <remarks>
             The Vector4 structure is suitable for interoperation with unmanaged code requiring four consecutive floats.
             </remarks>
            </member>
        <member name="F:Urho.Vector4.X">
             <summary>
             The X component of the Vector4.
             </summary>
            </member>
        <member name="F:Urho.Vector4.Y">
             <summary>
             The Y component of the Vector4.
             </summary>
            </member>
        <member name="F:Urho.Vector4.Z">
             <summary>
             The Z component of the Vector4.
             </summary>
            </member>
        <member name="F:Urho.Vector4.W">
             <summary>
             The W component of the Vector4.
             </summary>
            </member>
        <member name="F:Urho.Vector4.UnitX">
             <summary>
             Defines a unit-length Vector4 that points towards the X-axis.
             </summary>
            </member>
        <member name="F:Urho.Vector4.UnitY">
             <summary>
             Defines a unit-length Vector4 that points towards the Y-axis.
             </summary>
            </member>
        <member name="F:Urho.Vector4.UnitZ">
             <summary>
             Defines a unit-length Vector4 that points towards the Z-axis.
             </summary>
            </member>
        <member name="F:Urho.Vector4.UnitW">
             <summary>
             Defines a unit-length Vector4 that points towards the W-axis.
             </summary>
            </member>
        <member name="F:Urho.Vector4.Zero">
             <summary>
             Defines a zero-length Vector4.
             </summary>
            </member>
        <member name="F:Urho.Vector4.One">
             <summary>
             Defines an instance with all components set to 1.
             </summary>
            </member>
        <member name="F:Urho.Vector4.SizeInBytes">
             <summary>
             Defines the size of the Vector4 struct in bytes.
             </summary>
            </member>
        <member name="M:Urho.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Constructs a new Vector4.
             </summary>
             <param name="x">The x component of the Vector4.</param>
             <param name="y">The y component of the Vector4.</param>
             <param name="z">The z component of the Vector4.</param>
             <param name="w">The z component of the Vector4.</param>
            </member>
        <member name="M:Urho.Vector4.#ctor(Urho.Vector2)">
             <summary>
             Constructs a new Vector4 from the given Vector2.
             </summary>
             <param name="v">The Vector2 to copy components from.</param>
            </member>
        <member name="M:Urho.Vector4.#ctor(Urho.Vector3)">
             <summary>
             Constructs a new Vector4 from the given Vector3.
             </summary>
             <param name="v">The Vector3 to copy components from.</param>
            </member>
        <member name="M:Urho.Vector4.#ctor(Urho.Vector3,System.Single)">
             <summary>
             Constructs a new Vector4 from the specified Vector3 and W component.
             </summary>
             <param name="v">The Vector3 to copy components from.</param>
             <param name="w">The W component of the new Vector4.</param>
            </member>
        <member name="M:Urho.Vector4.#ctor(Urho.Vector4)">
             <summary>
             Constructs a new Vector4 from the given Vector4.
             </summary>
             <param name="v">The Vector4 to copy components from.</param>
            </member>
        <member name="P:Urho.Vector4.Item(System.Int32)">
             <summary>
             Gets or sets the value at the index of the Vector.
             </summary>
             <param name="index">The index of the component from the Vector.</param>
             <exception cref="T:System.IndexOutOfRangeException">Thrown if the index is less than 0 or greater than 3.</exception>
            </member>
        <member name="M:Urho.Vector4.Add(Urho.Vector4)">
             <summary>Add the Vector passed as parameter to this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector4.Add(Urho.Vector4@)">
             <summary>Add the Vector passed as parameter to this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector4.Sub(Urho.Vector4)">
             <summary>Subtract the Vector passed as parameter from this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector4.Sub(Urho.Vector4@)">
             <summary>Subtract the Vector passed as parameter from this instance.</summary>
             <param name="right">Right operand. This parameter is only read from.</param>
            </member>
        <member name="M:Urho.Vector4.Mult(System.Single)">
             <summary>Multiply this instance by a scalar.</summary>
             <param name="f">Scalar operand.</param>
            </member>
        <member name="M:Urho.Vector4.Div(System.Single)">
             <summary>Divide this instance by a scalar.</summary>
             <param name="f">Scalar operand.</param>
            </member>
        <member name="P:Urho.Vector4.Length">
             <summary>
             Gets the length (magnitude) of the vector.
             </summary>
             <see cref="P:Urho.Vector4.LengthFast" />
             <seealso cref="P:Urho.Vector4.LengthSquared" />
            </member>
        <member name="P:Urho.Vector4.LengthFast">
             <summary>
             Gets an approximation of the vector length (magnitude).
             </summary>
             <remarks>
             This property uses an approximation of the square root function to calculate vector magnitude, with
             an upper error bound of 0.001.
             </remarks>
             <see cref="P:Urho.Vector4.Length" />
             <seealso cref="P:Urho.Vector4.LengthSquared" />
            </member>
        <member name="P:Urho.Vector4.LengthSquared">
             <summary>
             Gets the square of the vector length (magnitude).
             </summary>
             <remarks>
             This property avoids the costly square root operation required by the Length property. This makes it more suitable
             for comparisons.
             </remarks>
             <see cref="P:Urho.Vector4.Length" />
             <seealso cref="P:Urho.Vector4.LengthFast" />
            </member>
        <member name="M:Urho.Vector4.Normalize">
             <summary>
             Scales the Vector4 to unit length.
             </summary>
            </member>
        <member name="M:Urho.Vector4.NormalizeFast">
             <summary>
             Scales the Vector4 to approximately unit length.
             </summary>
            </member>
        <member name="M:Urho.Vector4.Scale(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Scales the current Vector4 by the given amounts.
             </summary>
             <param name="sx">The scale of the X component.</param>
             <param name="sy">The scale of the Y component.</param>
             <param name="sz">The scale of the Z component.</param>
             <param name="sw">The scale of the Z component.</param>
            </member>
        <member name="M:Urho.Vector4.Scale(Urho.Vector4)">
             <summary>Scales this instance by the given parameter.</summary>
             <param name="scale">The scaling of the individual components.</param>
            </member>
        <member name="M:Urho.Vector4.Scale(Urho.Vector4@)">
             <summary>Scales this instance by the given parameter.</summary>
             <param name="scale">The scaling of the individual components.</param>
            </member>
        <member name="M:Urho.Vector4.Sub(Urho.Vector4,Urho.Vector4)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>Result of subtraction</returns>
            </member>
        <member name="M:Urho.Vector4.Sub(Urho.Vector4@,Urho.Vector4@,Urho.Vector4@)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">Result of subtraction</param>
            </member>
        <member name="M:Urho.Vector4.Mult(Urho.Vector4,System.Single)">
             <summary>
             Multiply a vector and a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <returns>Result of the multiplication</returns>
            </member>
        <member name="M:Urho.Vector4.Mult(Urho.Vector4@,System.Single,Urho.Vector4@)">
             <summary>
             Multiply a vector and a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <param name="result">Result of the multiplication</param>
            </member>
        <member name="M:Urho.Vector4.Div(Urho.Vector4,System.Single)">
             <summary>
             Divide a vector by a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <returns>Result of the division</returns>
            </member>
        <member name="M:Urho.Vector4.Div(Urho.Vector4@,System.Single,Urho.Vector4@)">
             <summary>
             Divide a vector by a scalar
             </summary>
             <param name="a">Vector operand</param>
             <param name="f">Scalar operand</param>
             <param name="result">Result of the division</param>
            </member>
        <member name="M:Urho.Vector4.Add(Urho.Vector4,Urho.Vector4)">
             <summary>
             Adds two vectors.
             </summary>
             <param name="a">Left operand.</param>
             <param name="b">Right operand.</param>
             <returns>Result of operation.</returns>
            </member>
        <member name="M:Urho.Vector4.Add(Urho.Vector4@,Urho.Vector4@,Urho.Vector4@)">
             <summary>
             Adds two vectors.
             </summary>
             <param name="a">Left operand.</param>
             <param name="b">Right operand.</param>
             <param name="result">Result of operation.</param>
            </member>
        <member name="M:Urho.Vector4.Subtract(Urho.Vector4,Urho.Vector4)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>Result of subtraction</returns>
            </member>
        <member name="M:Urho.Vector4.Subtract(Urho.Vector4@,Urho.Vector4@,Urho.Vector4@)">
             <summary>
             Subtract one Vector from another
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">Result of subtraction</param>
            </member>
        <member name="M:Urho.Vector4.Multiply(Urho.Vector4,System.Single)">
             <summary>
             Multiplies a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector4.Multiply(Urho.Vector4@,System.Single,Urho.Vector4@)">
             <summary>
             Multiplies a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector4.Multiply(Urho.Vector4,Urho.Vector4)">
             <summary>
             Multiplies a vector by the components a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector4.Multiply(Urho.Vector4@,Urho.Vector4@,Urho.Vector4@)">
             <summary>
             Multiplies a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector4.Divide(Urho.Vector4,System.Single)">
             <summary>
             Divides a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector4.Divide(Urho.Vector4@,System.Single,Urho.Vector4@)">
             <summary>
             Divides a vector by a scalar.
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector4.Divide(Urho.Vector4,Urho.Vector4)">
             <summary>
             Divides a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <returns>Result of the operation.</returns>
            </member>
        <member name="M:Urho.Vector4.Divide(Urho.Vector4@,Urho.Vector4@,Urho.Vector4@)">
             <summary>
             Divide a vector by the components of a vector (scale).
             </summary>
             <param name="vector">Left operand.</param>
             <param name="scale">Right operand.</param>
             <param name="result">Result of the operation.</param>
            </member>
        <member name="M:Urho.Vector4.Min(Urho.Vector4,Urho.Vector4)">
             <summary>
             Calculate the component-wise minimum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>The component-wise minimum</returns>
            </member>
        <member name="M:Urho.Vector4.Min(Urho.Vector4@,Urho.Vector4@,Urho.Vector4@)">
             <summary>
             Calculate the component-wise minimum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">The component-wise minimum</param>
            </member>
        <member name="M:Urho.Vector4.Max(Urho.Vector4,Urho.Vector4)">
             <summary>
             Calculate the component-wise maximum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <returns>The component-wise maximum</returns>
            </member>
        <member name="M:Urho.Vector4.Max(Urho.Vector4@,Urho.Vector4@,Urho.Vector4@)">
             <summary>
             Calculate the component-wise maximum of two vectors
             </summary>
             <param name="a">First operand</param>
             <param name="b">Second operand</param>
             <param name="result">The component-wise maximum</param>
            </member>
        <member name="M:Urho.Vector4.Clamp(Urho.Vector4,Urho.Vector4,Urho.Vector4)">
             <summary>
             Clamp a vector to the given minimum and maximum vectors
             </summary>
             <param name="vec">Input vector</param>
             <param name="min">Minimum vector</param>
             <param name="max">Maximum vector</param>
             <returns>The clamped vector</returns>
            </member>
        <member name="M:Urho.Vector4.Clamp(Urho.Vector4@,Urho.Vector4@,Urho.Vector4@,Urho.Vector4@)">
             <summary>
             Clamp a vector to the given minimum and maximum vectors
             </summary>
             <param name="vec">Input vector</param>
             <param name="min">Minimum vector</param>
             <param name="max">Maximum vector</param>
             <param name="result">The clamped vector</param>
            </member>
        <member name="M:Urho.Vector4.Normalize(Urho.Vector4)">
             <summary>
             Scale a vector to unit length
             </summary>
             <param name="vec">The input vector</param>
             <returns>The normalized vector</returns>
            </member>
        <member name="M:Urho.Vector4.Normalize(Urho.Vector4@,Urho.Vector4@)">
             <summary>
             Scale a vector to unit length
             </summary>
             <param name="vec">The input vector</param>
             <param name="result">The normalized vector</param>
            </member>
        <member name="M:Urho.Vector4.NormalizeFast(Urho.Vector4)">
             <summary>
             Scale a vector to approximately unit length
             </summary>
             <param name="vec">The input vector</param>
             <returns>The normalized vector</returns>
            </member>
        <member name="M:Urho.Vector4.NormalizeFast(Urho.Vector4@,Urho.Vector4@)">
             <summary>
             Scale a vector to approximately unit length
             </summary>
             <param name="vec">The input vector</param>
             <param name="result">The normalized vector</param>
            </member>
        <member name="M:Urho.Vector4.Dot(Urho.Vector4,Urho.Vector4)">
             <summary>
             Calculate the dot product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <returns>The dot product of the two inputs</returns>
            </member>
        <member name="M:Urho.Vector4.Dot(Urho.Vector4@,Urho.Vector4@,System.Single@)">
             <summary>
             Calculate the dot product of two vectors
             </summary>
             <param name="left">First operand</param>
             <param name="right">Second operand</param>
             <param name="result">The dot product of the two inputs</param>
            </member>
        <member name="M:Urho.Vector4.Lerp(Urho.Vector4,Urho.Vector4,System.Single)">
             <summary>
             Returns a new Vector that is the linear blend of the 2 given Vectors
             </summary>
             <param name="a">First input vector</param>
             <param name="b">Second input vector</param>
             <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
             <returns>a when blend=0, b when blend=1, and a linear combination otherwise</returns>
            </member>
        <member name="M:Urho.Vector4.Lerp(Urho.Vector4@,Urho.Vector4@,System.Single,Urho.Vector4@)">
             <summary>
             Returns a new Vector that is the linear blend of the 2 given Vectors
             </summary>
             <param name="a">First input vector</param>
             <param name="b">Second input vector</param>
             <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
             <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
            </member>
        <member name="M:Urho.Vector4.BaryCentric(Urho.Vector4,Urho.Vector4,Urho.Vector4,System.Single,System.Single)">
             <summary>
             Interpolate 3 Vectors using Barycentric coordinates
             </summary>
             <param name="a">First input Vector</param>
             <param name="b">Second input Vector</param>
             <param name="c">Third input Vector</param>
             <param name="u">First Barycentric Coordinate</param>
             <param name="v">Second Barycentric Coordinate</param>
             <returns>a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</returns>
            </member>
        <member name="M:Urho.Vector4.BaryCentric(Urho.Vector4@,Urho.Vector4@,Urho.Vector4@,System.Single,System.Single,Urho.Vector4@)">
             <summary>Interpolate 3 Vectors using Barycentric coordinates</summary>
             <param name="a">First input Vector.</param>
             <param name="b">Second input Vector.</param>
             <param name="c">Third input Vector.</param>
             <param name="u">First Barycentric Coordinate.</param>
             <param name="v">Second Barycentric Coordinate.</param>
             <param name="result">Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</param>
            </member>
        <member name="M:Urho.Vector4.Transform(Urho.Vector4,Urho.Matrix4)">
             <summary>Transform a Vector by the given Matrix</summary>
             <param name="vec">The vector to transform</param>
             <param name="mat">The desired transformation</param>
             <returns>The transformed vector</returns>
            </member>
        <member name="M:Urho.Vector4.Transform(Urho.Vector4@,Urho.Matrix4@,Urho.Vector4@)">
             <summary>Transform a Vector by the given Matrix</summary>
             <param name="vec">The vector to transform</param>
             <param name="mat">The desired transformation</param>
             <param name="result">The transformed vector</param>
            </member>
        <member name="P:Urho.Vector4.Xy">
             <summary>
             Gets or sets an OpenTK.Vector2 with the X and Y components of this instance.
             </summary>
            </member>
        <member name="P:Urho.Vector4.Xyz">
             <summary>
             Gets or sets an OpenTK.Vector3 with the X, Y and Z components of this instance.
             </summary>
            </member>
        <member name="M:Urho.Vector4.op_Addition(Urho.Vector4,Urho.Vector4)">
             <summary>
             Adds two instances.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector4.op_Subtraction(Urho.Vector4,Urho.Vector4)">
             <summary>
             Subtracts two instances.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector4.op_UnaryNegation(Urho.Vector4)">
             <summary>
             Negates an instance.
             </summary>
             <param name="vec">The instance.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector4.op_Multiply(Urho.Vector4,System.Single)">
             <summary>
             Multiplies an instance by a scalar.
             </summary>
             <param name="vec">The instance.</param>
             <param name="scale">The scalar.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector4.op_Multiply(System.Single,Urho.Vector4)">
             <summary>
             Multiplies an instance by a scalar.
             </summary>
             <param name="scale">The scalar.</param>
             <param name="vec">The instance.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector4.op_Division(Urho.Vector4,System.Single)">
             <summary>
             Divides an instance by a scalar.
             </summary>
             <param name="vec">The instance.</param>
             <param name="scale">The scalar.</param>
             <returns>The result of the calculation.</returns>
            </member>
        <member name="M:Urho.Vector4.op_Equality(Urho.Vector4,Urho.Vector4)">
             <summary>
             Compares two instances for equality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left equals right; false otherwise.</returns>
            </member>
        <member name="M:Urho.Vector4.op_Inequality(Urho.Vector4,Urho.Vector4)">
             <summary>
             Compares two instances for inequality.
             </summary>
             <param name="left">The first instance.</param>
             <param name="right">The second instance.</param>
             <returns>True, if left does not equa lright; false otherwise.</returns>
            </member>
        <member name="M:Urho.Vector4.op_Explicit(Urho.Vector4)~System.Single*">
             <summary>
             Returns a pointer to the first element of the specified instance.
             </summary>
             <param name="v">The instance.</param>
             <returns>A pointer to the first element of v.</returns>
            </member>
        <member name="M:Urho.Vector4.op_Explicit(Urho.Vector4)~System.IntPtr">
             <summary>
             Returns a pointer to the first element of the specified instance.
             </summary>
             <param name="v">The instance.</param>
             <returns>A pointer to the first element of v.</returns>
            </member>
        <member name="M:Urho.Vector4.ToString">
             <summary>
             Returns a System.String that represents the current Vector4.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Urho.Vector4.GetHashCode">
             <summary>
             Returns the hashcode for this instance.
             </summary>
             <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
            </member>
        <member name="M:Urho.Vector4.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <param name="obj">The object to compare to.</param>
             <returns>True if the instances are equal; false otherwise.</returns>
            </member>
        <member name="M:Urho.Vector4.Equals(Urho.Vector4)">
             <summary>Indicates whether the current vector is equal to another vector.</summary>
             <param name="other">A vector to compare with this vector.</param>
             <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
            </member>
        <member name="M:Urho.SplineMath.CardinalSplineAt(Urho.Vector2,Urho.Vector2,Urho.Vector2,Urho.Vector2,System.Single,System.Single)">
             <summary>
             See http://en.wikipedia.org/wiki/Cubic_Hermite_spline#Cardinal_spline
             </summary>
             <param name="p0">Control point 1</param>
             <param name="p1">Control point 2</param>
             <param name="p2">Control point 3</param>
             <param name="p3">Control point 4</param>
             <param name="tension"> The parameter c is a tension parameter that must be in the interval (0,1). In some sense, this can be interpreted as the "length" of the tangent. c=1 will yield all zero tangents, and c=0 yields a Catmull�Rom spline.</param>
             <param name="t">Time along the spline</param>
             <returns>The point along the spline for the given time (t)</returns>
            </member>
        <member name="T:Urho.Resources.XmlComponentSerializer">
             <summary>
             XMLElement based implementation of IComponentSerializer
             </summary>
            </member>
        <member name="T:Urho.RefCountedCache">
             <summary>
             </summary>
            </member>
        <member name="M:Urho.ReferenceHolder`1.MakeStrong">
             <summary>
             Change Weak to Strong 
             </summary>
            </member>
        <member name="M:Urho.ReferenceHolder`1.MakeWeak">
             <summary>
             Change Strong to Weak
             </summary>
            </member>
        <member name="M:Urho.Runtime.OnNativeCallback(Urho.CallbackType,System.IntPtr,System.IntPtr,System.Int32,System.String)">
             <summary>
             This method is called by RefCounted::~RefCounted or RefCounted::AddRef
             </summary>
            </member>
        <member name="T:Urho.Animatable">
             <summary>
             Base class for animatable object, an animatable object can be set animation on it's attributes, or can be set an object animation to it.
             </summary>
            </member>
        <member name="M:Urho.Animatable.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Animatable.LoadXml(Urho.Resources.XmlElement)">
             <summary>
             Load from XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Animatable.SaveXml(Urho.Resources.XmlElement)">
             <summary>
             Save as XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Animatable.SetAnimationEnabled(System.Boolean)">
             <summary>
             Set automatic update of animation, default true.
             
             </summary>
            </member>
        <member name="M:Urho.Animatable.SetAnimationTime(System.Single)">
             <summary>
             Set time position of all attribute animations or an object animation manually. Automatic update should be disabled in this case.
             </summary>
            </member>
        <member name="M:Urho.Animatable.SetObjectAnimation(Urho.ObjectAnimation)">
             <summary>
             Set object animation.
             
             </summary>
            </member>
        <member name="M:Urho.Animatable.SetAttributeAnimation(System.String,Urho.ValueAnimation,Urho.WrapMode,System.Single)">
             <summary>
             Set attribute animation.
             </summary>
            </member>
        <member name="M:Urho.Animatable.SetAttributeAnimationWrapMode(System.String,Urho.WrapMode)">
             <summary>
             Set attribute animation wrap mode.
             </summary>
            </member>
        <member name="M:Urho.Animatable.SetAttributeAnimationSpeed(System.String,System.Single)">
             <summary>
             Set attribute animation speed.
             </summary>
            </member>
        <member name="M:Urho.Animatable.SetAttributeAnimationTime(System.String,System.Single)">
             <summary>
             Set attribute animation time position manually. Automatic update should be disabled in this case.
             </summary>
            </member>
        <member name="M:Urho.Animatable.RemoveObjectAnimation">
             <summary>
             Remove object animation. Same as calling SetObjectAnimation with a null pointer.
             </summary>
            </member>
        <member name="M:Urho.Animatable.RemoveAttributeAnimation(System.String)">
             <summary>
             Remove attribute animation. Same as calling SetAttributeAnimation with a null pointer.
             </summary>
            </member>
        <member name="M:Urho.Animatable.GetAnimationEnabled">
             <summary>
             Return animation enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Animatable.GetObjectAnimation">
             <summary>
             Return object animation.
             
             </summary>
            </member>
        <member name="M:Urho.Animatable.GetAttributeAnimation(System.String)">
             <summary>
             Return attribute animation.
             </summary>
            </member>
        <member name="M:Urho.Animatable.GetAttributeAnimationWrapMode(System.String)">
             <summary>
             Return attribute animation wrap mode.
             </summary>
            </member>
        <member name="M:Urho.Animatable.GetAttributeAnimationSpeed(System.String)">
             <summary>
             Return attribute animation speed.
             </summary>
            </member>
        <member name="M:Urho.Animatable.GetAttributeAnimationTime(System.String)">
             <summary>
             Return attribute animation time position.
             </summary>
            </member>
        <member name="M:Urho.Animatable.GetObjectAnimationAttr">
             <summary>
             Return object animation attribute.
             </summary>
            </member>
        <member name="P:Urho.Animatable.AnimationEnabled">
             <summary>
             Return animation enabled.
             
             Or
             Set automatic update of animation, default true.
             
             </summary>
            </member>
        <member name="P:Urho.Animatable.ObjectAnimation">
             <summary>
             Return object animation.
             
             Or
             Set object animation.
             
             </summary>
            </member>
        <member name="P:Urho.Animatable.ObjectAnimationAttr">
             <summary>
             Return object animation attribute.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.AnimatedSprite2D">
             <summary>
             Animated sprite component, it uses to play animation created by Spine (http://www.esotericsoftware.com) and Spriter (http://www.brashmonkey.com/).
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.SetAnimationSet(Urho.Urho2D.AnimationSet2D)">
             <summary>
             Set animation set.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.SetEntity(System.String)">
             <summary>
             Set entity name (skin name for spine, entity name for spriter).
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.SetAnimation(System.String,Urho.Urho2D.LoopMode2D)">
             <summary>
             Set animation by name and loop mode.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.SetLoopMode(Urho.Urho2D.LoopMode2D)">
             <summary>
             Set loop mode.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.SetSpeed(System.Single)">
             <summary>
             Set speed.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.GetAnimationSet">
             <summary>
             Return animation.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.GetEntity">
             <summary>
             Return entity name.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.GetAnimation">
             <summary>
             Return animation name.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.GetLoopMode">
             <summary>
             Return loop mode.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.GetSpeed">
             <summary>
             Return speed.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.GetAnimationSetAttr">
             <summary>
             Return animation set attribute.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimatedSprite2D.SetAnimationAttr(System.String)">
             <summary>
             Set animation by name.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.AnimatedSprite2D.AnimationSet">
             <summary>
             Return animation.
             
             Or
             Set animation set.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.AnimatedSprite2D.Entity">
             <summary>
             Return entity name.
             
             Or
             Set entity name (skin name for spine, entity name for spriter).
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.AnimatedSprite2D.LoopMode">
             <summary>
             Return loop mode.
             
             Or
             Set loop mode.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.AnimatedSprite2D.Speed">
             <summary>
             Return speed.
             
             Or
             Set speed.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.AnimatedSprite2D.Animation">
             <summary>
             Return animation name.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.AnimatedSprite2D.AnimationSetAttr">
             <summary>
             Return animation set attribute.
             </summary>
            </member>
        <member name="T:Urho.Animation">
             <summary>
             Skeletal animation resource.
             </summary>
            </member>
        <member name="M:Urho.Animation.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Animation.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Animation.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Animation.Save(Urho.IO.File)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Animation.Save(Urho.MemoryBuffer)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Animation.SetAnimationName(System.String)">
             <summary>
             Set animation name.
             
             </summary>
            </member>
        <member name="M:Urho.Animation.SetLength(System.Single)">
             <summary>
             Set animation length.
             
             </summary>
            </member>
        <member name="M:Urho.Animation.CreateTrack(System.String)">
             <summary>
             Create and return a track by name. If track by same name already exists, returns the existing.
             </summary>
            </member>
        <member name="M:Urho.Animation.RemoveTrack(System.String)">
             <summary>
             Remove a track by name. Return true if was found and removed successfully. This is unsafe if the animation is currently used in playback.
             </summary>
            </member>
        <member name="M:Urho.Animation.RemoveAllTracks">
             <summary>
             Remove all tracks. This is unsafe if the animation is currently used in playback.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,Urho.Vector3)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,Urho.IntRect)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,Urho.Color)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,Urho.Vector2)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,Urho.Vector4)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,Urho.IntVector2)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,Urho.Quaternion)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,Urho.Matrix4)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,Urho.Matrix3)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,Urho.Matrix3x4)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,System.Int32)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,System.Single)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,System.String)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.AddTrigger(System.Single,System.Boolean,System.Boolean)">
             <summary>
             Add a trigger point.
             </summary>
            </member>
        <member name="M:Urho.Animation.RemoveTrigger(System.UInt32)">
             <summary>
             Remove a trigger point by index.
             </summary>
            </member>
        <member name="M:Urho.Animation.RemoveAllTriggers">
             <summary>
             Remove all trigger points.
             </summary>
            </member>
        <member name="M:Urho.Animation.SetNumTriggers(System.UInt32)">
             <summary>
             Resize trigger point vector.
             
             </summary>
            </member>
        <member name="M:Urho.Animation.Clone(System.String)">
             <summary>
             Clone the animation.
             </summary>
            </member>
        <member name="M:Urho.Animation.GetAnimationName">
             <summary>
             Return animation name.
             
             </summary>
            </member>
        <member name="M:Urho.Animation.GetAnimationNameHash">
             <summary>
             Return animation name hash.
             </summary>
            </member>
        <member name="M:Urho.Animation.GetLength">
             <summary>
             Return animation length.
             
             </summary>
            </member>
        <member name="M:Urho.Animation.GetNumTracks">
             <summary>
             Return number of animation tracks.
             
             </summary>
            </member>
        <member name="M:Urho.Animation.GetTrack(System.UInt32)">
             <summary>
             Return animation track by index.
             </summary>
            </member>
        <member name="M:Urho.Animation.GetTrack(System.String)">
             <summary>
             Return animation track by name.
             
             </summary>
            </member>
        <member name="M:Urho.Animation.GetTrack(Urho.StringHash)">
             <summary>
             Return animation track by name hash.
             </summary>
            </member>
        <member name="M:Urho.Animation.GetNumTriggers">
             <summary>
             Return number of animation trigger points.
             
             </summary>
            </member>
        <member name="M:Urho.Animation.GetTrigger(System.UInt32)">
             <summary>
             Return a trigger point by index.
             </summary>
            </member>
        <member name="P:Urho.Animation.AnimationName">
             <summary>
             Return animation name.
             
             Or
             Set animation name.
             
             </summary>
            </member>
        <member name="P:Urho.Animation.Length">
             <summary>
             Return animation length.
             
             Or
             Set animation length.
             
             </summary>
            </member>
        <member name="P:Urho.Animation.NumTriggers">
             <summary>
             Return number of animation trigger points.
             
             Or
             Resize trigger point vector.
             
             </summary>
            </member>
        <member name="P:Urho.Animation.AnimationNameHash">
             <summary>
             Return animation name hash.
             </summary>
            </member>
        <member name="P:Urho.Animation.NumTracks">
             <summary>
             Return number of animation tracks.
             
             </summary>
            </member>
        <member name="T:Urho.AnimationBlendMode">
             <summary>
             %Animation blending mode.
             </summary>
            </member>
        <member name="T:Urho.AnimationController">
             <summary>
             %Component that drives an AnimatedModel's animations.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationController.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.Update(System.Single)">
             <summary>
             Update the animations. Is called from HandleScenePostUpdate().
             </summary>
            </member>
        <member name="M:Urho.AnimationController.Play(System.String,System.Byte,System.Boolean,System.Single)">
             <summary>
             Play an animation and set full target weight. Name must be the full resource name. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.PlayExclusive(System.String,System.Byte,System.Boolean,System.Single)">
             <summary>
             Play an animation, set full target weight and fade out all other animations on the same layer. Name must be the full resource name. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.Stop(System.String,System.Single)">
             <summary>
             Stop an animation. Zero fadetime is instant. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.StopLayer(System.Byte,System.Single)">
             <summary>
             Stop all animations on a specific layer. Zero fadetime is instant.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.StopAll(System.Single)">
             <summary>
             Stop all animations. Zero fadetime is instant.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.Fade(System.String,System.Single,System.Single)">
             <summary>
             Fade animation to target weight. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.FadeOthers(System.String,System.Single,System.Single)">
             <summary>
             Fade other animations on the same layer to target weight. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.SetLayer(System.String,System.Byte)">
             <summary>
             Set animation blending layer priority. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.SetStartBone(System.String,System.String)">
             <summary>
             Set animation start bone. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.SetTime(System.String,System.Single)">
             <summary>
             Set animation time position. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.SetWeight(System.String,System.Single)">
             <summary>
             Set animation weight. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.SetLooped(System.String,System.Boolean)">
             <summary>
             Set animation looping. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.SetSpeed(System.String,System.Single)">
             <summary>
             Set animation speed. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.SetAutoFade(System.String,System.Single)">
             <summary>
             Set animation autofade at end (non-looped animations only). Zero time disables. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.SetRemoveOnCompletion(System.String,System.Boolean)">
             <summary>
             Set whether an animation auto-removes on completion.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.SetBlendMode(System.String,Urho.AnimationBlendMode)">
             <summary>
             Set animation blending mode. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.IsPlaying(System.String)">
             <summary>
             Return whether an animation is active. Note that non-looping animations that are being clamped at the end also return true.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.IsPlaying(System.Byte)">
             <summary>
             Return whether any animation is active on a specific layer.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.IsFadingIn(System.String)">
             <summary>
             Return whether an animation is fading in.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.IsFadingOut(System.String)">
             <summary>
             Return whether an animation is fading out.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.IsAtEnd(System.String)">
             <summary>
             Return whether an animation is at its end. Will return false if the animation is not active at all.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetLayer(System.String)">
             <summary>
             Return animation blending layer.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetStartBone(System.String)">
             <summary>
             Return animation start bone, or null if no such animation.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetStartBoneName(System.String)">
             <summary>
             Return animation start bone name, or empty string if no such animation.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetTime(System.String)">
             <summary>
             Return animation time position.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetWeight(System.String)">
             <summary>
             Return animation weight.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.IsLooped(System.String)">
             <summary>
             Return animation looping.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetBlendMode(System.String)">
             <summary>
             Return animation blending mode.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetLength(System.String)">
             <summary>
             Return animation length.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetSpeed(System.String)">
             <summary>
             Return animation speed.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetFadeTarget(System.String)">
             <summary>
             Return animation fade target weight.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetFadeTime(System.String)">
             <summary>
             Return animation fade time.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetAutoFade(System.String)">
             <summary>
             Return animation autofade time.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetRemoveOnCompletion(System.String)">
             <summary>
             Return whether animation auto-removes on completion, or false if no such animation.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetAnimationState(System.String)">
             <summary>
             Find an animation state by animation name.
             </summary>
            </member>
        <member name="M:Urho.AnimationController.GetAnimationState(Urho.StringHash)">
             <summary>
             Find an animation state by animation name hash.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.AnimationSet2D">
             <summary>
             Spriter animation set, it includes one or more animations, for more information please refer to http://www.esotericsoftware.com and http://www.brashmonkey.com/spriter.htm.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimationSet2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimationSet2D.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimationSet2D.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimationSet2D.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimationSet2D.GetNumAnimations">
             <summary>
             Get number of animations.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimationSet2D.GetAnimation(System.UInt32)">
             <summary>
             Return animation name.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimationSet2D.HasAnimation(System.String)">
             <summary>
             Check has animation.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimationSet2D.GetSprite">
             <summary>
             Return sprite.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.AnimationSet2D.GetSpriterFileSprite(System.Int32,System.Int32)">
             <summary>
             Return spriter file sprite.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.AnimationSet2D.NumAnimations">
             <summary>
             Get number of animations.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.AnimationSet2D.Sprite">
             <summary>
             Return sprite.
             </summary>
            </member>
        <member name="T:Urho.AnimationState">
             <summary>
             %Animation instance.
             </summary>
            </member>
        <member name="M:Urho.AnimationState.SetStartBone(Urho.Bone*)">
             <summary>
             Set start bone. Not supported in node animation mode. Resets any assigned per-bone weights.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.SetLooped(System.Boolean)">
             <summary>
             Set looping enabled/disabled.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.SetWeight(System.Single)">
             <summary>
             Set blending weight.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.SetBlendMode(Urho.AnimationBlendMode)">
             <summary>
             Set blending mode.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.SetTime(System.Single)">
             <summary>
             Set time position. Does not fire animation triggers.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.SetBoneWeight(System.UInt32,System.Single,System.Boolean)">
             <summary>
             Set per-bone blending weight by track index. Default is 1.0 (full), is multiplied  with the state's blending weight when applying the animation. Optionally recurses to child bones.
             </summary>
            </member>
        <member name="M:Urho.AnimationState.SetBoneWeight(System.String,System.Single,System.Boolean)">
             <summary>
             Set per-bone blending weight by name.
             </summary>
            </member>
        <member name="M:Urho.AnimationState.SetBoneWeight(Urho.StringHash,System.Single,System.Boolean)">
             <summary>
             Set per-bone blending weight by name hash.
             </summary>
            </member>
        <member name="M:Urho.AnimationState.AddWeight(System.Single)">
             <summary>
             Modify blending weight.
             </summary>
            </member>
        <member name="M:Urho.AnimationState.AddTime(System.Single)">
             <summary>
             Modify time position. %Animation triggers will be fired.
             </summary>
            </member>
        <member name="M:Urho.AnimationState.SetLayer(System.Byte)">
             <summary>
             Set blending layer.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetAnimation">
             <summary>
             Return animation.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetModel">
             <summary>
             Return animated model this state belongs to (model mode).
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetNode">
             <summary>
             Return root scene node this state controls (node hierarchy mode).
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetStartBone">
             <summary>
             Return start bone.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetBoneWeight(System.UInt32)">
             <summary>
             Return per-bone blending weight by track index.
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetBoneWeight(System.String)">
             <summary>
             Return per-bone blending weight by name.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetBoneWeight(Urho.StringHash)">
             <summary>
             Return per-bone blending weight by name.
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetTrackIndex(Urho.Node)">
             <summary>
             Return track index with matching bone node, or M_MAX_UNSIGNED if not found.
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetTrackIndex(System.String)">
             <summary>
             Return track index by bone name, or M_MAX_UNSIGNED if not found.
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetTrackIndex(Urho.StringHash)">
             <summary>
             Return track index by bone name hash, or M_MAX_UNSIGNED if not found.
             </summary>
            </member>
        <member name="M:Urho.AnimationState.IsEnabled">
             <summary>
             Return whether weight is nonzero.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.IsLooped">
             <summary>
             Return whether looped.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetWeight">
             <summary>
             Return blending weight.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetBlendMode">
             <summary>
             Return blending mode.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetTime">
             <summary>
             Return time position.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetLength">
             <summary>
             Return animation length.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.GetLayer">
             <summary>
             Return blending layer.
             
             </summary>
            </member>
        <member name="M:Urho.AnimationState.Apply">
             <summary>
             Apply the animation at the current time position.
             </summary>
            </member>
        <member name="P:Urho.AnimationState.StartBone">
             <summary>
             Return start bone.
             
             Or
             Set start bone. Not supported in node animation mode. Resets any assigned per-bone weights.
             
             </summary>
            </member>
        <member name="P:Urho.AnimationState.Looped">
             <summary>
             Return whether looped.
             
             Or
             Set looping enabled/disabled.
             
             </summary>
            </member>
        <member name="P:Urho.AnimationState.Weight">
             <summary>
             Return blending weight.
             
             Or
             Set blending weight.
             
             </summary>
            </member>
        <member name="P:Urho.AnimationState.BlendMode">
             <summary>
             Return blending mode.
             
             Or
             Set blending mode.
             
             </summary>
            </member>
        <member name="P:Urho.AnimationState.Time">
             <summary>
             Return time position.
             
             Or
             Set time position. Does not fire animation triggers.
             
             </summary>
            </member>
        <member name="P:Urho.AnimationState.Layer">
             <summary>
             Return blending layer.
             
             Or
             Set blending layer.
             
             </summary>
            </member>
        <member name="P:Urho.AnimationState.Animation">
             <summary>
             Return animation.
             
             </summary>
            </member>
        <member name="P:Urho.AnimationState.Model">
             <summary>
             Return animated model this state belongs to (model mode).
             
             </summary>
            </member>
        <member name="P:Urho.AnimationState.Node">
             <summary>
             Return root scene node this state controls (node hierarchy mode).
             
             </summary>
            </member>
        <member name="P:Urho.AnimationState.Enabled">
             <summary>
             Return whether weight is nonzero.
             
             </summary>
            </member>
        <member name="P:Urho.AnimationState.Length">
             <summary>
             Return animation length.
             
             </summary>
            </member>
        <member name="T:Urho.AreaAllocator">
             <summary>
             Rectangular area allocator.
             </summary>
            </member>
        <member name="M:Urho.AreaAllocator.Reset(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
             Reset to given width and height and remove all previous allocations.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.AreaAllocator.Allocate(System.Int32,System.Int32,System.Int32@,System.Int32@)-->
        <member name="M:Urho.AreaAllocator.GetWidth">
             <summary>
             Return the current width.
             </summary>
            </member>
        <member name="M:Urho.AreaAllocator.GetHeight">
             <summary>
             Return the current height.
             </summary>
            </member>
        <member name="M:Urho.AreaAllocator.GetFastMode">
             <summary>
             Return whether uses fast mode. Fast mode uses a simpler allocation scheme which may waste free space, but is OK for eg. fonts.
             </summary>
            </member>
        <member name="P:Urho.AreaAllocator.Width">
             <summary>
             Return the current width.
             </summary>
            </member>
        <member name="P:Urho.AreaAllocator.Height">
             <summary>
             Return the current height.
             </summary>
            </member>
        <member name="P:Urho.AreaAllocator.FastMode">
             <summary>
             Return whether uses fast mode. Fast mode uses a simpler allocation scheme which may waste free space, but is OK for eg. fonts.
             </summary>
            </member>
        <member name="T:Urho.Resources.AsyncLoadState">
             <summary>
             Asynchronous loading state of a resource.
             </summary>
            </member>
        <member name="T:Urho.AttributeAccessor">
             <summary>
             Abstract base class for invoking attribute accessors.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,Urho.Vector3)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,Urho.IntRect)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,Urho.Color)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,Urho.Vector2)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,Urho.Vector4)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,Urho.IntVector2)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,Urho.Quaternion)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,Urho.Matrix4)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,Urho.Matrix3)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,Urho.Matrix3x4)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,System.Int32)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,System.Single)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,System.String)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="M:Urho.AttributeAccessor.Set(Urho.Serializable,System.Boolean)">
             <summary>
             Set the attribute.
             </summary>
            </member>
        <member name="T:Urho.AttributeAnimationInfo">
             <summary>
             Attribute animation instance.
             </summary>
            </member>
        <member name="T:Urho.AttributeMode">
             <summary>
             Attribute shown only in the editor, but not serialized.
             </summary>
            </member>
        <member name="T:Urho.Audio.Audio">
             <summary>
             %Audio subsystem.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.SetMode(System.Int32,System.Int32,System.Boolean,System.Boolean)">
             <summary>
             Initialize sound output with specified buffer length and output mode.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Audio.Audio.Update(System.Single)-->
        <member name="M:Urho.Audio.Audio.Play">
             <summary>
             Restart sound output.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.Stop">
             <summary>
             Suspend sound output.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.SetMasterGain(System.String,System.Single)">
             <summary>
             Set master gain on a specific sound type such as sound effects, music or voice.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.PauseSoundType(System.String)">
             <summary>
             Pause playback of specific sound type. This allows to suspend e.g. sound effects or voice when the game is paused. By default all sound types are unpaused.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.ResumeSoundType(System.String)">
             <summary>
             Resume playback of specific sound type.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.ResumeAll">
             <summary>
             Resume playback of all sound types.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.SetListener(Urho.Audio.SoundListener)">
             <summary>
             Set active sound listener for 3D sounds.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.StopSound(Urho.Audio.Sound)">
             <summary>
             Stop any sound source playing a certain sound clip.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.GetSampleSize">
             <summary>
             Return byte size of one sample.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.GetMixRate">
             <summary>
             Return mixing rate.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.GetInterpolation">
             <summary>
             Return whether output is interpolated.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.IsStereo">
             <summary>
             Return whether output is stereo.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.IsPlaying">
             <summary>
             Return whether audio is being output.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.IsInitialized">
             <summary>
             Return whether an audio stream has been reserved.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.GetMasterGain(System.String)">
             <summary>
             Return master gain for a specific sound source type. Unknown sound types will return full gain (1).
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.IsSoundTypePaused(System.String)">
             <summary>
             Return whether specific sound type has been paused.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.GetListener">
             <summary>
             Return active sound listener.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.HasMasterGain(System.String)">
             <summary>
             Return whether the specified master gain has been defined.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.AddSoundSource(Urho.Audio.SoundSource)">
             <summary>
             Add a sound source to keep track of. Called by SoundSource.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.RemoveSoundSource(Urho.Audio.SoundSource)">
             <summary>
             Remove a sound source. Called by SoundSource.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.GetSoundSourceMasterGain(Urho.StringHash)">
             <summary>
             Return sound type specific gain multiplied by master gain.
             </summary>
            </member>
        <member name="M:Urho.Audio.Audio.MixOutput(System.IntPtr,System.UInt32)">
             <summary>
             Mix sound sources into the buffer.
             </summary>
            </member>
        <member name="P:Urho.Audio.Audio.Listener">
             <summary>
             Return active sound listener.
             
             Or
             Set active sound listener for 3D sounds.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Audio.SampleSize">
             <summary>
             Return byte size of one sample.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Audio.MixRate">
             <summary>
             Return mixing rate.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Audio.Interpolation">
             <summary>
             Return whether output is interpolated.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Audio.Stereo">
             <summary>
             Return whether output is stereo.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Audio.Playing">
             <summary>
             Return whether audio is being output.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Audio.Initialized">
             <summary>
             Return whether an audio stream has been reserved.
             
             </summary>
            </member>
        <member name="T:Urho.AutoRemoveMode">
             <summary>
             Autoremove is used by some components for automatic removal from the scene hierarchy upon completion of an action, for example sound or particle effect.
             </summary>
            </member>
        <member name="T:Urho.BlendMode">
             <summary>
             Blending mode.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.BodyType2D">
             <summary>
             Rigid body type.
             </summary>
            </member>
        <member name="T:Urho.Gui.BorderImage">
             <summary>
             %Image %UI element with optional border.
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetTexture(Urho.Texture)">
             <summary>
             Set texture.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetImageRect(Urho.IntRect)">
             <summary>
             Set part of texture to use as the image.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetFullImageRect">
             <summary>
             Use whole texture as the image.
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetBorder(Urho.IntRect)">
             <summary>
             Set border dimensions on the screen.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetImageBorder(Urho.IntRect)">
             <summary>
             Set border dimensions on the image. If zero (default) uses the screen dimensions, resulting in pixel-perfect borders.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetHoverOffset(Urho.IntVector2)">
             <summary>
             Set offset to image rectangle used on hover.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetHoverOffset(System.Int32,System.Int32)">
             <summary>
             Set offset to image rectangle used on hover.
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetDisabledOffset(Urho.IntVector2)">
             <summary>
             Set offset to image rectangle used when disabled.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetDisabledOffset(System.Int32,System.Int32)">
             <summary>
             Set offset to image rectangle used when disabled.
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetBlendMode(Urho.BlendMode)">
             <summary>
             Set blend mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetTiled(System.Boolean)">
             <summary>
             Set tiled mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.SetMaterial(Urho.Material)">
             <summary>
             Set material for custom rendering.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.GetTexture">
             <summary>
             Return texture.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.GetImageRect">
             <summary>
             Return image rectangle.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.GetBorder">
             <summary>
             Return border screen dimensions.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.GetImageBorder">
             <summary>
             Return border image dimensions. Zero rect uses border screen dimensions.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.GetHoverOffset">
             <summary>
             Return offset to image rectangle used on hover.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.GetDisabledOffset">
             <summary>
             Return offset to image rectangle used when disabled.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.GetBlendMode">
             <summary>
             Return blend mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.IsTiled">
             <summary>
             Return whether is tiled.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.GetMaterial">
             <summary>
             Get material used for custom rendering.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.GetTextureAttr">
             <summary>
             Return texture attribute.
             </summary>
            </member>
        <member name="M:Urho.Gui.BorderImage.GetMaterialAttr">
             <summary>
             Get material attribute.
             </summary>
            </member>
        <member name="P:Urho.Gui.BorderImage.Texture">
             <summary>
             Return texture.
             
             Or
             Set texture.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.BorderImage.ImageRect">
             <summary>
             Return image rectangle.
             
             Or
             Set part of texture to use as the image.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.BorderImage.Border">
             <summary>
             Return border screen dimensions.
             
             Or
             Set border dimensions on the screen.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.BorderImage.ImageBorder">
             <summary>
             Return border image dimensions. Zero rect uses border screen dimensions.
             
             Or
             Set border dimensions on the image. If zero (default) uses the screen dimensions, resulting in pixel-perfect borders.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.BorderImage.HoverOffset">
             <summary>
             Return offset to image rectangle used on hover.
             
             Or
             Set offset to image rectangle used on hover.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.BorderImage.DisabledOffset">
             <summary>
             Return offset to image rectangle used when disabled.
             
             Or
             Set offset to image rectangle used when disabled.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.BorderImage.BlendMode">
             <summary>
             Return blend mode.
             
             Or
             Set blend mode.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.BorderImage.Tiled">
             <summary>
             Return whether is tiled.
             
             Or
             Set tiled mode.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.BorderImage.Material">
             <summary>
             Get material used for custom rendering.
             
             Or
             Set material for custom rendering.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.BorderImage.TextureAttr">
             <summary>
             Return texture attribute.
             </summary>
            </member>
        <member name="P:Urho.Gui.BorderImage.MaterialAttr">
             <summary>
             Get material attribute.
             </summary>
            </member>
        <member name="T:Urho.Gui.Button">
             <summary>
             Push button %UI element.
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.Update(System.Single)">
             <summary>
             Perform UI element update.
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.SetPressedOffset(Urho.IntVector2)">
             <summary>
             Set offset to image rectangle used when pressed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.SetPressedOffset(System.Int32,System.Int32)">
             <summary>
             Set offset to image rectangle used when pressed.
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.SetPressedChildOffset(Urho.IntVector2)">
             <summary>
             Set offset of child elements when pressed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.SetPressedChildOffset(System.Int32,System.Int32)">
             <summary>
             Set offset of child elements when pressed.
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.SetRepeat(System.Single,System.Single)">
             <summary>
             Set repeat properties. Rate 0 (default) disables repeat.
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.SetRepeatDelay(System.Single)">
             <summary>
             Set repeat delay.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.SetRepeatRate(System.Single)">
             <summary>
             Set repeat rate.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.GetPressedOffset">
             <summary>
             Return pressed image offset.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.GetPressedChildOffset">
             <summary>
             Return offset of child elements when pressed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.GetRepeatDelay">
             <summary>
             Return repeat delay.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.GetRepeatRate">
             <summary>
             Return repeat rate.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Button.IsPressed">
             <summary>
             Return whether is currently pressed.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Button.PressedOffset">
             <summary>
             Return pressed image offset.
             
             Or
             Set offset to image rectangle used when pressed.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Button.PressedChildOffset">
             <summary>
             Return offset of child elements when pressed.
             
             Or
             Set offset of child elements when pressed.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Button.RepeatDelay">
             <summary>
             Return repeat delay.
             
             Or
             Set repeat delay.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Button.RepeatRate">
             <summary>
             Return repeat rate.
             
             Or
             Set repeat rate.
             
             </summary>
            </member>
        <member name="T:Urho.Gui.CheckBox">
             <summary>
             %UI element that can be toggled between unchecked and checked state.
             </summary>
            </member>
        <member name="M:Urho.Gui.CheckBox.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.CheckBox.SetChecked(System.Boolean)">
             <summary>
             Set checked state.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.CheckBox.SetCheckedOffset(Urho.IntVector2)">
             <summary>
             Set checked image offset.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.CheckBox.SetCheckedOffset(System.Int32,System.Int32)">
             <summary>
             Set checked image offset.
             </summary>
            </member>
        <member name="M:Urho.Gui.CheckBox.IsChecked">
             <summary>
             Return whether is checked.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.CheckBox.GetCheckedOffset">
             <summary>
             Return checked image offset.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.CheckBox.Checked">
             <summary>
             Return whether is checked.
             
             Or
             Set checked state.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.CheckBox.CheckedOffset">
             <summary>
             Return checked image offset.
             
             Or
             Set checked image offset.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.CollisionBox2D">
             <summary>
             2D box collision component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionBox2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionBox2D.SetSize(Urho.Vector2)">
             <summary>
             Set size.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionBox2D.SetSize(System.Single,System.Single)">
             <summary>
             Set size.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionBox2D.SetCenter(Urho.Vector2)">
             <summary>
             Set center.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionBox2D.SetCenter(System.Single,System.Single)">
             <summary>
             Set center.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionBox2D.SetAngle(System.Single)">
             <summary>
             Set angle.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionBox2D.GetSize">
             <summary>
             Return size.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionBox2D.GetCenter">
             <summary>
             Return center.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionBox2D.GetAngle">
             <summary>
             Return angle.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionBox2D.Size">
             <summary>
             Return size.
             
             Or
             Set size.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionBox2D.Center">
             <summary>
             Return center.
             
             Or
             Set center.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionBox2D.Angle">
             <summary>
             Return angle.
             
             Or
             Set angle.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.CollisionChain2D">
             <summary>
             2D chain collision component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionChain2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionChain2D.SetLoop(System.Boolean)">
             <summary>
             Set loop.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionChain2D.SetVertexCount(System.UInt32)">
             <summary>
             Set vertex count.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionChain2D.SetVertex(System.UInt32,Urho.Vector2)">
             <summary>
             Set vertex.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionChain2D.GetLoop">
             <summary>
             Return loop.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionChain2D.GetVertexCount">
             <summary>
             Return vertex count.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionChain2D.GetVertex(System.UInt32)">
             <summary>
             Return vertex.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionChain2D.Loop">
             <summary>
             Return loop.
             
             Or
             Set loop.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionChain2D.VertexCount">
             <summary>
             Return vertex count.
             
             Or
             Set vertex count.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.CollisionCircle2D">
             <summary>
             2D circle collision component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionCircle2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionCircle2D.SetRadius(System.Single)">
             <summary>
             Set radius.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionCircle2D.SetCenter(Urho.Vector2)">
             <summary>
             Set center.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionCircle2D.SetCenter(System.Single,System.Single)">
             <summary>
             Set center.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionCircle2D.GetRadius">
             <summary>
             Return radius.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionCircle2D.GetCenter">
             <summary>
             Return center.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionCircle2D.Radius">
             <summary>
             Return radius.
             
             Or
             Set radius.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionCircle2D.Center">
             <summary>
             Return center.
             
             Or
             Set center.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.CollisionEdge2D">
             <summary>
             2D edge collision component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionEdge2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionEdge2D.SetVertex1(Urho.Vector2)">
             <summary>
             Set vertex 1.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionEdge2D.SetVertex2(Urho.Vector2)">
             <summary>
             Set vertex 2.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionEdge2D.SetVertices(Urho.Vector2,Urho.Vector2)">
             <summary>
             Set vertices.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionEdge2D.GetVertex1">
             <summary>
             Return vertex 1.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionEdge2D.GetVertex2">
             <summary>
             Return vertex 2.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionEdge2D.Vertex1">
             <summary>
             Return vertex 1.
             
             Or
             Set vertex 1.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionEdge2D.Vertex2">
             <summary>
             Return vertex 2.
             
             Or
             Set vertex 2.
             
             </summary>
            </member>
        <member name="T:Urho.Physics.CollisionEventMode">
             <summary>
             Rigid body collision event signaling mode.
             </summary>
            </member>
        <member name="T:Urho.CollisionGeometryData">
             <summary>
             Base class for collision shape geometry data.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.CollisionPolygon2D">
             <summary>
             2D polygon collision component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionPolygon2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionPolygon2D.SetVertexCount(System.UInt32)">
             <summary>
             Set vertex count.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionPolygon2D.SetVertex(System.UInt32,Urho.Vector2)">
             <summary>
             Set vertex.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionPolygon2D.GetVertexCount">
             <summary>
             Return vertex count.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionPolygon2D.GetVertex(System.UInt32)">
             <summary>
             Return vertex.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionPolygon2D.VertexCount">
             <summary>
             Return vertex count.
             
             Or
             Set vertex count.
             
             </summary>
            </member>
        <member name="T:Urho.Physics.CollisionShape">
             <summary>
             Physics collision shape component.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetBox(Urho.Vector3,Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a box.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetSphere(System.Single,Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a sphere.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetStaticPlane(Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a static plane.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetCylinder(System.Single,System.Single,Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a cylinder.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetCapsule(System.Single,System.Single,Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a capsule.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetCone(System.Single,System.Single,Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a cone.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetTriangleMesh(Urho.Model,System.UInt32,Urho.Vector3,Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a triangle mesh from Model. If you update a model's geometry and want to reapply the shape, call physicsWorld-&gt;RemoveCachedGeometry(model) first.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetCustomTriangleMesh(Urho.CustomGeometry,Urho.Vector3,Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a triangle mesh from CustomGeometry.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetConvexHull(Urho.Model,System.UInt32,Urho.Vector3,Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a convex hull from Model.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetCustomConvexHull(Urho.CustomGeometry,Urho.Vector3,Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a convex hull from CustomGeometry.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetGImpactMesh(Urho.Model,System.UInt32,Urho.Vector3,Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a triangle mesh from Model. If you update a model's geometry and want to reapply the shape, call physicsWorld-&gt;RemoveCachedGeometry(model) first.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetCustomGImpactMesh(Urho.CustomGeometry,Urho.Vector3,Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set as a triangle mesh from CustomGeometry.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetTerrain(System.UInt32)">
             <summary>
             Set as a terrain. Only works if the same scene node contains a Terrain component.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetShapeType(Urho.Physics.ShapeType)">
             <summary>
             Set shape type.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetSize(Urho.Vector3)">
             <summary>
             Set shape size.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetPosition(Urho.Vector3)">
             <summary>
             Set offset position.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetRotation(Urho.Quaternion)">
             <summary>
             Set offset rotation.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetTransform(Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set offset transform.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetMargin(System.Single)">
             <summary>
             Set collision margin.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetModel(Urho.Model)">
             <summary>
             Set triangle mesh / convex hull model.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.SetLodLevel(System.UInt32)">
             <summary>
             Set model LOD level.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.GetPhysicsWorld">
             <summary>
             Return physics world.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.GetShapeType">
             <summary>
             Return shape type.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.GetSize">
             <summary>
             Return shape size.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.GetPosition">
             <summary>
             Return offset position.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.GetRotation">
             <summary>
             Return offset rotation.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.GetMargin">
             <summary>
             Return collision margin.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.GetModel">
             <summary>
             Return triangle mesh / convex hull model.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.GetLodLevel">
             <summary>
             Return model LOD level.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.GetWorldBoundingBox">
             <summary>
             Return world-space bounding box.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.NotifyRigidBody(System.Boolean)">
             <summary>
             Update the new collision shape to the RigidBody.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.GetModelAttr">
             <summary>
             Return model attribute.
             </summary>
            </member>
        <member name="M:Urho.Physics.CollisionShape.ReleaseShape">
             <summary>
             Release the collision shape.
             </summary>
            </member>
        <member name="P:Urho.Physics.CollisionShape.ShapeType">
             <summary>
             Return shape type.
             
             Or
             Set shape type.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.CollisionShape.Size">
             <summary>
             Return shape size.
             
             Or
             Set shape size.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.CollisionShape.Position">
             <summary>
             Return offset position.
             
             Or
             Set offset position.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.CollisionShape.Rotation">
             <summary>
             Return offset rotation.
             
             Or
             Set offset rotation.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.CollisionShape.Margin">
             <summary>
             Return collision margin.
             
             Or
             Set collision margin.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.CollisionShape.Model">
             <summary>
             Return triangle mesh / convex hull model.
             
             Or
             Set triangle mesh / convex hull model.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.CollisionShape.LodLevel">
             <summary>
             Return model LOD level.
             
             Or
             Set model LOD level.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.CollisionShape.PhysicsWorld">
             <summary>
             Return physics world.
             </summary>
            </member>
        <member name="P:Urho.Physics.CollisionShape.WorldBoundingBox">
             <summary>
             Return world-space bounding box.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.CollisionShape.ModelAttr">
             <summary>
             Return model attribute.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.CollisionShape2D">
             <summary>
             2D collision shape component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.SetTrigger(System.Boolean)">
             <summary>
             Set trigger.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.SetCategoryBits(System.Int32)">
             <summary>
             Set filter category bits.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.SetMaskBits(System.Int32)">
             <summary>
             Set filter mask bits.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.SetGroupIndex(System.Int32)">
             <summary>
             Set filter group index.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.SetDensity(System.Single)">
             <summary>
             Set density.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.SetFriction(System.Single)">
             <summary>
             Set friction.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.SetRestitution(System.Single)">
             <summary>
             Set restitution.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.CreateFixture">
             <summary>
             Create fixture.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.ReleaseFixture">
             <summary>
             Release fixture.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.IsTrigger">
             <summary>
             Return trigger.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.GetCategoryBits">
             <summary>
             Return filter category bits.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.GetMaskBits">
             <summary>
             Return filter mask bits.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.GetGroupIndex">
             <summary>
             Return filter group index.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.GetDensity">
             <summary>
             Return density.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.GetFriction">
             <summary>
             Return friction.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.GetRestitution">
             <summary>
             Return restitution.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.GetMass">
             <summary>
             Return mass.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.GetInertia">
             <summary>
             Return inertia.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.CollisionShape2D.GetMassCenter">
             <summary>
             Return mass center.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionShape2D.Trigger">
             <summary>
             Return trigger.
             
             Or
             Set trigger.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionShape2D.CategoryBits">
             <summary>
             Return filter category bits.
             
             Or
             Set filter category bits.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionShape2D.MaskBits">
             <summary>
             Return filter mask bits.
             
             Or
             Set filter mask bits.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionShape2D.GroupIndex">
             <summary>
             Return filter group index.
             
             Or
             Set filter group index.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionShape2D.Density">
             <summary>
             Return density.
             
             Or
             Set density.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionShape2D.Friction">
             <summary>
             Return friction.
             
             Or
             Set friction.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionShape2D.Restitution">
             <summary>
             Return restitution.
             
             Or
             Set restitution.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionShape2D.Mass">
             <summary>
             Return mass.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionShape2D.Inertia">
             <summary>
             Return inertia.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.CollisionShape2D.MassCenter">
             <summary>
             Return mass center.
             
             </summary>
            </member>
        <member name="T:Urho.CompareMode">
             <summary>
             Depth or stencil compare mode.
             </summary>
            </member>
        <member name="T:Urho.Resources.CompressedFormat">
             <summary>
             Supported compressed image formats.
             </summary>
            </member>
        <member name="T:Urho.ConstantBuffer">
             <summary>
             Hardware constant buffer.
             </summary>
            </member>
        <member name="M:Urho.ConstantBuffer.Release">
             <summary>
             Release the buffer.
             </summary>
            </member>
        <member name="M:Urho.ConstantBuffer.SetSize(System.UInt32)">
             <summary>
             Set size and create GPU-side buffer. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.ConstantBuffer.SetParameter(System.UInt32,System.UInt32,System.Void*)">
             <summary>
             Set a generic parameter and mark buffer dirty.
             </summary>
            </member>
        <member name="M:Urho.ConstantBuffer.SetVector3ArrayParameter(System.UInt32,System.UInt32,System.Void*)">
             <summary>
             Set a Vector3 array parameter and mark buffer dirty.
             </summary>
            </member>
        <member name="M:Urho.ConstantBuffer.Apply">
             <summary>
             Apply to GPU.
             </summary>
            </member>
        <member name="M:Urho.ConstantBuffer.GetSize">
             <summary>
             Return size.
             </summary>
            </member>
        <member name="M:Urho.ConstantBuffer.IsDirty">
             <summary>
             Return whether has unapplied data.
             </summary>
            </member>
        <member name="P:Urho.ConstantBuffer.Size">
             <summary>
             Return size.
             Or
             Set size and create GPU-side buffer. Return true on success.
             </summary>
            </member>
        <member name="P:Urho.ConstantBuffer.Dirty">
             <summary>
             Return whether has unapplied data.
             </summary>
            </member>
        <member name="T:Urho.Physics.Constraint">
             <summary>
             Physics constraint component. Connects two rigid bodies together, or one rigid body to a static point.
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetConstraintType(Urho.Physics.ConstraintType)">
             <summary>
             Set constraint type and recreate the constraint.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetOtherBody(Urho.Physics.RigidBody)">
             <summary>
             Set other body to connect to. Set to null to connect to the static world.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetPosition(Urho.Vector3)">
             <summary>
             Set constraint position relative to own body.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetRotation(Urho.Quaternion)">
             <summary>
             Set constraint rotation relative to own body.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetAxis(Urho.Vector3)">
             <summary>
             Set constraint rotation relative to own body by specifying the axis.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetOtherPosition(Urho.Vector3)">
             <summary>
             Set constraint position relative to the other body. If connected to the static world, is a world space position.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetOtherRotation(Urho.Quaternion)">
             <summary>
             Set constraint rotation relative to the other body. If connected to the static world, is a world space rotation.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetOtherAxis(Urho.Vector3)">
             <summary>
             Set constraint rotation relative to the other body by specifying the axis.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetWorldPosition(Urho.Vector3)">
             <summary>
             Set constraint world space position. Resets both own and other body relative position, ie. zeroes the constraint error.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetHighLimit(Urho.Vector2)">
             <summary>
             Set high limit. Interpretation is constraint type specific.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetLowLimit(Urho.Vector2)">
             <summary>
             Set low limit. Interpretation is constraint type specific.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetERP(System.Single)">
             <summary>
             Set constraint error reduction parameter. Zero = leave to default.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetCFM(System.Single)">
             <summary>
             Set constraint force mixing parameter. Zero = leave to default.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.SetDisableCollision(System.Boolean)">
             <summary>
             Set whether to disable collisions between connected bodies.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetPhysicsWorld">
             <summary>
             Return physics world.
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetConstraintType">
             <summary>
             Return constraint type.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetOwnBody">
             <summary>
             Return rigid body in own scene node.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetOtherBody">
             <summary>
             Return the other rigid body. May be null if connected to the static world.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetPosition">
             <summary>
             Return constraint position relative to own body.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetRotation">
             <summary>
             Return constraint rotation relative to own body.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetOtherPosition">
             <summary>
             Return constraint position relative to other body.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetOtherRotation">
             <summary>
             Return constraint rotation relative to other body.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetWorldPosition">
             <summary>
             Return constraint world position, calculated from own body.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetHighLimit">
             <summary>
             Return high limit.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetLowLimit">
             <summary>
             Return low limit.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetERP">
             <summary>
             Return constraint error reduction parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetCFM">
             <summary>
             Return constraint force mixing parameter.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.GetDisableCollision">
             <summary>
             Return whether collisions between connected bodies are disabled.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.ReleaseConstraint">
             <summary>
             Release the constraint.
             </summary>
            </member>
        <member name="M:Urho.Physics.Constraint.ApplyFrames">
             <summary>
             Apply constraint frames.
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.ConstraintType">
             <summary>
             Return constraint type.
             
             Or
             Set constraint type and recreate the constraint.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.OtherBody">
             <summary>
             Return the other rigid body. May be null if connected to the static world.
             
             Or
             Set other body to connect to. Set to null to connect to the static world.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.Position">
             <summary>
             Return constraint position relative to own body.
             
             Or
             Set constraint position relative to own body.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.Rotation">
             <summary>
             Return constraint rotation relative to own body.
             
             Or
             Set constraint rotation relative to own body.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.OtherPosition">
             <summary>
             Return constraint position relative to other body.
             
             Or
             Set constraint position relative to the other body. If connected to the static world, is a world space position.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.OtherRotation">
             <summary>
             Return constraint rotation relative to other body.
             
             Or
             Set constraint rotation relative to the other body. If connected to the static world, is a world space rotation.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.WorldPosition">
             <summary>
             Return constraint world position, calculated from own body.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.HighLimit">
             <summary>
             Return high limit.
             
             Or
             Set high limit. Interpretation is constraint type specific.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.LowLimit">
             <summary>
             Return low limit.
             
             Or
             Set low limit. Interpretation is constraint type specific.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.ERP">
             <summary>
             Return constraint error reduction parameter.
             
             Or
             Set constraint error reduction parameter. Zero = leave to default.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.CFM">
             <summary>
             Return constraint force mixing parameter.
             
             Or
             Set constraint force mixing parameter. Zero = leave to default.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.DisableCollision">
             <summary>
             Return whether collisions between connected bodies are disabled.
             
             Or
             Set whether to disable collisions between connected bodies.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.PhysicsWorld">
             <summary>
             Return physics world.
             </summary>
            </member>
        <member name="P:Urho.Physics.Constraint.OwnBody">
             <summary>
             Return rigid body in own scene node.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.Constraint2D">
             <summary>
             2D physics constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.CreateJoint">
             <summary>
             Create joint.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.ReleaseJoint">
             <summary>
             Release joint.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.SetOtherBody(Urho.Urho2D.RigidBody2D)">
             <summary>
             Set other rigid body.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.SetCollideConnected(System.Boolean)">
             <summary>
             Set collide connected.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.SetAttachedConstraint(Urho.Urho2D.Constraint2D)">
             <summary>
             Set attached constriant (for gear).
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.GetOwnerBody">
             <summary>
             Return owner body.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.GetOtherBody">
             <summary>
             Return other body.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.GetCollideConnected">
             <summary>
             Return collide connected.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Constraint2D.GetAttachedConstraint">
             <summary>
             Return attached constraint (for gear).
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Constraint2D.OtherBody">
             <summary>
             Return other body.
             
             Or
             Set other rigid body.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Constraint2D.CollideConnected">
             <summary>
             Return collide connected.
             
             Or
             Set collide connected.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Constraint2D.AttachedConstraint">
             <summary>
             Return attached constraint (for gear).
             Or
             Set attached constriant (for gear).
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Constraint2D.OwnerBody">
             <summary>
             Return owner body.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ConstraintDistance2D">
             <summary>
             2D distance constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintDistance2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintDistance2D.SetOwnerBodyAnchor(Urho.Vector2)">
             <summary>
             Set owner body anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintDistance2D.SetOtherBodyAnchor(Urho.Vector2)">
             <summary>
             Set other body anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintDistance2D.SetFrequencyHz(System.Single)">
             <summary>
             Set frequency Hz.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintDistance2D.SetDampingRatio(System.Single)">
             <summary>
             Set damping ratio.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintDistance2D.SetLength(System.Single)">
             <summary>
             Set length.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintDistance2D.GetOwnerBodyAnchor">
             <summary>
             Return owner body anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintDistance2D.GetOtherBodyAnchor">
             <summary>
             Return other body anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintDistance2D.GetFrequencyHz">
             <summary>
             Return frequency Hz.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintDistance2D.GetDampingRatio">
             <summary>
             Return damping ratio.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintDistance2D.GetLength">
             <summary>
             Return length.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintDistance2D.OwnerBodyAnchor">
             <summary>
             Return owner body anchor.
             
             Or
             Set owner body anchor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintDistance2D.OtherBodyAnchor">
             <summary>
             Return other body anchor.
             
             Or
             Set other body anchor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintDistance2D.FrequencyHz">
             <summary>
             Return frequency Hz.
             
             Or
             Set frequency Hz.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintDistance2D.DampingRatio">
             <summary>
             Return damping ratio.
             
             Or
             Set damping ratio.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintDistance2D.Length">
             <summary>
             Return length.
             
             Or
             Set length.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ConstraintFriction2D">
             <summary>
             2D friction constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintFriction2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintFriction2D.SetAnchor(Urho.Vector2)">
             <summary>
             Set anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintFriction2D.SetMaxForce(System.Single)">
             <summary>
             Set max force.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintFriction2D.SetMaxTorque(System.Single)">
             <summary>
             Set max torque.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintFriction2D.GetAnchor">
             <summary>
             Return anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintFriction2D.GetMaxForce">
             <summary>
             Set max force.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintFriction2D.GetMaxTorque">
             <summary>
             Set max torque.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintFriction2D.Anchor">
             <summary>
             Return anchor.
             
             Or
             Set anchor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintFriction2D.MaxForce">
             <summary>
             Set max force.
             
             Or
             Set max force.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintFriction2D.MaxTorque">
             <summary>
             Set max torque.
             
             Or
             Set max torque.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ConstraintGear2D">
             <summary>
             2D gear constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintGear2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintGear2D.SetOwnerConstraint(Urho.Urho2D.Constraint2D)">
             <summary>
             Set owner constraint.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintGear2D.SetOtherConstraint(Urho.Urho2D.Constraint2D)">
             <summary>
             Set other constraint.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintGear2D.SetRatio(System.Single)">
             <summary>
             Set ratio.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintGear2D.GetOwnerConstraint">
             <summary>
             Return owner constraint.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintGear2D.GetOtherConstraint">
             <summary>
             Return other constraint.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintGear2D.GetRatio">
             <summary>
             Return ratio.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintGear2D.OwnerConstraint">
             <summary>
             Return owner constraint.
             
             Or
             Set owner constraint.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintGear2D.OtherConstraint">
             <summary>
             Return other constraint.
             
             Or
             Set other constraint.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintGear2D.Ratio">
             <summary>
             Return ratio.
             
             Or
             Set ratio.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ConstraintMotor2D">
             <summary>
             2D motor constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMotor2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMotor2D.SetLinearOffset(Urho.Vector2)">
             <summary>
             Set linear offset.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMotor2D.SetAngularOffset(System.Single)">
             <summary>
             Set angular offset.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMotor2D.SetMaxForce(System.Single)">
             <summary>
             Set max force.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMotor2D.SetMaxTorque(System.Single)">
             <summary>
             Set max torque.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMotor2D.SetCorrectionFactor(System.Single)">
             <summary>
             Set correction factor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMotor2D.GetLinearOffset">
             <summary>
             Return linear offset.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMotor2D.GetAngularOffset">
             <summary>
             Return angular offset.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMotor2D.GetMaxForce">
             <summary>
             Return max force.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMotor2D.GetMaxTorque">
             <summary>
             Return max torque.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMotor2D.GetCorrectionFactor">
             <summary>
             Return correction factor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintMotor2D.LinearOffset">
             <summary>
             Return linear offset.
             
             Or
             Set linear offset.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintMotor2D.AngularOffset">
             <summary>
             Return angular offset.
             
             Or
             Set angular offset.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintMotor2D.MaxForce">
             <summary>
             Return max force.
             
             Or
             Set max force.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintMotor2D.MaxTorque">
             <summary>
             Return max torque.
             
             Or
             Set max torque.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintMotor2D.CorrectionFactor">
             <summary>
             Return correction factor.
             
             Or
             Set correction factor.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ConstraintMouse2D">
             <summary>
             2D mouse constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMouse2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMouse2D.SetTarget(Urho.Vector2)">
             <summary>
             Set target.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMouse2D.SetMaxForce(System.Single)">
             <summary>
             Set max force.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMouse2D.SetFrequencyHz(System.Single)">
             <summary>
             Set frequency Hz.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMouse2D.SetDampingRatio(System.Single)">
             <summary>
             Set damping ratio.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMouse2D.GetTarget">
             <summary>
             Return target.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMouse2D.GetMaxForce">
             <summary>
             Return max force.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMouse2D.GetFrequencyHz">
             <summary>
             Return frequency Hz.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintMouse2D.GetDampingRatio">
             <summary>
             Return damping ratio.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintMouse2D.Target">
             <summary>
             Return target.
             
             Or
             Set target.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintMouse2D.MaxForce">
             <summary>
             Return max force.
             
             Or
             Set max force.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintMouse2D.FrequencyHz">
             <summary>
             Return frequency Hz.
             
             Or
             Set frequency Hz.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintMouse2D.DampingRatio">
             <summary>
             Return damping ratio.
             
             Or
             Set damping ratio.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ConstraintPrismatic2D">
             <summary>
             2D prismatic constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.SetAnchor(Urho.Vector2)">
             <summary>
             Set anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.SetAxis(Urho.Vector2)">
             <summary>
             Set axis.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.SetEnableLimit(System.Boolean)">
             <summary>
             Set enable limit.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.SetLowerTranslation(System.Single)">
             <summary>
             Set lower translation.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.SetUpperTranslation(System.Single)">
             <summary>
             Set upper translation.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.SetEnableMotor(System.Boolean)">
             <summary>
             Set enable motor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.SetMaxMotorForce(System.Single)">
             <summary>
             Set maxmotor force.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.SetMotorSpeed(System.Single)">
             <summary>
             Set motor speed.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.GetAnchor">
             <summary>
             Return anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.GetAxis">
             <summary>
             Return axis.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.GetEnableLimit">
             <summary>
             Return enable limit.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.GetLowerTranslation">
             <summary>
             Return lower translation.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.GetUpperTranslation">
             <summary>
             Return upper translation.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.GetEnableMotor">
             <summary>
             Return enable motor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.GetMaxMotorForce">
             <summary>
             Return maxmotor force.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPrismatic2D.GetMotorSpeed">
             <summary>
             Return motor speed.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPrismatic2D.Anchor">
             <summary>
             Return anchor.
             
             Or
             Set anchor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPrismatic2D.Axis">
             <summary>
             Return axis.
             
             Or
             Set axis.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPrismatic2D.EnableLimit">
             <summary>
             Return enable limit.
             
             Or
             Set enable limit.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPrismatic2D.LowerTranslation">
             <summary>
             Return lower translation.
             
             Or
             Set lower translation.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPrismatic2D.UpperTranslation">
             <summary>
             Return upper translation.
             
             Or
             Set upper translation.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPrismatic2D.EnableMotor">
             <summary>
             Return enable motor.
             
             Or
             Set enable motor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPrismatic2D.MaxMotorForce">
             <summary>
             Return maxmotor force.
             
             Or
             Set maxmotor force.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPrismatic2D.MotorSpeed">
             <summary>
             Return motor speed.
             
             Or
             Set motor speed.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ConstraintPulley2D">
             <summary>
             2D pulley constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPulley2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPulley2D.SetOwnerBodyGroundAnchor(Urho.Vector2)">
             <summary>
             Set other body ground anchor point.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPulley2D.SetOtherBodyGroundAnchor(Urho.Vector2)">
             <summary>
             Set other body ground anchor point.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPulley2D.SetOwnerBodyAnchor(Urho.Vector2)">
             <summary>
             Set owner body anchor point.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPulley2D.SetOtherBodyAnchor(Urho.Vector2)">
             <summary>
             Set other body anchor point.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPulley2D.SetRatio(System.Single)">
             <summary>
             Set ratio.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPulley2D.GetOwnerBodyGroundAnchor">
             <summary>
             Return owner body ground anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPulley2D.GetOtherBodyGroundAnchor">
             <summary>
             return other body ground anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPulley2D.GetOwnerBodyAnchor">
             <summary>
             Return owner body anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPulley2D.GetOtherBodyAnchor">
             <summary>
             Return other body anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintPulley2D.GetRatio">
             <summary>
             Return ratio.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPulley2D.OwnerBodyGroundAnchor">
             <summary>
             Return owner body ground anchor.
             
             Or
             Set other body ground anchor point.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPulley2D.OtherBodyGroundAnchor">
             <summary>
             return other body ground anchor.
             
             Or
             Set other body ground anchor point.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPulley2D.OwnerBodyAnchor">
             <summary>
             Return owner body anchor.
             
             Or
             Set owner body anchor point.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPulley2D.OtherBodyAnchor">
             <summary>
             Return other body anchor.
             
             Or
             Set other body anchor point.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintPulley2D.Ratio">
             <summary>
             Return ratio.
             
             Or
             Set ratio.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ConstraintRevolute2D">
             <summary>
             2D revolute constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.SetAnchor(Urho.Vector2)">
             <summary>
             Set anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.SetEnableLimit(System.Boolean)">
             <summary>
             Set enable limit.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.SetLowerAngle(System.Single)">
             <summary>
             Set lower angle.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.SetUpperAngle(System.Single)">
             <summary>
             Set upper angle.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.SetEnableMotor(System.Boolean)">
             <summary>
             Set enable motor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.SetMotorSpeed(System.Single)">
             <summary>
             Set motor speed.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.SetMaxMotorTorque(System.Single)">
             <summary>
             Set max motor torque.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.GetAnchor">
             <summary>
             Return anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.GetEnableLimit">
             <summary>
             Return enable limit.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.GetLowerAngle">
             <summary>
             Return lower angle.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.GetUpperAngle">
             <summary>
             Return upper angle.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.GetEnableMotor">
             <summary>
             Return enable motor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.GetMotorSpeed">
             <summary>
             Return motor speed.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRevolute2D.GetMaxMotorTorque">
             <summary>
             Return max motor torque.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintRevolute2D.Anchor">
             <summary>
             Return anchor.
             
             Or
             Set anchor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintRevolute2D.EnableLimit">
             <summary>
             Return enable limit.
             
             Or
             Set enable limit.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintRevolute2D.LowerAngle">
             <summary>
             Return lower angle.
             
             Or
             Set lower angle.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintRevolute2D.UpperAngle">
             <summary>
             Return upper angle.
             
             Or
             Set upper angle.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintRevolute2D.EnableMotor">
             <summary>
             Return enable motor.
             
             Or
             Set enable motor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintRevolute2D.MotorSpeed">
             <summary>
             Return motor speed.
             
             Or
             Set motor speed.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintRevolute2D.MaxMotorTorque">
             <summary>
             Return max motor torque.
             
             Or
             Set max motor torque.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ConstraintRope2D">
             <summary>
             2D rope constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRope2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRope2D.SetOwnerBodyAnchor(Urho.Vector2)">
             <summary>
             Set owner body anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRope2D.SetOtherBodyAnchor(Urho.Vector2)">
             <summary>
             Set other body anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRope2D.SetMaxLength(System.Single)">
             <summary>
             Set max length.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRope2D.GetOwnerBodyAnchor">
             <summary>
             Return owner body anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRope2D.GetOtherBodyAnchor">
             <summary>
             Return other body anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintRope2D.GetMaxLength">
             <summary>
             Return max length.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintRope2D.OwnerBodyAnchor">
             <summary>
             Return owner body anchor.
             
             Or
             Set owner body anchor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintRope2D.OtherBodyAnchor">
             <summary>
             Return other body anchor.
             
             Or
             Set other body anchor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintRope2D.MaxLength">
             <summary>
             Return max length.
             
             Or
             Set max length.
             
             </summary>
            </member>
        <member name="T:Urho.Physics.ConstraintType">
             <summary>
             Supported constraint types.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ConstraintWeld2D">
             <summary>
             2D weld constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWeld2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWeld2D.SetAnchor(Urho.Vector2)">
             <summary>
             Set anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWeld2D.SetFrequencyHz(System.Single)">
             <summary>
             Set frequency Hz.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWeld2D.SetDampingRatio(System.Single)">
             <summary>
             Set damping ratio.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWeld2D.GetAnchor">
             <summary>
             Return anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWeld2D.GetFrequencyHz">
             <summary>
             Return frequency Hz.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWeld2D.GetDampingRatio">
             <summary>
             Return damping ratio.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintWeld2D.Anchor">
             <summary>
             Return anchor.
             
             Or
             Set anchor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintWeld2D.FrequencyHz">
             <summary>
             Return frequency Hz.
             
             Or
             Set frequency Hz.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintWeld2D.DampingRatio">
             <summary>
             Return damping ratio.
             
             Or
             Set damping ratio.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ConstraintWheel2D">
             <summary>
             2D wheel constraint component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.SetAnchor(Urho.Vector2)">
             <summary>
             Set anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.SetAxis(Urho.Vector2)">
             <summary>
             Set axis.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.SetEnableMotor(System.Boolean)">
             <summary>
             Set enable motor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.SetMaxMotorTorque(System.Single)">
             <summary>
             Set max motor torque.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.SetMotorSpeed(System.Single)">
             <summary>
             Set motor speed.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.SetFrequencyHz(System.Single)">
             <summary>
             Set frequency Hz.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.SetDampingRatio(System.Single)">
             <summary>
             Set damping ratio.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.GetAnchor">
             <summary>
             Return anchor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.GetAxis">
             <summary>
             Return axis.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.GetEnableMotor">
             <summary>
             Return enable motor.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.GetMaxMotorTorque">
             <summary>
             Return maxMotor torque.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.GetMotorSpeed">
             <summary>
             Return motor speed.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.GetFrequencyHz">
             <summary>
             Return frequency Hz.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ConstraintWheel2D.GetDampingRatio">
             <summary>
             Return damping ratio.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintWheel2D.Anchor">
             <summary>
             Return anchor.
             
             Or
             Set anchor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintWheel2D.Axis">
             <summary>
             Return axis.
             
             Or
             Set axis.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintWheel2D.EnableMotor">
             <summary>
             Return enable motor.
             
             Or
             Set enable motor.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintWheel2D.MaxMotorTorque">
             <summary>
             Return maxMotor torque.
             
             Or
             Set max motor torque.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintWheel2D.MotorSpeed">
             <summary>
             Return motor speed.
             
             Or
             Set motor speed.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintWheel2D.FrequencyHz">
             <summary>
             Return frequency Hz.
             
             Or
             Set frequency Hz.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ConstraintWheel2D.DampingRatio">
             <summary>
             Return damping ratio.
             
             Or
             Set damping ratio.
             
             </summary>
            </member>
        <member name="T:Urho.Context">
             <summary>
             Urho3D execution context. Provides access to subsystems, object factories and attributes, and event receivers.
             </summary>
            </member>
        <member name="M:Urho.Context.CreateObject(Urho.StringHash)">
             <summary>
             Create an object by type hash. Return pointer to it or null if no factory found.
             </summary>
            </member>
        <member name="M:Urho.Context.RegisterFactory(Urho.ObjectFactory)">
             <summary>
             Register a factory for an object type.
             </summary>
            </member>
        <member name="M:Urho.Context.RegisterSubsystem(Urho.UrhoObject)">
             <summary>
             Register a subsystem.
             </summary>
            </member>
        <member name="M:Urho.Context.RemoveSubsystem(Urho.StringHash)">
             <summary>
             Remove a subsystem.
             </summary>
            </member>
        <member name="M:Urho.Context.RemoveAllAttributes(Urho.StringHash)">
             <summary>
             Remove all object attributes.
             </summary>
            </member>
        <member name="M:Urho.Context.RequireSDL(System.UInt32)">
             <summary>
             Initialises the specified SDL systems, if not already. Returns true if successful. This call must be matched with ReleaseSDL() when SDL functions are no longer required, even if this call fails.
             </summary>
            </member>
        <member name="M:Urho.Context.ReleaseSDL">
             <summary>
             Indicate that you are done with using SDL. Must be called after using RequireSDL().
             </summary>
            </member>
        <member name="M:Urho.Context.CopyBaseAttributes(Urho.StringHash,Urho.StringHash)">
             <summary>
             Copy base class attributes to derived class.
             </summary>
            </member>
        <member name="M:Urho.Context.GetSubsystem(Urho.StringHash)">
             <summary>
             Return subsystem by type.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,Urho.Vector3)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,Urho.IntRect)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,Urho.Color)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,Urho.Vector2)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,Urho.Vector4)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,Urho.IntVector2)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,Urho.Quaternion)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,Urho.Matrix4)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,Urho.Matrix3)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,Urho.Matrix3x4)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,System.Int32)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,System.Single)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,System.String)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.SetGlobalVar(Urho.StringHash,System.Boolean)">
             <summary>
             Set global variable with the respective key and value.
             </summary>
            </member>
        <member name="M:Urho.Context.GetEventSender">
             <summary>
             Return active event sender. Null outside event handling.
             </summary>
            </member>
        <member name="M:Urho.Context.GetEventHandler">
             <summary>
             Return active event handler. Set by Object. Null outside event handling.
             </summary>
            </member>
        <member name="M:Urho.Context.GetTypeName(Urho.StringHash)">
             <summary>
             Return object type name from hash, or empty if unknown.
             </summary>
            </member>
        <member name="M:Urho.Context.GetEventReceivers(Urho.UrhoObject,Urho.StringHash)">
             <summary>
             Return event receivers for a sender and event type, or null if they do not exist.
             </summary>
            </member>
        <member name="M:Urho.Context.GetEventReceivers(Urho.StringHash)">
             <summary>
             Return event receivers for an event type, or null if they do not exist.
             </summary>
            </member>
        <member name="M:Urho.Context.RegisterPlugin(Urho.Plugin)">
             <summary>
             Register a subsystem.
             </summary>
            </member>
        <member name="M:Urho.Context.RemovePlugin(Urho.StringHash)">
             <summary>
             Remove a subsystem.
             </summary>
            </member>
        <member name="M:Urho.Context.GetPlugin(Urho.StringHash)">
             <summary>
             Return subsystem by type.
             </summary>
            </member>
        <member name="P:Urho.Context.EventSender">
             <summary>
             Return active event sender. Null outside event handling.
             </summary>
            </member>
        <member name="P:Urho.Context.EventHandler">
             <summary>
             Return active event handler. Set by Object. Null outside event handling.
             </summary>
            </member>
        <member name="T:Urho.ConvexData">
             <summary>
             Convex hull geometry data.
             </summary>
            </member>
        <member name="T:Urho.Gui.Corner">
             <summary>
             %UI element corners.
             </summary>
            </member>
        <member name="T:Urho.CreateMode">
             <summary>
             Component and child node creation mode for networking.
             </summary>
            </member>
        <member name="T:Urho.Navigation.CrowdAgent">
             <summary>
             Crowd agent component, requires a CrowdManager component in the scene. When not set explicitly, agent's radius and height are defaulted to navigation mesh's agent radius and height, respectively.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.DrawDebugGeometry(System.Boolean)">
             <summary>
             Draw debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Draw debug feelers.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.SetTargetPosition(Urho.Vector3)">
             <summary>
             Submit a new target position request for this agent.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.SetTargetVelocity(Urho.Vector3)">
             <summary>
             Submit a new target velocity request for this agent.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.ResetTarget">
             <summary>
             Reset any target request for the specified agent. Note that the agent will continue to move into the current direction; set a zero target velocity to actually stop.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.SetUpdateNodePosition(System.Boolean)">
             <summary>
             Update the node position. When set to false, the node position should be updated by other means (e.g. using Physics) in response to the E_CROWD_AGENT_REPOSITION event.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.SetMaxAccel(System.Single)">
             <summary>
             Set the agent's max acceleration.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.SetMaxSpeed(System.Single)">
             <summary>
             Set the agent's max velocity.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.SetRadius(System.Single)">
             <summary>
             Set the agent's radius.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.SetHeight(System.Single)">
             <summary>
             Set the agent's height.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.SetQueryFilterType(System.UInt32)">
             <summary>
             Set the agent's query filter type.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.SetObstacleAvoidanceType(System.UInt32)">
             <summary>
             Set the agent's obstacle avoidance type.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.SetNavigationQuality(Urho.Navigation.NavigationQuality)">
             <summary>
             Set the agent's navigation quality.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.SetNavigationPushiness(Urho.Navigation.NavigationPushiness)">
             <summary>
             Set the agent's navigation pushiness.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetPosition">
             <summary>
             Return the agent's position.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetDesiredVelocity">
             <summary>
             Return the agent's desired velocity.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetActualVelocity">
             <summary>
             Return the agent's actual velocity.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetTargetPosition">
             <summary>
             Return the agent's requested target position.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetTargetVelocity">
             <summary>
             Return the agent's requested target velocity.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetRequestedTargetType">
             <summary>
             Return the agent's requested target type, if any.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetAgentState">
             <summary>
             Return the agent's  state.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetTargetState">
             <summary>
             Return the agent's target state.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetUpdateNodePosition">
             <summary>
             Return true when the node's position should be updated by the CrowdManager.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetAgentCrowdId">
             <summary>
             Return the agent id.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetMaxAccel">
             <summary>
             Get the agent's max acceleration.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetMaxSpeed">
             <summary>
             Get the agent's max velocity.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetRadius">
             <summary>
             Get the agent's radius.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetHeight">
             <summary>
             Get the agent's height.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetQueryFilterType">
             <summary>
             Get the agent's query filter type.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetObstacleAvoidanceType">
             <summary>
             Get the agent's obstacle avoidance type.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetNavigationQuality">
             <summary>
             Get the agent's navigation quality.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.GetNavigationPushiness">
             <summary>
             Get the agent's navigation pushiness.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.HasRequestedTarget">
             <summary>
             Return true when the agent has a target.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.HasArrived">
             <summary>
             Return true when the agent has arrived at its target.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdAgent.IsInCrowd">
             <summary>
             Return true when the agent is in crowd (being managed by a crowd manager).
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.TargetPosition">
             <summary>
             Return the agent's requested target position.
             
             Or
             Submit a new target position request for this agent.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.TargetVelocity">
             <summary>
             Return the agent's requested target velocity.
             
             Or
             Submit a new target velocity request for this agent.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.UpdateNodePosition">
             <summary>
             Return true when the node's position should be updated by the CrowdManager.
             
             Or
             Update the node position. When set to false, the node position should be updated by other means (e.g. using Physics) in response to the E_CROWD_AGENT_REPOSITION event.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.MaxAccel">
             <summary>
             Get the agent's max acceleration.
             
             Or
             Set the agent's max acceleration.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.MaxSpeed">
             <summary>
             Get the agent's max velocity.
             
             Or
             Set the agent's max velocity.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.Radius">
             <summary>
             Get the agent's radius.
             
             Or
             Set the agent's radius.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.Height">
             <summary>
             Get the agent's height.
             
             Or
             Set the agent's height.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.QueryFilterType">
             <summary>
             Get the agent's query filter type.
             
             Or
             Set the agent's query filter type.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.ObstacleAvoidanceType">
             <summary>
             Get the agent's obstacle avoidance type.
             
             Or
             Set the agent's obstacle avoidance type.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.NavigationQuality">
             <summary>
             Get the agent's navigation quality.
             
             Or
             Set the agent's navigation quality.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.NavigationPushiness">
             <summary>
             Get the agent's navigation pushiness.
             
             Or
             Set the agent's navigation pushiness.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.Position">
             <summary>
             Return the agent's position.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.DesiredVelocity">
             <summary>
             Return the agent's desired velocity.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.ActualVelocity">
             <summary>
             Return the agent's actual velocity.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.RequestedTargetType">
             <summary>
             Return the agent's requested target type, if any.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.AgentState">
             <summary>
             Return the agent's  state.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.TargetState">
             <summary>
             Return the agent's target state.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.AgentCrowdId">
             <summary>
             Return the agent id.
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdAgent.InCrowd">
             <summary>
             Return true when the agent is in crowd (being managed by a crowd manager).
             
             </summary>
            </member>
        <member name="T:Urho.Navigation.CrowdAgentState">
             <summary>
             The agent is not in a valid state.
             </summary>
            </member>
        <member name="T:Urho.Navigation.CrowdManager">
             <summary>
             Crowd manager scene component. Should be added only to the root scene node.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Draw the agents' pathing debug data.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.DrawDebugGeometry(System.Boolean)">
             <summary>
             Add debug geometry to the debug renderer.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.SetCrowdTarget(Urho.Vector3,Urho.Node)">
             <summary>
             Set the crowd target position. The target position is set to all crowd agents found in the specified node. Defaulted to scene node.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.SetCrowdVelocity(Urho.Vector3,Urho.Node)">
             <summary>
             Set the crowd move velocity. The move velocity is applied to all crowd agents found in the specified node. Defaulted to scene node.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.ResetCrowdTarget(Urho.Node)">
             <summary>
             Reset any crowd target for all crowd agents found in the specified node. Defaulted to scene node.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.SetMaxAgents(System.UInt32)">
             <summary>
             Set the maximum number of agents.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.SetMaxAgentRadius(System.Single)">
             <summary>
             Set the maximum radius of any agent.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.SetNavigationMesh(Urho.Navigation.NavigationMesh)">
             <summary>
             Assigns the navigation mesh for the crowd.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.SetIncludeFlags(System.UInt32,System.UInt16)">
             <summary>
             Set the include flags for the specified query filter type.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.SetExcludeFlags(System.UInt32,System.UInt16)">
             <summary>
             Set the exclude flags for the specified query filter type.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.SetAreaCost(System.UInt32,System.UInt32,System.Single)">
             <summary>
             Set the cost of an area for the specified query filter type.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.SetObstacleAvoidanceParams(System.UInt32,Urho.Navigation.CrowdObstacleAvoidanceParams)">
             <summary>
             Set the params for the specified obstacle avoidance type.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.FindNearestPoint(Urho.Vector3,System.Int32,System.UInt32*)">
             <summary>
             Find the nearest point on the navigation mesh to a given point using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.MoveAlongSurface(Urho.Vector3,Urho.Vector3,System.Int32,System.Int32)">
             <summary>
             Try to move along the surface from one point to another using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetRandomPoint(System.Int32,System.UInt32*)">
             <summary>
             Return a random point on the navigation mesh using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetRandomPointInCircle(Urho.Vector3,System.Single,System.Int32,System.UInt32*)">
             <summary>
             Return a random point on the navigation mesh within a circle using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type. The circle radius is only a guideline and in practice the returned point may be further away.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetDistanceToWall(Urho.Vector3,System.Single,System.Int32,Urho.Vector3*,Urho.Vector3*)">
             <summary>
             Return distance to wall from a point using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type. Maximum search radius must be specified.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.Raycast(Urho.Vector3,Urho.Vector3,System.Int32,Urho.Vector3*)">
             <summary>
             Perform a walkability raycast on the navigation mesh between start and end using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type. Return the point where a wall was hit, or the end point if no walls.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetMaxAgents">
             <summary>
             Get the maximum number of agents.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetMaxAgentRadius">
             <summary>
             Get the maximum radius of any agent.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetNavigationMesh">
             <summary>
             Get the Navigation mesh assigned to the crowd.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetNumQueryFilterTypes">
             <summary>
             Get the number of configured query filter types.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetNumAreas(System.UInt32)">
             <summary>
             Get the number of configured area in the specified query filter type.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetIncludeFlags(System.UInt32)">
             <summary>
             Get the include flags for the specified query filter type.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetExcludeFlags(System.UInt32)">
             <summary>
             Get the exclude flags for the specified query filter type.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetAreaCost(System.UInt32,System.UInt32)">
             <summary>
             Get the cost of an area for the specified query filter type.
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetNumObstacleAvoidanceTypes">
             <summary>
             Get the number of configured obstacle avoidance types.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.CrowdManager.GetObstacleAvoidanceParams(System.UInt32)">
             <summary>
             Get the params for the specified obstacle avoidance type.
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdManager.MaxAgents">
             <summary>
             Get the maximum number of agents.
             
             Or
             Set the maximum number of agents.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdManager.MaxAgentRadius">
             <summary>
             Get the maximum radius of any agent.
             
             Or
             Set the maximum radius of any agent.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdManager.NavigationMesh">
             <summary>
             Get the Navigation mesh assigned to the crowd.
             
             Or
             Assigns the navigation mesh for the crowd.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdManager.NumQueryFilterTypes">
             <summary>
             Get the number of configured query filter types.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.CrowdManager.NumObstacleAvoidanceTypes">
             <summary>
             Get the number of configured obstacle avoidance types.
             
             </summary>
            </member>
        <member name="T:Urho.CubeMapFace">
             <summary>
             Cube map faces.
             </summary>
            </member>
        <member name="T:Urho.CubeMapLayout">
             <summary>
             Cubemap single image layout modes.
             </summary>
            </member>
        <member name="T:Urho.CullMode">
             <summary>
             Culling mode.
             </summary>
            </member>
        <member name="T:Urho.Gui.Cursor">
             <summary>
             Mouse cursor %UI element.
             </summary>
            </member>
        <member name="M:Urho.Gui.Cursor.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Cursor.DefineShape(System.String,Urho.Resources.Image,Urho.IntRect,Urho.IntVector2)">
             <summary>
             Define a shape.
             </summary>
            </member>
        <member name="M:Urho.Gui.Cursor.DefineShape(Urho.Gui.CursorShape,Urho.Resources.Image,Urho.IntRect,Urho.IntVector2)">
             <summary>
             Define a shape.
             </summary>
            </member>
        <member name="M:Urho.Gui.Cursor.SetShape(System.String)">
             <summary>
             Set current shape.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Cursor.SetShape(Urho.Gui.CursorShape)">
             <summary>
             Set current shape.
             </summary>
            </member>
        <member name="M:Urho.Gui.Cursor.SetUseSystemShapes(System.Boolean)">
             <summary>
             Set whether to use system default shapes. Is only possible when the OS mouse cursor has been set visible from the Input subsystem.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Cursor.GetShape">
             <summary>
             Get current shape.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Cursor.GetUseSystemShapes">
             <summary>
             Return whether is using system default shapes.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Cursor.ApplyOSCursorShape">
             <summary>
             Apply pending OS cursor shape. Called by UI. No-op when the OS mouse pointer is not used.
             </summary>
            </member>
        <member name="P:Urho.Gui.Cursor.Shape">
             <summary>
             Get current shape.
             
             Or
             Set current shape.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Cursor.UseSystemShapes">
             <summary>
             Return whether is using system default shapes.
             
             Or
             Set whether to use system default shapes. Is only possible when the OS mouse cursor has been set visible from the Input subsystem.
             
             </summary>
            </member>
        <member name="T:Urho.Gui.CursorShape">
             <summary>
             %Cursor shapes recognized by the UI subsystem.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.CurveType">
             <summary>
             Curve type.
             </summary>
            </member>
        <member name="T:Urho.CustomGeometry">
             <summary>
             Custom geometry component.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. Drawable must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.GetLodGeometry(System.UInt32,System.UInt32)">
             <summary>
             Return the geometry for a specific LOD level.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.GetNumOccluderTriangles">
             <summary>
             Return number of occlusion geometry triangles.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.DrawOcclusion(Urho.OcclusionBuffer)">
             <summary>
             Draw to occlusion buffer. Return true if did not run out of triangles.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.Clear">
             <summary>
             Clear all geometries.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.SetNumGeometries(System.UInt32)">
             <summary>
             Set number of geometries.
             
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.SetDynamic(System.Boolean)">
             <summary>
             Set vertex buffer dynamic mode. A dynamic buffer should be faster to update frequently. Effective at the next Commit() call.
             
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.BeginGeometry(System.UInt32,Urho.PrimitiveType)">
             <summary>
             Begin defining a geometry. Clears existing vertices in that index.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.DefineVertex(Urho.Vector3)">
             <summary>
             Define a vertex position. This begins a new vertex.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.DefineNormal(Urho.Vector3)">
             <summary>
             Define a vertex normal.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.DefineColor(Urho.Color)">
             <summary>
             Define a vertex color.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.DefineTexCoord(Urho.Vector2)">
             <summary>
             Define a vertex UV coordinate.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.DefineTangent(Urho.Vector4)">
             <summary>
             Define a vertex tangent.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.DefineGeometry(System.UInt32,Urho.PrimitiveType,System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Set the primitive type, number of vertices and elements in a geometry, after which the vertices can be edited with GetVertex(). An alternative to BeginGeometry() / DefineVertex().
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.Commit">
             <summary>
             Update vertex buffer and calculate the bounding box. Call after finishing defining geometry.
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.SetMaterial(Urho.Material)">
             <summary>
             Set material on all geometries.
             
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.SetMaterial(System.UInt32,Urho.Material)">
             <summary>
             Set material on one geometry. Return true if successful.
             
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.GetNumGeometries">
             <summary>
             Return number of geometries.
             
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.GetNumVertices(System.UInt32)">
             <summary>
             Return number of vertices in a geometry.
             
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.IsDynamic">
             <summary>
             Return whether vertex buffer dynamic mode is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.GetMaterial(System.UInt32)">
             <summary>
             Return material by geometry index.
             
             </summary>
            </member>
        <member name="M:Urho.CustomGeometry.GetVertex(System.UInt32,System.UInt32)">
             <summary>
             Return a vertex in a geometry for editing, or null if out of bounds. After the edits are finished, calling Commit() updates  the vertex buffer.
             </summary>
            </member>
        <member name="P:Urho.CustomGeometry.NumOccluderTriangles">
             <summary>
             Return number of occlusion geometry triangles.
             </summary>
            </member>
        <member name="P:Urho.CustomGeometry.NumGeometries">
             <summary>
             Return number of geometries.
             
             Or
             Set number of geometries.
             
             </summary>
            </member>
        <member name="P:Urho.CustomGeometry.Dynamic">
             <summary>
             Return whether vertex buffer dynamic mode is enabled.
             
             Or
             Set vertex buffer dynamic mode. A dynamic buffer should be faster to update frequently. Effective at the next Commit() call.
             
             </summary>
            </member>
        <member name="T:Urho.Physics.CustomRaycastVehicle">
             <summary>
             Create the rigid body, or re-add to the physics world with changed flags. Calls UpdateMass().
             </summary>
            </member>
        <member name="T:Urho.DBAPI">
             <summary>
             Supported database API.
             </summary>
            </member>
        <member name="T:Urho.Database">
             <summary>
             %Database subsystem. Manage database connections.
             </summary>
            </member>
        <member name="M:Urho.Database.GetAPI">
             <summary>
             Return the underlying database API.
             </summary>
            </member>
        <member name="M:Urho.Database.Connect(System.String)">
             <summary>
             Create new database connection. Return 0 if failed.
             </summary>
            </member>
        <member name="M:Urho.Database.Disconnect(Urho.DbConnection)">
             <summary>
             Disconnect a database connection. The connection object pointer should not be used anymore after this.
             </summary>
            </member>
        <member name="M:Urho.Database.IsPooling">
             <summary>
             Return true when using internal database connection pool. The internal database pool is managed by the Database subsystem itself and should not be confused with ODBC connection pool option when ODBC is being used.
             
             </summary>
            </member>
        <member name="M:Urho.Database.GetPoolSize">
             <summary>
             Get internal database connection pool size.
             
             </summary>
            </member>
        <member name="M:Urho.Database.SetPoolSize(System.UInt32)">
             <summary>
             Set internal database connection pool size.
             
             </summary>
            </member>
        <member name="P:Urho.Database.API">
             <summary>
             Return the underlying database API.
             </summary>
            </member>
        <member name="P:Urho.Database.Pooling">
             <summary>
             Return true when using internal database connection pool. The internal database pool is managed by the Database subsystem itself and should not be confused with ODBC connection pool option when ODBC is being used.
             
             </summary>
            </member>
        <member name="P:Urho.Database.PoolSize">
             <summary>
             Get internal database connection pool size.
             
             Or
             Set internal database connection pool size.
             
             </summary>
            </member>
        <member name="T:Urho.DebugHud">
             <summary>
             Displays rendering stats and profiling information.
             </summary>
            </member>
        <member name="M:Urho.DebugHud.Update">
             <summary>
             Update. Called by HandlePostUpdate().
             </summary>
            </member>
        <member name="M:Urho.DebugHud.SetDefaultStyle(Urho.Resources.XmlFile)">
             <summary>
             Set UI elements' style from an XML file.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.SetMode(System.UInt32)">
             <summary>
             Set elements to show.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.SetProfilerMaxDepth(System.UInt32)">
             <summary>
             Set maximum profiler block depth, default unlimited.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.SetProfilerInterval(System.Single)">
             <summary>
             Set profiler accumulation interval in seconds.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.SetUseRendererStats(System.Boolean)">
             <summary>
             Set whether to show 3D geometry primitive/batch count only. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.Toggle(System.UInt32)">
             <summary>
             Toggle elements.
             </summary>
            </member>
        <member name="M:Urho.DebugHud.ToggleAll">
             <summary>
             Toggle all elements.
             </summary>
            </member>
        <member name="M:Urho.DebugHud.GetDefaultStyle">
             <summary>
             Return the UI style file.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.GetStatsText">
             <summary>
             Return rendering stats text.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.GetModeText">
             <summary>
             Return rendering mode text.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.GetProfilerText">
             <summary>
             Return profiler text.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.GetMemoryText">
             <summary>
             Return memory text.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.GetMode">
             <summary>
             Return currently shown elements.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.GetProfilerMaxDepth">
             <summary>
             Return maximum profiler block depth.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.GetProfilerInterval">
             <summary>
             Return profiler accumulation interval in seconds.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.GetUseRendererStats">
             <summary>
             Return whether showing 3D geometry primitive/batch count only.
             
             </summary>
            </member>
        <member name="M:Urho.DebugHud.SetAppStats(System.String,System.String)">
             <summary>
             Set application-specific stats.
             </summary>
            </member>
        <member name="M:Urho.DebugHud.ResetAppStats(System.String)">
             <summary>
             Reset application-specific stats. Return true if it was erased successfully.
             </summary>
            </member>
        <member name="M:Urho.DebugHud.ClearAppStats">
             <summary>
             Clear all application-specific stats.
             </summary>
            </member>
        <member name="P:Urho.DebugHud.DefaultStyle">
             <summary>
             Return the UI style file.
             
             Or
             Set UI elements' style from an XML file.
             
             </summary>
            </member>
        <member name="P:Urho.DebugHud.Mode">
             <summary>
             Return currently shown elements.
             
             Or
             Set elements to show.
             
             </summary>
            </member>
        <member name="P:Urho.DebugHud.ProfilerMaxDepth">
             <summary>
             Return maximum profiler block depth.
             
             Or
             Set maximum profiler block depth, default unlimited.
             
             </summary>
            </member>
        <member name="P:Urho.DebugHud.ProfilerInterval">
             <summary>
             Return profiler accumulation interval in seconds.
             
             Or
             Set profiler accumulation interval in seconds.
             
             </summary>
            </member>
        <member name="P:Urho.DebugHud.UseRendererStats">
             <summary>
             Return whether showing 3D geometry primitive/batch count only.
             
             Or
             Set whether to show 3D geometry primitive/batch count only. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.DebugHud.StatsText">
             <summary>
             Return rendering stats text.
             
             </summary>
            </member>
        <member name="P:Urho.DebugHud.ModeText">
             <summary>
             Return rendering mode text.
             
             </summary>
            </member>
        <member name="P:Urho.DebugHud.ProfilerText">
             <summary>
             Return profiler text.
             
             </summary>
            </member>
        <member name="P:Urho.DebugHud.MemoryText">
             <summary>
             Return memory text.
             
             </summary>
            </member>
        <member name="T:Urho.DebugRenderer">
             <summary>
             Debug geometry rendering component. Should be added only to the root scene node.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.SetLineAntiAlias(System.Boolean)">
             <summary>
             Set line antialiasing on/off. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.SetView(Urho.Camera)">
             <summary>
             Set the camera viewpoint. Call before rendering, or before adding geometry if you want to use culling.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddLine(Urho.Vector3,Urho.Vector3,Urho.Color,System.Boolean)">
             <summary>
             Add a line.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddLine(Urho.Vector3,Urho.Vector3,System.UInt32,System.Boolean)">
             <summary>
             Add a line with color already converted to unsigned.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddTriangle(Urho.Vector3,Urho.Vector3,Urho.Vector3,Urho.Color,System.Boolean)">
             <summary>
             Add a solid triangle.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddTriangle(Urho.Vector3,Urho.Vector3,Urho.Vector3,System.UInt32,System.Boolean)">
             <summary>
             Add a solid triangle with color already converted to unsigned.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddPolygon(Urho.Vector3,Urho.Vector3,Urho.Vector3,Urho.Vector3,Urho.Color,System.Boolean)">
             <summary>
             Add a solid quadrangular polygon.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddPolygon(Urho.Vector3,Urho.Vector3,Urho.Vector3,Urho.Vector3,System.UInt32,System.Boolean)">
             <summary>
             Add a solid quadrangular polygon with color already converted to unsigned.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddNode(Urho.Node,System.Single,System.Boolean)">
             <summary>
             Add a scene node represented as its coordinate axes.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddBoundingBox(Urho.BoundingBox,Urho.Color,System.Boolean,System.Boolean)">
             <summary>
             Add a bounding box.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddBoundingBox(Urho.BoundingBox,Urho.Matrix3x4,Urho.Color,System.Boolean,System.Boolean)">
             <summary>
             Add a bounding box with transform.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddFrustum(Urho.Frustum,Urho.Color,System.Boolean)">
             <summary>
             Add a frustum.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddPolyhedron(Urho.Polyhedron,Urho.Color,System.Boolean)">
             <summary>
             Add a polyhedron.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddSphere(Urho.Sphere,Urho.Color,System.Boolean)">
             <summary>
             Add a sphere.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddSphereSector(Urho.Sphere,Urho.Quaternion,System.Single,System.Boolean,Urho.Color,System.Boolean)">
             <summary>
             Add a sphere sector. Angle ranges from 0 to 360. Identity Quaternion yields the filled portion of the sector upwards.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddCylinder(Urho.Vector3,System.Single,System.Single,Urho.Color,System.Boolean)">
             <summary>
             Add a cylinder.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddTriangleMesh(System.Void*,System.UInt32,System.Void*,System.UInt32,System.UInt32,System.UInt32,Urho.Matrix3x4,Urho.Color,System.Boolean)">
             <summary>
             Add a triangle mesh.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddTriangleMesh(System.Void*,System.UInt32,System.UInt32,System.Void*,System.UInt32,System.UInt32,System.UInt32,Urho.Matrix3x4,Urho.Color,System.Boolean)">
             <summary>
             Add a triangle mesh.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddCircle(Urho.Vector3,Urho.Vector3,System.Single,Urho.Color,System.Int32,System.Boolean)">
             <summary>
             Add a circle.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddCross(Urho.Vector3,System.Single,Urho.Color,System.Boolean)">
             <summary>
             Add a cross.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.AddQuad(Urho.Vector3,System.Single,System.Single,Urho.Color,System.Boolean)">
             <summary>
             Add a quad on the XZ plane.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.Render">
             <summary>
             Update vertex buffer and render all debug lines. The viewport and rendertarget should be set before.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.GetLineAntiAlias">
             <summary>
             Return whether line antialiasing is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.GetView">
             <summary>
             Return the view transform.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.GetProjection">
             <summary>
             Return the projection transform.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.GetFrustum">
             <summary>
             Return the view frustum.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.IsInside(Urho.BoundingBox)">
             <summary>
             Check whether a bounding box is inside the view frustum.
             </summary>
            </member>
        <member name="M:Urho.DebugRenderer.HasContent">
             <summary>
             Return whether has something to render.
             </summary>
            </member>
        <member name="P:Urho.DebugRenderer.LineAntiAlias">
             <summary>
             Return whether line antialiasing is enabled.
             
             Or
             Set line antialiasing on/off. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.DebugRenderer.View">
             <summary>
             Return the view transform.
             </summary>
            </member>
        <member name="P:Urho.DebugRenderer.Projection">
             <summary>
             Return the projection transform.
             </summary>
            </member>
        <member name="P:Urho.DebugRenderer.Frustum">
             <summary>
             Return the view frustum.
             </summary>
            </member>
        <member name="T:Urho.DecalSet">
             <summary>
             %Decal renderer component.
             </summary>
            </member>
        <member name="M:Urho.DecalSet.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.DecalSet.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.DecalSet.GetUpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="M:Urho.DecalSet.SetMaterial(Urho.Material)">
             <summary>
             Set material. The material should use a small negative depth bias to avoid Z-fighting.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.SetMaxVertices(System.UInt32)">
             <summary>
             Set maximum number of decal vertices.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.SetMaxIndices(System.UInt32)">
             <summary>
             Set maximum number of decal vertex indices.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.SetOptimizeBufferSize(System.Boolean)">
             <summary>
             Set whether to optimize GPU buffer sizes according to current amount of decals. Default false, which will size the buffers according to the maximum vertices/indices. When true, buffers will be reallocated whenever decals are added/removed, which can be worse for performance.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.AddDecal(Urho.Drawable,Urho.Vector3,Urho.Quaternion,System.Single,System.Single,System.Single,Urho.Vector2,Urho.Vector2,System.Single,System.Single,System.UInt32)">
             <summary>
             Add a decal at world coordinates, using a target drawable's geometry for reference. If the decal needs to move with the target, the decal component should be created to the target's node. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.DecalSet.RemoveDecals(System.UInt32)">
             <summary>
             Remove n oldest decals.
             </summary>
            </member>
        <member name="M:Urho.DecalSet.RemoveAllDecals">
             <summary>
             Remove all decals.
             </summary>
            </member>
        <member name="M:Urho.DecalSet.GetMaterial">
             <summary>
             Return material.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.GetNumDecals">
             <summary>
             Return number of decals.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.GetNumVertices">
             <summary>
             Retur number of vertices in the decals.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.GetNumIndices">
             <summary>
             Retur number of vertex indices in the decals.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.GetMaxVertices">
             <summary>
             Return maximum number of decal vertices.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.GetMaxIndices">
             <summary>
             Return maximum number of decal vertex indices.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.GetOptimizeBufferSize">
             <summary>
             Return whether is optimizing GPU buffer sizes according to current amount of decals.
             
             </summary>
            </member>
        <member name="M:Urho.DecalSet.GetMaterialAttr">
             <summary>
             Return material attribute.
             </summary>
            </member>
        <member name="P:Urho.DecalSet.UpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="P:Urho.DecalSet.Material">
             <summary>
             Return material.
             
             Or
             Set material. The material should use a small negative depth bias to avoid Z-fighting.
             
             </summary>
            </member>
        <member name="P:Urho.DecalSet.MaxVertices">
             <summary>
             Return maximum number of decal vertices.
             
             Or
             Set maximum number of decal vertices.
             
             </summary>
            </member>
        <member name="P:Urho.DecalSet.MaxIndices">
             <summary>
             Return maximum number of decal vertex indices.
             
             Or
             Set maximum number of decal vertex indices.
             
             </summary>
            </member>
        <member name="P:Urho.DecalSet.OptimizeBufferSize">
             <summary>
             Return whether is optimizing GPU buffer sizes according to current amount of decals.
             
             Or
             Set whether to optimize GPU buffer sizes according to current amount of decals. Default false, which will size the buffers according to the maximum vertices/indices. When true, buffers will be reallocated whenever decals are added/removed, which can be worse for performance.
             
             </summary>
            </member>
        <member name="P:Urho.DecalSet.NumDecals">
             <summary>
             Return number of decals.
             
             </summary>
            </member>
        <member name="P:Urho.DecalSet.NumVertices">
             <summary>
             Retur number of vertices in the decals.
             
             </summary>
            </member>
        <member name="P:Urho.DecalSet.NumIndices">
             <summary>
             Retur number of vertex indices in the decals.
             
             </summary>
            </member>
        <member name="P:Urho.DecalSet.MaterialAttr">
             <summary>
             Return material attribute.
             </summary>
            </member>
        <member name="T:Urho.DeferredLightPSVariation">
             <summary>
             Deferred light volume pixels shader variations.
             </summary>
            </member>
        <member name="T:Urho.DeferredLightVSVariation">
             <summary>
             Deferred light volume vertex shader variations.
             </summary>
            </member>
        <member name="T:Urho.DragAndDropMode">
             <summary>
             Drag and drop disabled.
             </summary>
            </member>
        <member name="T:Urho.Drawable">
             <summary>
             Base class for visible components.
             </summary>
            </member>
        <member name="M:Urho.Drawable.RegisterObject(Urho.Context)">
             <summary>
             Register object attributes. Drawable must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetUpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetLodGeometry(System.UInt32,System.UInt32)">
             <summary>
             Return the geometry for a specific LOD level.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetNumOccluderTriangles">
             <summary>
             Return number of occlusion geometry triangles.
             </summary>
            </member>
        <member name="M:Urho.Drawable.DrawOcclusion(Urho.OcclusionBuffer)">
             <summary>
             Draw to occlusion buffer. Return true if did not run out of triangles.
             </summary>
            </member>
        <member name="M:Urho.Drawable.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetDrawDistance(System.Single)">
             <summary>
             Set draw distance.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetShadowDistance(System.Single)">
             <summary>
             Set shadow draw distance.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetLodBias(System.Single)">
             <summary>
             Set LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetViewMask(System.UInt32)">
             <summary>
             Set view mask. Is and'ed with camera's view mask to see if the object should be rendered.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetLightMask(System.UInt32)">
             <summary>
             Set light mask. Is and'ed with light's and zone's light mask to see if the object should be lit.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetShadowMask(System.UInt32)">
             <summary>
             Set shadow mask. Is and'ed with light's light mask and zone's shadow mask to see if the object should be rendered to a shadow map.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetZoneMask(System.UInt32)">
             <summary>
             Set zone mask. Is and'ed with zone's zone mask to see if the object should belong to the zone.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetMaxLights(System.UInt32)">
             <summary>
             Set maximum number of per-pixel lights. Default 0 is unlimited.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetCastShadows(System.Boolean)">
             <summary>
             Set shadowcaster flag.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetOccluder(System.Boolean)">
             <summary>
             Set occlusion flag.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetOccludee(System.Boolean)">
             <summary>
             Set occludee flag.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.MarkForUpdate">
             <summary>
             Mark for update and octree reinsertion. Update is automatically queued when the drawable's scene node moves or changes scale.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetBoundingBox">
             <summary>
             Return local space bounding box. May not be applicable or properly updated on all drawables.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetWorldBoundingBox">
             <summary>
             Return world-space bounding box.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetDrawableFlags">
             <summary>
             Return drawable flags.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetDrawDistance">
             <summary>
             Return draw distance.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetShadowDistance">
             <summary>
             Return shadow draw distance.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetLodBias">
             <summary>
             Return LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetViewMask">
             <summary>
             Return view mask.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetLightMask">
             <summary>
             Return light mask.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetShadowMask">
             <summary>
             Return shadow mask.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetZoneMask">
             <summary>
             Return zone mask.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetMaxLights">
             <summary>
             Return maximum number of per-pixel lights.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetCastShadows">
             <summary>
             Return shadowcaster flag.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.IsOccluder">
             <summary>
             Return occluder flag.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.IsOccludee">
             <summary>
             Return occludee flag.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.IsInView">
             <summary>
             Return whether is in view this frame from any viewport camera. Excludes shadow map cameras.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.IsInView(Urho.Camera)">
             <summary>
             Return whether is in view of a specific camera this frame. Pass in a null camera to allow any camera, including shadow map cameras.
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetZone(Urho.Zone,System.Boolean)">
             <summary>
             Set new zone. Zone assignment may optionally be temporary, meaning it needs to be re-evaluated on the next frame.
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetSortValue(System.Single)">
             <summary>
             Set sorting value.
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetMinMaxZ(System.Single,System.Single)">
             <summary>
             Set view-space depth bounds.
             </summary>
            </member>
        <member name="M:Urho.Drawable.MarkInView(System.UInt32)">
             <summary>
             Mark in view without specifying a camera. Used for shadow casters.
             </summary>
            </member>
        <member name="M:Urho.Drawable.LimitLights">
             <summary>
             Sort and limit per-pixel lights to maximum allowed. Convert extra lights into vertex lights.
             </summary>
            </member>
        <member name="M:Urho.Drawable.LimitVertexLights(System.Boolean)">
             <summary>
             Sort and limit per-vertex lights to maximum allowed.
             </summary>
            </member>
        <member name="M:Urho.Drawable.SetBasePass(System.UInt32)">
             <summary>
             Set base pass flag for a batch.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetOctant">
             <summary>
             Return octree octant.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetZone">
             <summary>
             Return current zone.
             
             </summary>
            </member>
        <member name="M:Urho.Drawable.IsZoneDirty">
             <summary>
             Return whether current zone is inconclusive or dirty due to the drawable moving.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetDistance">
             <summary>
             Return distance from camera.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetLodDistance">
             <summary>
             Return LOD scaled distance from camera.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetSortValue">
             <summary>
             Return sorting value.
             </summary>
            </member>
        <member name="M:Urho.Drawable.HasBasePass(System.UInt32)">
             <summary>
             Return whether has a base pass.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetFirstLight">
             <summary>
             Return the first added per-pixel light.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetMinZ">
             <summary>
             Return the minimum view-space depth.
             </summary>
            </member>
        <member name="M:Urho.Drawable.GetMaxZ">
             <summary>
             Return the maximum view-space depth.
             </summary>
            </member>
        <member name="M:Urho.Drawable.AddLight(Urho.Light)">
             <summary>
             Add a per-pixel light affecting the object this frame.
             </summary>
            </member>
        <member name="M:Urho.Drawable.AddVertexLight(Urho.Light)">
             <summary>
             Add a per-vertex light affecting the object this frame.
             </summary>
            </member>
        <member name="P:Urho.Drawable.UpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="P:Urho.Drawable.NumOccluderTriangles">
             <summary>
             Return number of occlusion geometry triangles.
             </summary>
            </member>
        <member name="P:Urho.Drawable.DrawDistance">
             <summary>
             Return draw distance.
             
             Or
             Set draw distance.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.ShadowDistance">
             <summary>
             Return shadow draw distance.
             
             Or
             Set shadow draw distance.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.LodBias">
             <summary>
             Return LOD bias.
             
             Or
             Set LOD bias.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.ViewMask">
             <summary>
             Return view mask.
             
             Or
             Set view mask. Is and'ed with camera's view mask to see if the object should be rendered.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.LightMask">
             <summary>
             Return light mask.
             
             Or
             Set light mask. Is and'ed with light's and zone's light mask to see if the object should be lit.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.ShadowMask">
             <summary>
             Return shadow mask.
             
             Or
             Set shadow mask. Is and'ed with light's light mask and zone's shadow mask to see if the object should be rendered to a shadow map.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.ZoneMask">
             <summary>
             Return zone mask.
             
             Or
             Set zone mask. Is and'ed with zone's zone mask to see if the object should belong to the zone.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.MaxLights">
             <summary>
             Return maximum number of per-pixel lights.
             
             Or
             Set maximum number of per-pixel lights. Default 0 is unlimited.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.CastShadows">
             <summary>
             Return shadowcaster flag.
             
             Or
             Set shadowcaster flag.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.Occluder">
             <summary>
             Return occluder flag.
             
             Or
             Set occlusion flag.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.Occludee">
             <summary>
             Return occludee flag.
             
             Or
             Set occludee flag.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.BoundingBox">
             <summary>
             Return local space bounding box. May not be applicable or properly updated on all drawables.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.WorldBoundingBox">
             <summary>
             Return world-space bounding box.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.DrawableFlags">
             <summary>
             Return drawable flags.
             </summary>
            </member>
        <member name="P:Urho.Drawable.InView">
             <summary>
             Return whether is in view this frame from any viewport camera. Excludes shadow map cameras.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.SortValue">
             <summary>
             Return sorting value.
             Or
             Set sorting value.
             </summary>
            </member>
        <member name="P:Urho.Drawable.Octant">
             <summary>
             Return octree octant.
             </summary>
            </member>
        <member name="P:Urho.Drawable.Zone">
             <summary>
             Return current zone.
             
             </summary>
            </member>
        <member name="P:Urho.Drawable.ZoneDirty">
             <summary>
             Return whether current zone is inconclusive or dirty due to the drawable moving.
             </summary>
            </member>
        <member name="P:Urho.Drawable.Distance">
             <summary>
             Return distance from camera.
             </summary>
            </member>
        <member name="P:Urho.Drawable.LodDistance">
             <summary>
             Return LOD scaled distance from camera.
             </summary>
            </member>
        <member name="P:Urho.Drawable.FirstLight">
             <summary>
             Return the first added per-pixel light.
             </summary>
            </member>
        <member name="P:Urho.Drawable.MinZ">
             <summary>
             Return the minimum view-space depth.
             </summary>
            </member>
        <member name="P:Urho.Drawable.MaxZ">
             <summary>
             Return the maximum view-space depth.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.Drawable2D">
             <summary>
             Base class for 2D visible components.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Drawable2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. Drawable must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Drawable2D.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Drawable2D.SetLayer(System.Int32)">
             <summary>
             Set layer.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Drawable2D.SetOrderInLayer(System.Int32)">
             <summary>
             Set order in layer.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Drawable2D.GetLayer">
             <summary>
             Return layer.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Drawable2D.GetOrderInLayer">
             <summary>
             Return order in layer.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Drawable2D.Layer">
             <summary>
             Return layer.
             
             Or
             Set layer.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Drawable2D.OrderInLayer">
             <summary>
             Return order in layer.
             
             Or
             Set order in layer.
             
             </summary>
            </member>
        <member name="T:Urho.Gui.DropDownList">
             <summary>
             %Menu %UI element that displays a popup list view.
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately.
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.OnShowPopup">
             <summary>
             React to the popup being shown.
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.OnHidePopup">
             <summary>
             React to the popup being hidden.
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.OnSetEditable">
             <summary>
             React to editable status change.
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.AddItem(Urho.Gui.UIElement)">
             <summary>
             Add item to the end of the list.
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.InsertItem(System.UInt32,Urho.Gui.UIElement)">
             <summary>
             Insert item to a specific position.
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.RemoveItem(Urho.Gui.UIElement)">
             <summary>
             Remove specific item.
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.RemoveItem(System.UInt32)">
             <summary>
             Remove item at index.
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.RemoveAllItems">
             <summary>
             Remove all items.
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.SetSelection(System.UInt32)">
             <summary>
             Set selection.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.SetPlaceholderText(System.String)">
             <summary>
             Set place holder text. This is the text shown when there is no selection (-1) in drop down list. Note that if the list has items, the default is to show the first item, so the "no selection" state has to be set explicitly.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.SetResizePopup(System.Boolean)">
             <summary>
             Set whether popup should be automatically resized to match the dropdown button width.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.GetNumItems">
             <summary>
             Return number of items.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.GetItem(System.UInt32)">
             <summary>
             Return item at index.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.GetSelection">
             <summary>
             Return selection index, or M_MAX_UNSIGNED if none selected.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.GetSelectedItem">
             <summary>
             Return selected item, or null if none selected.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.GetListView">
             <summary>
             Return listview element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.GetPlaceholder">
             <summary>
             Return selected item placeholder element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.GetPlaceholderText">
             <summary>
             Return place holder text.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.GetResizePopup">
             <summary>
             Return whether popup should be automatically resized.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.DropDownList.SetSelectionAttr(System.UInt32)">
             <summary>
             Set selection attribute.
             </summary>
            </member>
        <member name="P:Urho.Gui.DropDownList.Selection">
             <summary>
             Return selection index, or M_MAX_UNSIGNED if none selected.
             
             Or
             Set selection.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.DropDownList.PlaceholderText">
             <summary>
             Return place holder text.
             
             Or
             Set place holder text. This is the text shown when there is no selection (-1) in drop down list. Note that if the list has items, the default is to show the first item, so the "no selection" state has to be set explicitly.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.DropDownList.ResizePopup">
             <summary>
             Return whether popup should be automatically resized.
             
             Or
             Set whether popup should be automatically resized to match the dropdown button width.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.DropDownList.NumItems">
             <summary>
             Return number of items.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.DropDownList.SelectedItem">
             <summary>
             Return selected item, or null if none selected.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.DropDownList.ListView">
             <summary>
             Return listview element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.DropDownList.Placeholder">
             <summary>
             Return selected item placeholder element.
             
             </summary>
            </member>
        <member name="T:Urho.Navigation.DynamicNavigationMesh">
             <summary>
             Constructor.
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.RegisterObject(Urho.Context)">
             <summary>
             Register with engine context.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.Allocate(Urho.BoundingBox,System.UInt32)">
             <summary>
             Allocate the navigation mesh without building any tiles. Bounding box is not padded. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.Build">
             <summary>
             Build/rebuild the entire navigation mesh.
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.Build(Urho.BoundingBox)">
             <summary>
             Build/rebuild a portion of the navigation mesh.
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.Build(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Rebuild part of the navigation mesh in the rectangular area. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.IsObstacleInTile(Urho.Navigation.Obstacle,Urho.IntVector2)">
             <summary>
             Return whether the Obstacle is touching the given tile.
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.RemoveTile(Urho.IntVector2)">
             <summary>
             Remove tile from navigation mesh.
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.RemoveAllTiles">
             <summary>
             Remove all tiles from navigation mesh.
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.DrawDebugGeometry(System.Boolean)">
             <summary>
             Add debug geometry to the debug renderer.
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.SetMaxObstacles(System.UInt32)">
             <summary>
             Set the maximum number of obstacles allowed.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.SetMaxLayers(System.UInt32)">
             <summary>
             Set the maximum number of layers that navigation construction can create.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.GetMaxObstacles">
             <summary>
             Return the maximum number of obstacles allowed.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.GetMaxLayers">
             <summary>
             Return the maximum number of layers permitted to build.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.SetDrawObstacles(System.Boolean)">
             <summary>
             Draw debug geometry for Obstacles.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.DynamicNavigationMesh.GetDrawObstacles">
             <summary>
             Return whether to draw Obstacles.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.DynamicNavigationMesh.MaxObstacles">
             <summary>
             Return the maximum number of obstacles allowed.
             
             Or
             Set the maximum number of obstacles allowed.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.DynamicNavigationMesh.MaxLayers">
             <summary>
             Return the maximum number of layers permitted to build.
             
             Or
             Set the maximum number of layers that navigation construction can create.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.DynamicNavigationMesh.DrawObstacles">
             <summary>
             Return whether to draw Obstacles.
             
             Or
             Draw debug geometry for Obstacles.
             
             </summary>
            </member>
        <member name="T:Urho.EmitterType">
             <summary>
             Particle emitter shapes.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.EmitterType2D">
             <summary>
             2D particle emitter types.
             </summary>
            </member>
        <member name="T:Urho.Engine">
             <summary>
             Urho3D engine. Creates the other subsystems.
             </summary>
            </member>
        <member name="M:Urho.Engine.RunFrame">
             <summary>
             Run one frame.
             </summary>
            </member>
        <member name="M:Urho.Engine.CreateConsole">
             <summary>
             Create the console and return it. May return null if engine configuration does not allow creation (headless mode).
             </summary>
            </member>
        <member name="M:Urho.Engine.CreateDebugHud">
             <summary>
             Create the debug hud.
             </summary>
            </member>
        <member name="M:Urho.Engine.SetMinFps(System.Int32)">
             <summary>
             Set minimum frames per second. If FPS goes lower than this, time will appear to slow down.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.SetMaxFps(System.Int32)">
             <summary>
             Set maximum frames per second. The engine will sleep if FPS is higher than this.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.SetMaxInactiveFps(System.Int32)">
             <summary>
             Set maximum frames per second when the application does not have input focus.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.SetTimeStepSmoothing(System.Int32)">
             <summary>
             Set how many frames to average for timestep smoothing. Default is 2. 1 disables smoothing.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.SetPauseMinimized(System.Boolean)">
             <summary>
             Set whether to pause update events and audio when minimized.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.SetAutoExit(System.Boolean)">
             <summary>
             Set whether to exit automatically on exit request (window close button).
             
             </summary>
            </member>
        <member name="M:Urho.Engine.SetNextTimeStep(System.Single)">
             <summary>
             Override timestep of the next frame. Should be called in between RunFrame() calls.
             </summary>
            </member>
        <member name="M:Urho.Engine.Exit">
             <summary>
             Close the graphics window and set the exit flag. No-op on iOS/tvOS, as an iOS/tvOS application can not legally exit.
             </summary>
            </member>
        <member name="M:Urho.Engine.DumpProfiler">
             <summary>
             Dump profiling information to the log.
             </summary>
            </member>
        <member name="M:Urho.Engine.DumpResources(System.Boolean)">
             <summary>
             Dump information of all resources to the log.
             </summary>
            </member>
        <member name="M:Urho.Engine.DumpMemory">
             <summary>
             Dump information of all memory allocations to the log. Supported in MSVC debug mode only.
             </summary>
            </member>
        <member name="M:Urho.Engine.GetNextTimeStep">
             <summary>
             Get timestep of the next frame. Updated by ApplyFrameLimit().
             </summary>
            </member>
        <member name="M:Urho.Engine.GetMinFps">
             <summary>
             Return the minimum frames per second.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.GetMaxFps">
             <summary>
             Return the maximum frames per second.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.GetMaxInactiveFps">
             <summary>
             Return the maximum frames per second when the application does not have input focus.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.GetTimeStepSmoothing">
             <summary>
             Return how many frames to average for timestep smoothing.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.GetPauseMinimized">
             <summary>
             Return whether to pause update events and audio when minimized.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.GetAutoExit">
             <summary>
             Return whether to exit automatically on exit request.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.IsInitialized">
             <summary>
             Return whether engine has been initialized.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.IsExiting">
             <summary>
             Return whether exit has been requested.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.IsHeadless">
             <summary>
             Return whether the engine has been created in headless mode.
             
             </summary>
            </member>
        <member name="M:Urho.Engine.UpdateFrame">
             <summary>
             Send frame update events.
             </summary>
            </member>
        <member name="M:Urho.Engine.Render">
             <summary>
             Render after frame update.
             </summary>
            </member>
        <member name="M:Urho.Engine.ApplyFrameLimit">
             <summary>
             Get the timestep for the next frame and sleep for frame limiting if necessary.
             </summary>
            </member>
        <member name="P:Urho.Engine.MinFps">
             <summary>
             Return the minimum frames per second.
             
             Or
             Set minimum frames per second. If FPS goes lower than this, time will appear to slow down.
             
             </summary>
            </member>
        <member name="P:Urho.Engine.MaxFps">
             <summary>
             Return the maximum frames per second.
             
             Or
             Set maximum frames per second. The engine will sleep if FPS is higher than this.
             
             </summary>
            </member>
        <member name="P:Urho.Engine.MaxInactiveFps">
             <summary>
             Return the maximum frames per second when the application does not have input focus.
             
             Or
             Set maximum frames per second when the application does not have input focus.
             
             </summary>
            </member>
        <member name="P:Urho.Engine.TimeStepSmoothing">
             <summary>
             Return how many frames to average for timestep smoothing.
             
             Or
             Set how many frames to average for timestep smoothing. Default is 2. 1 disables smoothing.
             
             </summary>
            </member>
        <member name="P:Urho.Engine.PauseMinimized">
             <summary>
             Return whether to pause update events and audio when minimized.
             
             Or
             Set whether to pause update events and audio when minimized.
             
             </summary>
            </member>
        <member name="P:Urho.Engine.AutoExit">
             <summary>
             Return whether to exit automatically on exit request.
             
             Or
             Set whether to exit automatically on exit request (window close button).
             
             </summary>
            </member>
        <member name="P:Urho.Engine.NextTimeStep">
             <summary>
             Get timestep of the next frame. Updated by ApplyFrameLimit().
             Or
             Override timestep of the next frame. Should be called in between RunFrame() calls.
             </summary>
            </member>
        <member name="P:Urho.Engine.Initialized">
             <summary>
             Return whether engine has been initialized.
             
             </summary>
            </member>
        <member name="P:Urho.Engine.Exiting">
             <summary>
             Return whether exit has been requested.
             
             </summary>
            </member>
        <member name="P:Urho.Engine.Headless">
             <summary>
             Return whether the engine has been created in headless mode.
             
             </summary>
            </member>
        <member name="T:Urho.EventReceiverGroup">
             <summary>
             Tracking structure for event receivers.
             </summary>
            </member>
        <member name="M:Urho.EventReceiverGroup.BeginSendEvent">
             <summary>
             Begin event send. When receivers are removed during send, group has to be cleaned up afterward.
             </summary>
            </member>
        <member name="M:Urho.EventReceiverGroup.EndSendEvent">
             <summary>
             End event send. Clean up if necessary.
             </summary>
            </member>
        <member name="M:Urho.EventReceiverGroup.Add(Urho.UrhoObject)">
             <summary>
             Add receiver. Same receiver must not be double-added!
             </summary>
            </member>
        <member name="M:Urho.EventReceiverGroup.Remove(Urho.UrhoObject)">
             <summary>
             Remove receiver. Leave holes during send, which requires later cleanup.
             </summary>
            </member>
        <member name="T:Urho.FaceCameraMode">
             <summary>
             Billboard camera facing modes.
             </summary>
            </member>
        <member name="T:Urho.IO.FileMode">
             <summary>
             File open mode.
             </summary>
            </member>
        <member name="T:Urho.Gui.FileSelector">
             <summary>
             %File selector dialog.
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.SetDefaultStyle(Urho.Resources.XmlFile)">
             <summary>
             Set fileselector UI style.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.SetTitle(System.String)">
             <summary>
             Set title text.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.SetButtonTexts(System.String,System.String)">
             <summary>
             Set button texts.
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.SetPath(System.String)">
             <summary>
             Set current path.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.SetFileName(System.String)">
             <summary>
             Set current filename.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.SetDirectoryMode(System.Boolean)">
             <summary>
             Set directory selection mode. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.UpdateElements">
             <summary>
             Update elements to layout properly. Call this after manually adjusting the sub-elements.
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetDefaultStyle">
             <summary>
             Return the UI style file.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetWindow">
             <summary>
             Return fileselector window.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetTitleText">
             <summary>
             Return window title text element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetFileList">
             <summary>
             Return file list.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetPathEdit">
             <summary>
             Return path editor.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetFileNameEdit">
             <summary>
             Return filename editor.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetFilterList">
             <summary>
             Return filter dropdown.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetOKButton">
             <summary>
             Return OK button.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetCancelButton">
             <summary>
             Return cancel button.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetCloseButton">
             <summary>
             Return close button.
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetTitle">
             <summary>
             Return window title.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetPath">
             <summary>
             Return current path.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetFileName">
             <summary>
             Return current filename.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetFilter">
             <summary>
             Return current filter.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetFilterIndex">
             <summary>
             Return current filter index.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.FileSelector.GetDirectoryMode">
             <summary>
             Return directory mode flag.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.DefaultStyle">
             <summary>
             Return the UI style file.
             
             Or
             Set fileselector UI style.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.Title">
             <summary>
             Return window title.
             
             Or
             Set title text.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.Path">
             <summary>
             Return current path.
             
             Or
             Set current path.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.FileName">
             <summary>
             Return current filename.
             
             Or
             Set current filename.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.DirectoryMode">
             <summary>
             Return directory mode flag.
             
             Or
             Set directory selection mode. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.Window">
             <summary>
             Return fileselector window.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.TitleText">
             <summary>
             Return window title text element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.FileList">
             <summary>
             Return file list.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.PathEdit">
             <summary>
             Return path editor.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.FileNameEdit">
             <summary>
             Return filename editor.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.FilterList">
             <summary>
             Return filter dropdown.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.OKButton">
             <summary>
             Return OK button.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.CancelButton">
             <summary>
             Return cancel button.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.CloseButton">
             <summary>
             Return close button.
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.Filter">
             <summary>
             Return current filter.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.FileSelector.FilterIndex">
             <summary>
             Return current filter index.
             
             </summary>
            </member>
        <member name="T:Urho.IO.FileSystem">
             <summary>
             Subsystem for file and directory operations and access control.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.SetCurrentDir(System.String)">
             <summary>
             Set the current working directory.
             
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.CreateDir(System.String)">
             <summary>
             Create a directory.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.SetExecuteConsoleCommands(System.Boolean)">
             <summary>
             Set whether to execute engine console commands as OS-specific system command.
             
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.SystemCommand(System.String,System.Boolean)">
             <summary>
             Run a program using the command interpreter, block until it exits and return the exit code. Will fail if any allowed paths are defined.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.SystemCommandAsync(System.String)">
             <summary>
             Run a program using the command interpreter asynchronously. Return a request ID or M_MAX_UNSIGNED if failed. The exit code will be posted together with the request ID in an AsyncExecFinished event. Will fail if any allowed paths are defined.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.SystemOpen(System.String,System.String)">
             <summary>
             Open a file in an external program, with mode such as "edit" optionally specified. Will fail if any allowed paths are defined.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.Copy(System.String,System.String)">
             <summary>
             Copy a file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.Rename(System.String,System.String)">
             <summary>
             Rename a file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.Delete(System.String)">
             <summary>
             Delete a file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.RegisterPath(System.String)">
             <summary>
             Register a path as allowed to access. If no paths are registered, all are allowed. Registering allowed paths is considered securing the Urho3D execution environment: running programs and opening files externally through the system will fail afterward.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.SetLastModifiedTime(System.String,System.UInt32)">
             <summary>
             Set a file's last modified time as seconds since 1.1.1970. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.GetCurrentDir">
             <summary>
             Return the absolute current working directory.
             
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.GetExecuteConsoleCommands">
             <summary>
             Return whether is executing engine console commands as OS-specific system command.
             
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.HasRegisteredPaths">
             <summary>
             Return whether paths have been registered.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.CheckAccess(System.String)">
             <summary>
             Check if a path is allowed to be accessed. If no paths are registered, all are allowed.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.GetLastModifiedTime(System.String)">
             <summary>
             Returns the file's last modified time as seconds since 1.1.1970, or 0 if can not be accessed.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.FileExists(System.String)">
             <summary>
             Check if a file exists.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.DirExists(System.String)">
             <summary>
             Check if a directory exists.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.GetProgramDir">
             <summary>
             Return the program's directory.
             
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.GetUserDocumentsDir">
             <summary>
             Return the user documents directory.
             
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.GetAppPreferencesDir(System.String,System.String)">
             <summary>
             Return the application preferences directory.
             </summary>
            </member>
        <member name="M:Urho.IO.FileSystem.GetTemporaryDir">
             <summary>
             Return path of temporary directory. Path always ends with a forward slash.
             
             </summary>
            </member>
        <member name="P:Urho.IO.FileSystem.CurrentDir">
             <summary>
             Return the absolute current working directory.
             
             </summary>
            </member>
        <member name="P:Urho.IO.FileSystem.ExecuteConsoleCommands">
             <summary>
             Return whether is executing engine console commands as OS-specific system command.
             
             Or
             Set whether to execute engine console commands as OS-specific system command.
             
             </summary>
            </member>
        <member name="P:Urho.IO.FileSystem.ProgramDir">
             <summary>
             Return the program's directory.
             
             </summary>
            </member>
        <member name="P:Urho.IO.FileSystem.UserDocumentsDir">
             <summary>
             Return the user documents directory.
             
             </summary>
            </member>
        <member name="P:Urho.IO.FileSystem.TemporaryDir">
             <summary>
             Return path of temporary directory. Path always ends with a forward slash.
             
             </summary>
            </member>
        <member name="T:Urho.IO.FileWatcher">
             <summary>
             Watches a directory and its subdirectories for files being modified.
             </summary>
            </member>
        <member name="M:Urho.IO.FileWatcher.ThreadFunction">
             <summary>
             Directory watching loop.
             </summary>
            </member>
        <member name="M:Urho.IO.FileWatcher.StartWatching(System.String,System.Boolean)">
             <summary>
             Start watching a directory. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.IO.FileWatcher.StopWatching">
             <summary>
             Stop watching the directory.
             </summary>
            </member>
        <member name="M:Urho.IO.FileWatcher.SetDelay(System.Single)">
             <summary>
             Set the delay in seconds before file changes are notified. This (hopefully) avoids notifying when a file save is still in progress. Default 1 second.
             </summary>
            </member>
        <member name="M:Urho.IO.FileWatcher.AddChange(System.String)">
             <summary>
             Add a file change into the changes queue.
             </summary>
            </member>
        <member name="M:Urho.IO.FileWatcher.GetPath">
             <summary>
             Return the path being watched, or empty if not watching.
             </summary>
            </member>
        <member name="M:Urho.IO.FileWatcher.GetDelay">
             <summary>
             Return the delay in seconds for notifying file changes.
             </summary>
            </member>
        <member name="P:Urho.IO.FileWatcher.Delay">
             <summary>
             Return the delay in seconds for notifying file changes.
             Or
             Set the delay in seconds before file changes are notified. This (hopefully) avoids notifying when a file save is still in progress. Default 1 second.
             </summary>
            </member>
        <member name="P:Urho.IO.FileWatcher.Path">
             <summary>
             Return the path being watched, or empty if not watching.
             </summary>
            </member>
        <member name="T:Urho.FillMode">
             <summary>
             Fill mode.
             </summary>
            </member>
        <member name="T:Urho.Gui.FocusMode">
             <summary>
             %UI element focus mode.
             </summary>
            </member>
        <member name="T:Urho.Gui.Font">
             <summary>
             %Font resource.
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.SaveXml(Urho.IO.File,System.Int32,System.Boolean,System.String)">
             <summary>
             Save resource as a new bitmap font type in XML format. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.SaveXml(Urho.MemoryBuffer,System.Int32,System.Boolean,System.String)">
             <summary>
             Save resource as a new bitmap font type in XML format. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.SetAbsoluteGlyphOffset(Urho.IntVector2)">
             <summary>
             Set absolute (in pixels) position adjustment for glyphs.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.SetScaledGlyphOffset(Urho.Vector2)">
             <summary>
             Set point size scaled position adjustment for glyphs.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.GetFace(System.Single)">
             <summary>
             Return font face. Pack and render to a texture if not rendered yet. Return null on error.
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.GetFontType">
             <summary>
             Return font type.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.IsSDFFont">
             <summary>
             Is signed distance field font.
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.GetAbsoluteGlyphOffset">
             <summary>
             Return absolute position adjustment for glyphs.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.GetScaledGlyphOffset">
             <summary>
             Return point size scaled position adjustment for glyphs.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.GetTotalGlyphOffset(System.Single)">
             <summary>
             Return the total effective offset for a point size.
             </summary>
            </member>
        <member name="M:Urho.Gui.Font.ReleaseFaces">
             <summary>
             Release font faces and recreate them next time when requested. Called when font textures lost or global font properties change.
             </summary>
            </member>
        <member name="P:Urho.Gui.Font.AbsoluteGlyphOffset">
             <summary>
             Return absolute position adjustment for glyphs.
             
             Or
             Set absolute (in pixels) position adjustment for glyphs.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Font.ScaledGlyphOffset">
             <summary>
             Return point size scaled position adjustment for glyphs.
             
             Or
             Set point size scaled position adjustment for glyphs.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Font.FontType">
             <summary>
             Return font type.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Font.SDFFont">
             <summary>
             Is signed distance field font.
             </summary>
            </member>
        <member name="T:Urho.Gui.FontFace">
             <summary>
             %Font face description.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFace.Load(System.Byte*,System.UInt32,System.Single)">
             <summary>
             Load font face.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFace.GetGlyph(System.UInt32)">
             <summary>
             Return pointer to the glyph structure corresponding to a character. Return null if glyph not found.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFace.HasMutableGlyphs">
             <summary>
             Return if font face uses mutable glyphs.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFace.GetKerning(System.UInt32,System.UInt32)">
             <summary>
             Return the kerning for a character and the next character.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFace.IsDataLost">
             <summary>
             Return true when one of the texture has a data loss.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFace.GetPointSize">
             <summary>
             Return point size.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFace.GetRowHeight">
             <summary>
             Return row height.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFace.GetTextures">
             <summary>
             Return textures.
             </summary>
            </member>
        <member name="P:Urho.Gui.FontFace.DataLost">
             <summary>
             Return true when one of the texture has a data loss.
             </summary>
            </member>
        <member name="P:Urho.Gui.FontFace.PointSize">
             <summary>
             Return point size.
             </summary>
            </member>
        <member name="P:Urho.Gui.FontFace.RowHeight">
             <summary>
             Return row height.
             </summary>
            </member>
        <member name="P:Urho.Gui.FontFace.Textures">
             <summary>
             Return textures.
             </summary>
            </member>
        <member name="T:Urho.Gui.FontFaceBitmap">
             <summary>
             Bitmap font face description.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFaceBitmap.Load(System.Byte*,System.UInt32,System.Single)">
             <summary>
             Load font face.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFaceBitmap.Load(Urho.Gui.FontFace,System.Boolean)">
             <summary>
             Load from existed font face, pack used glyphs into smallest texture size and smallest number of texture.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFaceBitmap.Save(Urho.IO.File,System.Int32,System.String)">
             <summary>
             Save as a new bitmap font type in XML format. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFaceBitmap.Save(Urho.MemoryBuffer,System.Int32,System.String)">
             <summary>
             Save as a new bitmap font type in XML format. Return true if successful.
             </summary>
            </member>
        <member name="T:Urho.Gui.FontFaceFreeType">
             <summary>
             Free type font face description.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFaceFreeType.Load(System.Byte*,System.UInt32,System.Single)">
             <summary>
             Load font face.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFaceFreeType.GetGlyph(System.UInt32)">
             <summary>
             Return pointer to the glyph structure corresponding to a character. Return null if glyph not found.
             </summary>
            </member>
        <member name="M:Urho.Gui.FontFaceFreeType.HasMutableGlyphs">
             <summary>
             Return if font face uses mutable glyphs.
             </summary>
            </member>
        <member name="T:Urho.FontHintLevel">
             <summary>
             Font hinting level (only used for FreeType fonts).
             </summary>
            </member>
        <member name="T:Urho.FontType">
             <summary>
             %Font file type.
             </summary>
            </member>
        <member name="T:Urho.FrustumPlane">
             <summary>
             Frustum planes.
             </summary>
            </member>
        <member name="T:Urho.GImpactMeshData">
             <summary>
             Triangle mesh geometry data.
             </summary>
            </member>
        <member name="T:Urho.Geometry">
             <summary>
             Defines one or more vertex buffers, an index buffer and a draw range.
             </summary>
            </member>
        <member name="M:Urho.Geometry.SetNumVertexBuffers(System.UInt32)">
             <summary>
             Set number of vertex buffers.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.SetVertexBuffer(System.UInt32,Urho.VertexBuffer)">
             <summary>
             Set a vertex buffer by index.
             </summary>
            </member>
        <member name="M:Urho.Geometry.SetIndexBuffer(Urho.IndexBuffer)">
             <summary>
             Set the index buffer.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.SetDrawRange(Urho.PrimitiveType,System.UInt32,System.UInt32,System.Boolean)">
             <summary>
             Set the draw range.
             </summary>
            </member>
        <member name="M:Urho.Geometry.SetDrawRange(Urho.PrimitiveType,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Boolean)">
             <summary>
             Set the draw range.
             </summary>
            </member>
        <member name="M:Urho.Geometry.SetLodDistance(System.Single)">
             <summary>
             Set the LOD distance.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.Draw(Urho.Graphics)">
             <summary>
             Draw.
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetVertexBuffers">
             <summary>
             Return all vertex buffers.
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetNumVertexBuffers">
             <summary>
             Return number of vertex buffers.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetVertexBuffer(System.UInt32)">
             <summary>
             Return vertex buffer by index.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetIndexBuffer">
             <summary>
             Return the index buffer.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetPrimitiveType">
             <summary>
             Return primitive type.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetIndexStart">
             <summary>
             Return start index.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetIndexCount">
             <summary>
             Return number of indices.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetVertexStart">
             <summary>
             Return first used vertex.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetVertexCount">
             <summary>
             Return number of used vertices.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetLodDistance">
             <summary>
             Return LOD distance.
             
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetBufferHash">
             <summary>
             Return buffers' combined hash value for state sorting.
             </summary>
            </member>
        <member name="M:Urho.Geometry.GetHitDistance(Urho.Ray,Urho.Vector3*,Urho.Vector2*)">
             <summary>
             Return ray hit distance or infinity if no hit. Requires raw data to be set. Optionally return hit normal and hit uv coordinates at intersect point.
             </summary>
            </member>
        <member name="M:Urho.Geometry.IsInside(Urho.Ray)">
             <summary>
             Return whether or not the ray is inside geometry.
             </summary>
            </member>
        <member name="M:Urho.Geometry.IsEmpty">
             <summary>
             Return whether has empty draw range.
             
             </summary>
            </member>
        <member name="P:Urho.Geometry.NumVertexBuffers">
             <summary>
             Return number of vertex buffers.
             
             Or
             Set number of vertex buffers.
             
             </summary>
            </member>
        <member name="P:Urho.Geometry.IndexBuffer">
             <summary>
             Return the index buffer.
             
             Or
             Set the index buffer.
             
             </summary>
            </member>
        <member name="P:Urho.Geometry.LodDistance">
             <summary>
             Return LOD distance.
             
             Or
             Set the LOD distance.
             
             </summary>
            </member>
        <member name="P:Urho.Geometry.VertexBuffers">
             <summary>
             Return all vertex buffers.
             </summary>
            </member>
        <member name="P:Urho.Geometry.PrimitiveType">
             <summary>
             Return primitive type.
             
             </summary>
            </member>
        <member name="P:Urho.Geometry.IndexStart">
             <summary>
             Return start index.
             
             </summary>
            </member>
        <member name="P:Urho.Geometry.IndexCount">
             <summary>
             Return number of indices.
             
             </summary>
            </member>
        <member name="P:Urho.Geometry.VertexStart">
             <summary>
             Return first used vertex.
             
             </summary>
            </member>
        <member name="P:Urho.Geometry.VertexCount">
             <summary>
             Return number of used vertices.
             
             </summary>
            </member>
        <member name="P:Urho.Geometry.BufferHash">
             <summary>
             Return buffers' combined hash value for state sorting.
             </summary>
            </member>
        <member name="P:Urho.Geometry.Empty">
             <summary>
             Return whether has empty draw range.
             
             </summary>
            </member>
        <member name="T:Urho.GeometryType">
             <summary>
             %Geometry type for vertex shader geometry variations.
             </summary>
            </member>
        <member name="T:Urho.HeightfieldData">
             <summary>
             Heightfield geometry data.
             </summary>
            </member>
        <member name="T:Urho.Gui.HighlightMode">
             <summary>
             %ListView selection highlight mode.
             </summary>
            </member>
        <member name="T:Urho.Gui.HorizontalAlignment">
             <summary>
             %UI element horizontal alignment.
             </summary>
            </member>
        <member name="T:Urho.Network.HttpRequest">
             <summary>
             An HTTP connection with response data stream.
             </summary>
            </member>
        <member name="M:Urho.Network.HttpRequest.ThreadFunction">
             <summary>
             Process the connection in the worker thread until closed.
             </summary>
            </member>
        <member name="M:Urho.Network.HttpRequest.Read(System.IntPtr,System.UInt32)">
             <summary>
             Read response data from the HTTP connection and return number of bytes actually read. While the connection is open, will block while trying to read the specified size. To avoid blocking, only read up to as many bytes as GetAvailableSize() returns.
             </summary>
            </member>
        <member name="M:Urho.Network.HttpRequest.Seek(System.UInt32)">
             <summary>
             Set position from the beginning of the stream. Not supported.
             </summary>
            </member>
        <member name="M:Urho.Network.HttpRequest.IsEof">
             <summary>
             Return whether all response data has been read.
             </summary>
            </member>
        <member name="M:Urho.Network.HttpRequest.GetURL">
             <summary>
             Return URL used in the request.
             
             </summary>
            </member>
        <member name="M:Urho.Network.HttpRequest.GetVerb">
             <summary>
             Return verb used in the request. Default GET if empty verb specified on construction.
             
             </summary>
            </member>
        <member name="M:Urho.Network.HttpRequest.GetError">
             <summary>
             Return error. Only non-empty in the error state.
             
             </summary>
            </member>
        <member name="M:Urho.Network.HttpRequest.GetState">
             <summary>
             Return connection state.
             
             </summary>
            </member>
        <member name="M:Urho.Network.HttpRequest.GetAvailableSize">
             <summary>
             Return amount of bytes in the read buffer.
             
             </summary>
            </member>
        <member name="M:Urho.Network.HttpRequest.IsOpen">
             <summary>
             Return whether connection is in the open state.
             
             </summary>
            </member>
        <member name="P:Urho.Network.HttpRequest.Eof">
             <summary>
             Return whether all response data has been read.
             </summary>
            </member>
        <member name="P:Urho.Network.HttpRequest.URL">
             <summary>
             Return URL used in the request.
             
             </summary>
            </member>
        <member name="P:Urho.Network.HttpRequest.Verb">
             <summary>
             Return verb used in the request. Default GET if empty verb specified on construction.
             
             </summary>
            </member>
        <member name="P:Urho.Network.HttpRequest.Error">
             <summary>
             Return error. Only non-empty in the error state.
             
             </summary>
            </member>
        <member name="P:Urho.Network.HttpRequest.State">
             <summary>
             Return connection state.
             
             </summary>
            </member>
        <member name="P:Urho.Network.HttpRequest.AvailableSize">
             <summary>
             Return amount of bytes in the read buffer.
             
             </summary>
            </member>
        <member name="T:Urho.Network.HttpRequestState">
             <summary>
             HTTP connection state.
             </summary>
            </member>
        <member name="T:Urho.IKConstraint">
             <summary>
             Constructs a new IK constraint.
             </summary>
            </member>
        <member name="M:Urho.IKConstraint.RegisterObject(Urho.Context)">
             <summary>
             Registers this class as an object factory.
             
             </summary>
            </member>
        <member name="T:Urho.IKEffector">
             <summary>
             Constructs a new IK effector.
             </summary>
            </member>
        <member name="M:Urho.IKEffector.RegisterObject(Urho.Context)">
             <summary>
             Registers this class as an object factory.
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.GetFeature(Urho.IKEffectorFeature)">
             <summary>
             Test if a certain feature is enabled (see IKEffector::IKEffectorFeature).
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.SetFeature(Urho.IKEffectorFeature,System.Boolean)">
             <summary>
             Enable or disable a certain feature (see IKEffector::IKEffectorFeature).
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.GetTargetNode">
             <summary>
             Retrieves the node that is being used as a target. Can be NULL.
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.SetTargetNode(Urho.Node)">
             <summary>
             
             
             The position of the target node provides the target position of
             the effector node.
             The IK chain is solved such that the node to which this component is
             attached to will try to move to the position of the target node.
             
             A scene node that acts as a target. Specifying NULL
             will erase the target and cause the solver to ignore this chain.
             
             You will get very strange behaviour if you specify a target node
             that is part the IK chain being solved for (circular dependency). Don't
             do that.
             </summary>
            </member>
        <member name="M:Urho.IKEffector.GetTargetName">
             <summary>
             
             
             Retrieves the name of the target node. The node doesn't
             necessarily have to exist in the scene graph.
             </summary>
            </member>
        <member name="M:Urho.IKEffector.SetTargetName(System.String)">
             <summary>
             
             
             Sets the name of the target node. The node doesn't necessarily
             have to exist in the scene graph. When a node is created that matches
             this name, it is selected as the target.
             
             This clears the existing target node.
             </summary>
            </member>
        <member name="M:Urho.IKEffector.GetTargetPosition">
             <summary>
             Returns the current target position in world space.
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.SetTargetPosition(Urho.Vector3)">
             <summary>
             Sets the current target position. If the effector has a target node then this will have no effect.
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.GetTargetRotation">
             <summary>
             Gets the current target rotation in world space.
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.SetTargetRotation(Urho.Quaternion)">
             <summary>
             Sets the current target rotation. If the effector has a target node then this will have no effect.
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.GetTargetRotationEuler">
             <summary>
             Required for the editor, get the target rotation in euler angles.
             </summary>
            </member>
        <member name="M:Urho.IKEffector.SetTargetRotationEuler(Urho.Vector3)">
             <summary>
             Required for the editor, sets the target rotation in euler angles.
             </summary>
            </member>
        <member name="M:Urho.IKEffector.GetChainLength">
             <summary>
             Returns the number of segments that will be affected by this effector. 0 Means all nodes between this effector
             and the next IKSolver.
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.SetChainLength(System.UInt32)">
             <summary>
             Sets the number of segments that will be affected. 0 Means all nodes between this effector and the next
             IKSolver.
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.GetWeight">
             <summary>
             How strongly the effector affects the solution.
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.SetWeight(System.Single)">
             <summary>
             
             
             Sets how much influence the effector has on the solution.
             You can use this value to smoothly transition between a solved pose and
             an initial pose  For instance, lifting a foot off of the ground or
             letting go of an object.
             </summary>
            </member>
        <member name="M:Urho.IKEffector.GetRotationWeight">
             <summary>
             How strongly the target node's rotation influences the solution.
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.SetRotationWeight(System.Single)">
             <summary>
             
             
             Sets how much influence the target rotation should have on the
             solution. A value of 1 means to match the target rotation exactly, if
             possible. A value of 0 means to not match it at all.
             
             The solver must have target rotation enabled for this to have
             any effect. See IKSolver::IKEffectorFeature::TARGET_ROTATIONS.
             </summary>
            </member>
        <member name="M:Urho.IKEffector.GetRotationDecay">
             <summary>
             Retrieves the rotation decay factor. See SetRotationDecay() for info.
             
             </summary>
            </member>
        <member name="M:Urho.IKEffector.SetRotationDecay(System.Single)">
             <summary>
             
             
             A factor with which to control the target rotation influence of
             the next segments down the chain.
             For example, if this is set to 0.5 and the rotation weight is set to
             1.0, then the first segment will match the target rotation exactly, the
             next segment will match it only 50%, the next segment 25%, the next
             12.5%, etc. This parameter makes long chains look more natural when
             matching a target rotation.
             </summary>
            </member>
        <member name="M:Urho.IKEffector.GetFEATURE_WEIGHT_NLERP">
             <summary>
             Need these wrapper functions flags of GetFeature/SetFeature can be correctly exposed to the editor and to
             AngelScript and lua.
             </summary>
            </member>
        <member name="P:Urho.IKEffector.TargetNode">
             <summary>
             Retrieves the node that is being used as a target. Can be NULL.
             
             Or
             
             
             The position of the target node provides the target position of
             the effector node.
             The IK chain is solved such that the node to which this component is
             attached to will try to move to the position of the target node.
             
             A scene node that acts as a target. Specifying NULL
             will erase the target and cause the solver to ignore this chain.
             
             You will get very strange behaviour if you specify a target node
             that is part the IK chain being solved for (circular dependency). Don't
             do that.
             </summary>
            </member>
        <member name="P:Urho.IKEffector.TargetName">
             <summary>
             
             
             Retrieves the name of the target node. The node doesn't
             necessarily have to exist in the scene graph.
             Or
             
             
             Sets the name of the target node. The node doesn't necessarily
             have to exist in the scene graph. When a node is created that matches
             this name, it is selected as the target.
             
             This clears the existing target node.
             </summary>
            </member>
        <member name="P:Urho.IKEffector.TargetPosition">
             <summary>
             Returns the current target position in world space.
             
             Or
             Sets the current target position. If the effector has a target node then this will have no effect.
             
             </summary>
            </member>
        <member name="P:Urho.IKEffector.TargetRotation">
             <summary>
             Gets the current target rotation in world space.
             
             Or
             Sets the current target rotation. If the effector has a target node then this will have no effect.
             
             </summary>
            </member>
        <member name="P:Urho.IKEffector.TargetRotationEuler">
             <summary>
             Required for the editor, get the target rotation in euler angles.
             </summary>
            </member>
        <member name="P:Urho.IKEffector.ChainLength">
             <summary>
             Returns the number of segments that will be affected by this effector. 0 Means all nodes between this effector
             and the next IKSolver.
             
             Or
             Sets the number of segments that will be affected. 0 Means all nodes between this effector and the next
             IKSolver.
             
             </summary>
            </member>
        <member name="P:Urho.IKEffector.Weight">
             <summary>
             How strongly the effector affects the solution.
             
             Or
             
             
             Sets how much influence the effector has on the solution.
             You can use this value to smoothly transition between a solved pose and
             an initial pose  For instance, lifting a foot off of the ground or
             letting go of an object.
             </summary>
            </member>
        <member name="P:Urho.IKEffector.RotationWeight">
             <summary>
             How strongly the target node's rotation influences the solution.
             
             Or
             
             
             Sets how much influence the target rotation should have on the
             solution. A value of 1 means to match the target rotation exactly, if
             possible. A value of 0 means to not match it at all.
             
             The solver must have target rotation enabled for this to have
             any effect. See IKSolver::IKEffectorFeature::TARGET_ROTATIONS.
             </summary>
            </member>
        <member name="P:Urho.IKEffector.RotationDecay">
             <summary>
             Retrieves the rotation decay factor. See SetRotationDecay() for info.
             
             Or
             
             
             A factor with which to control the target rotation influence of
             the next segments down the chain.
             For example, if this is set to 0.5 and the rotation weight is set to
             1.0, then the first segment will match the target rotation exactly, the
             next segment will match it only 50%, the next segment 25%, the next
             12.5%, etc. This parameter makes long chains look more natural when
             matching a target rotation.
             </summary>
            </member>
        <member name="P:Urho.IKEffector.FEATURE_WEIGHT_NLERP">
             <summary>
             Need these wrapper functions flags of GetFeature/SetFeature can be correctly exposed to the editor and to
             AngelScript and lua.
             </summary>
            </member>
        <member name="T:Urho.IKEffectorFeature">
             <summary>
             If you set the effector weight (see SetWeight()) to a value in
             </summary>
            </member>
        <member name="T:Urho.IKSolver">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.RegisterObject(Urho.Context)">
             <summary>
             Registers this class to the context.
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.GetAlgorithm">
             <summary>
             Returns the active algorithm.
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.SetAlgorithm(Urho.IKSolverAlgorithm)">
             <summary>
             
             
             Selects the solver algorithm. Default is FABRIK. Note that this
             may not be the most efficient algorithm available. The specialized
             solvers will be a lot faster.
             The currently supported solvers are listed below.
             + **FABRIK**: This is a fairly new and highly efficient inverse
             kinematic solving algorithm. It requires the least iterations to
             reach its goal, it does not suffer from singularities (nearly no
             violent snapping about), and it always converges.
             + **2 Bone**: A specialized solver optimized for 2 bone problems (such
             as a human leg)
             + **1 Bone**: A specialized solver optimized for 1 bone problems (such
             as a look-at target, e.g. eyes or a head)
             </summary>
            </member>
        <member name="M:Urho.IKSolver.GetFeature(Urho.IKSolverFeature)">
             <summary>
             Test if a certain feature is enabled (see IKSolver::IKSolverFeature).
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.SetFeature(Urho.IKSolverFeature,System.Boolean)">
             <summary>
             Enable or disable a certain feature (see IKSolver::IKSolverFeature).
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.GetMaximumIterations">
             <summary>
             Returns the configured maximum number of iterations.
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.SetMaximumIterations(System.UInt32)">
             <summary>
             
             
             Sets the maximum number of iterations the solver is allowed to
             perform before applying the result.
             Depending on the algorithm, you may want higher or lower values.
             FABRIK looks decent after only 10 iterations, whereas Jacobian based
             methods often require more than a 100.
             The default value is 20.
             
             Most algorithms have a convergence criteria at which the solver
             will stop iterating, so most of the time the maximum number of
             iterations isn't even reached.
             
             Number of iterations. Must be greater than 0. Higher
             values yield more accurate results, but at the cost of performance.
             </summary>
            </member>
        <member name="M:Urho.IKSolver.GetTolerance">
             <summary>
             Returns the configured tolerance.
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.SetTolerance(System.Single)">
             <summary>
             
             
             Sets the distance at which the effector is "close enough" to the
             target node, at which point the algorithm will stop iterating.
             
             The distance to set. Smaller values yield more accurate
             results, but at the cost of more iterations. Generally you'll want to
             specify a number that is about 1/100th to 1/1000th of the total size of
             the IK chain, e.g. if your human character has a leg that is 1 Urho3D
             unit long, a good starting tolerance would be 0.01.
             </summary>
            </member>
        <member name="M:Urho.IKSolver.RebuildChainTrees">
             <summary>
             
             Updates the solver's internal data structures, which is required
             whenever the tree is modified in any way (e.g. adding or removing nodes,
             adding or removing effectors, etc.).
             
             This gets called  automatically for you in Solve().
             </summary>
            </member>
        <member name="M:Urho.IKSolver.RecalculateSegmentLengths">
             <summary>
             
             Unusual, but if you have a tree with translational motions such
             that the distances between nodes changes (perhaps a slider?), you can
             call this to recalculate the segment lengths after assigning new
             positions to the nodes.
             
             This function gets called by RebuildData() and by extension in
             Solve().
             </summary>
            </member>
        <member name="M:Urho.IKSolver.CalculateJointRotations">
             <summary>
             
             Skinned models require joint rotations to be calculated so
             skinning works correctly. This is automatically enabled by default with
             the feature flag JOINT_ROTATIONS.
             </summary>
            </member>
        <member name="M:Urho.IKSolver.Solve">
             <summary>
             
             Invokes the solver. The solution is applied back to the scene
             graph automatically.
             
             By default this is called automatically for you if the feature
             flag AUTO_SOLVE is set. For more complex IK problems you can disable
             that flag and call Solve() in response to E_SCENEDRAWABLEUPDATEFINISHED.
             This is right after the animations have been applied.
             </summary>
            </member>
        <member name="M:Urho.IKSolver.ApplyOriginalPoseToScene">
             <summary>
             Copies the original pose into the scene graph. This will reset the pose
             to whatever state it had when the IKSolver component was first created,
             or, if the original pose was updated since then (for example if
             IKSolverFeature::UPDATE_ORIGINAL_POSE is set), will reset it to that state.
             </summary>
            </member>
        <member name="M:Urho.IKSolver.ApplySceneToOriginalPose">
             <summary>
             Copies the current scene graph data into the solvers original pose. You
             generally won't need to call this, because it gets called for you
             automatically if IKSolverFeature::UPDATE_ORIGINAL_POSE is set.
             </summary>
            </member>
        <member name="M:Urho.IKSolver.ApplyActivePoseToScene">
             <summary>
             Copies the solvers current active pose into the scene graph. You
             generally won't need to call this because it gets called for you
             automatically in Solve(). This is used to apply the solution back to the
             scene graph.
             </summary>
            </member>
        <member name="M:Urho.IKSolver.ApplySceneToActivePose">
             <summary>
             Copies the current scene graph data into the solvers active pose. You
             generally won't need to call this because it gets called for you
             automatically if IKSolverFeature::UPDATE_ACTIVE_POSE is set.
             </summary>
            </member>
        <member name="M:Urho.IKSolver.ApplyOriginalPoseToActivePose">
             <summary>
             Copies the solvers original pose into the solvers active pose. This is
             used in Solve() automatically if IKSolverFeature::USE_ORIGINAL_POSE is set.
             </summary>
            </member>
        <member name="M:Urho.IKSolver.GetFEATURE_JOINT_ROTATIONS">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.GetFEATURE_TARGET_ROTATIONS">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.GetFEATURE_UPDATE_ORIGINAL_POSE">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.GetFEATURE_UPDATE_ACTIVE_POSE">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.GetFEATURE_USE_ORIGINAL_POSE">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.GetFEATURE_CONSTRAINTS">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.GetFEATURE_AUTO_SOLVE">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.SetFEATURE_JOINT_ROTATIONS(System.Boolean)">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.SetFEATURE_TARGET_ROTATIONS(System.Boolean)">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.SetFEATURE_UPDATE_ORIGINAL_POSE(System.Boolean)">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.SetFEATURE_UPDATE_ACTIVE_POSE(System.Boolean)">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.SetFEATURE_USE_ORIGINAL_POSE(System.Boolean)">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.SetFEATURE_CONSTRAINTS(System.Boolean)">
             <summary>
             
             </summary>
            </member>
        <member name="M:Urho.IKSolver.SetFEATURE_AUTO_SOLVE(System.Boolean)">
             <summary>
             
             </summary>
            </member>
        <member name="P:Urho.IKSolver.Algorithm">
             <summary>
             Returns the active algorithm.
             
             Or
             
             
             Selects the solver algorithm. Default is FABRIK. Note that this
             may not be the most efficient algorithm available. The specialized
             solvers will be a lot faster.
             The currently supported solvers are listed below.
             + **FABRIK**: This is a fairly new and highly efficient inverse
             kinematic solving algorithm. It requires the least iterations to
             reach its goal, it does not suffer from singularities (nearly no
             violent snapping about), and it always converges.
             + **2 Bone**: A specialized solver optimized for 2 bone problems (such
             as a human leg)
             + **1 Bone**: A specialized solver optimized for 1 bone problems (such
             as a look-at target, e.g. eyes or a head)
             </summary>
            </member>
        <member name="P:Urho.IKSolver.MaximumIterations">
             <summary>
             Returns the configured maximum number of iterations.
             
             Or
             
             
             Sets the maximum number of iterations the solver is allowed to
             perform before applying the result.
             Depending on the algorithm, you may want higher or lower values.
             FABRIK looks decent after only 10 iterations, whereas Jacobian based
             methods often require more than a 100.
             The default value is 20.
             
             Most algorithms have a convergence criteria at which the solver
             will stop iterating, so most of the time the maximum number of
             iterations isn't even reached.
             
             Number of iterations. Must be greater than 0. Higher
             values yield more accurate results, but at the cost of performance.
             </summary>
            </member>
        <member name="P:Urho.IKSolver.Tolerance">
             <summary>
             Returns the configured tolerance.
             
             Or
             
             
             Sets the distance at which the effector is "close enough" to the
             target node, at which point the algorithm will stop iterating.
             
             The distance to set. Smaller values yield more accurate
             results, but at the cost of more iterations. Generally you'll want to
             specify a number that is about 1/100th to 1/1000th of the total size of
             the IK chain, e.g. if your human character has a leg that is 1 Urho3D
             unit long, a good starting tolerance would be 0.01.
             </summary>
            </member>
        <member name="P:Urho.IKSolver.FEATURE_JOINT_ROTATIONS">
             <summary>
             
             Or
             
             </summary>
            </member>
        <member name="P:Urho.IKSolver.FEATURE_TARGET_ROTATIONS">
             <summary>
             
             Or
             
             </summary>
            </member>
        <member name="P:Urho.IKSolver.FEATURE_UPDATE_ORIGINAL_POSE">
             <summary>
             
             Or
             
             </summary>
            </member>
        <member name="P:Urho.IKSolver.FEATURE_UPDATE_ACTIVE_POSE">
             <summary>
             
             Or
             
             </summary>
            </member>
        <member name="P:Urho.IKSolver.FEATURE_USE_ORIGINAL_POSE">
             <summary>
             
             Or
             
             </summary>
            </member>
        <member name="P:Urho.IKSolver.FEATURE_CONSTRAINTS">
             <summary>
             
             Or
             
             </summary>
            </member>
        <member name="P:Urho.IKSolver.FEATURE_AUTO_SOLVE">
             <summary>
             
             Or
             
             </summary>
            </member>
        <member name="T:Urho.IKSolverFeature">
             <summary>
             
             </summary>
            </member>
        <member name="T:Urho.InterpMethod">
             <summary>
             Interpolation method.
             </summary>
            </member>
        <member name="T:Urho.InterpolationMode">
             <summary>
             Bezier interpolation.
             </summary>
            </member>
        <member name="T:Urho.Intersection">
             <summary>
             Intersection test result.
             </summary>
            </member>
        <member name="T:Urho.Resources.JsonFile">
             <summary>
             JSON document resource.
             </summary>
            </member>
        <member name="M:Urho.Resources.JsonFile.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.JsonFile.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.JsonFile.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.JsonFile.Save(Urho.IO.File)">
             <summary>
             Save resource with default indentation (one tab). Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.JsonFile.Save(Urho.MemoryBuffer)">
             <summary>
             Save resource with default indentation (one tab). Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.JsonFile.Save(Urho.IO.File,System.String)">
             <summary>
             Save resource with user-defined indentation, only the first character (if any) of the string is used and the length of the string defines the character count. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.JsonFile.Save(Urho.MemoryBuffer,System.String)">
             <summary>
             Save resource with user-defined indentation, only the first character (if any) of the string is used and the length of the string defines the character count. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.JsonFile.FromString(System.String)">
             <summary>
             Deserialize from a string. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.JsonFile.ToDebugString(System.String)">
             <summary>
             Save to a string.
             </summary>
            </member>
        <member name="T:Urho.Resources.JsonNumberType">
             <summary>
             JSON number type.
             </summary>
            </member>
        <member name="T:Urho.Resources.JsonValueType">
             <summary>
             JSON value type.
             </summary>
            </member>
        <member name="T:Urho.Gui.LayoutMode">
             <summary>
             Layout operation mode.
             </summary>
            </member>
        <member name="T:Urho.LegacyVertexElement">
             <summary>
             Hardcoded legacy vertex elements.
             </summary>
            </member>
        <member name="T:Urho.Light">
             <summary>
             %Light component.
             </summary>
            </member>
        <member name="M:Urho.Light.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. Drawable must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.Light.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Light.SetLightType(Urho.LightType)">
             <summary>
             Set light type.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetPerVertex(System.Boolean)">
             <summary>
             Set vertex lighting mode.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetColor(Urho.Color)">
             <summary>
             Set color.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetTemperature(System.Single)">
             <summary>
             Set temperature of the light in Kelvin. Modulates the light color when "use physical values" is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetRadius(System.Single)">
             <summary>
             Set area light radius. Greater than zero activates area light mode. Works only with PBR shaders.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetLength(System.Single)">
             <summary>
             Set tube area light length. Works only with PBR shaders.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetUsePhysicalValues(System.Boolean)">
             <summary>
             Set use physical light values.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetSpecularIntensity(System.Single)">
             <summary>
             Set specular intensity. Zero disables specular calculations.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetBrightness(System.Single)">
             <summary>
             Set light brightness multiplier. Both the color and specular intensity are multiplied with this. When "use physical values" is enabled, the value is specified in lumens.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetRange(System.Single)">
             <summary>
             Set range.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetFov(System.Single)">
             <summary>
             Set spotlight field of view.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetAspectRatio(System.Single)">
             <summary>
             Set spotlight aspect ratio.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetFadeDistance(System.Single)">
             <summary>
             Set fade out start distance.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetShadowFadeDistance(System.Single)">
             <summary>
             Set shadow fade out start distance. Only has effect if shadow distance is also non-zero.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetShadowBias(Urho.BiasParameters)">
             <summary>
             Set shadow depth bias parameters.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetShadowCascade(Urho.CascadeParameters)">
             <summary>
             Set directional light cascaded shadow parameters.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetShadowFocus(Urho.FocusParameters)">
             <summary>
             Set shadow map focusing parameters.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetShadowIntensity(System.Single)">
             <summary>
             Set light intensity in shadow between 0.0 - 1.0. 0.0 (the default) gives fully dark shadows.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetShadowResolution(System.Single)">
             <summary>
             Set shadow resolution between 0.25 - 1.0. Determines the shadow map to use.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetShadowNearFarRatio(System.Single)">
             <summary>
             Set shadow camera near/far clip distance ratio for spot and point lights. Does not affect directional lights, since they are orthographic and have near clip 0.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetShadowMaxExtrusion(System.Single)">
             <summary>
             Set maximum shadow extrusion for directional lights. The actual extrusion will be the smaller of this and camera far clip. Default 1000.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetRampTexture(Urho.Texture)">
             <summary>
             Set range attenuation texture.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetShapeTexture(Urho.Texture)">
             <summary>
             Set spotlight attenuation texture.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetLightType">
             <summary>
             Return light type.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetPerVertex">
             <summary>
             Return vertex lighting mode.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetColor">
             <summary>
             Return color.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetTemperature">
             <summary>
             Return the temperature of the light in Kelvin.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetRadius">
             <summary>
             Return area light mode radius. Works only with PBR shaders.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetLength">
             <summary>
             Return area tube light length. Works only with PBR shaders.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetUsePhysicalValues">
             <summary>
             Return if light uses temperature and brightness in lumens.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetColorFromTemperature">
             <summary>
             Return the color value of the temperature in Kelvin.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetSpecularIntensity">
             <summary>
             Return specular intensity.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetBrightness">
             <summary>
             Return brightness multiplier. Specified in lumens when "use physical values" is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetEffectiveColor">
             <summary>
             Return effective color, multiplied by brightness and affected by temperature when "use physical values" is enabled. Alpha is always 1 so that can compare against the default black color to detect a light with no effect.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetEffectiveSpecularIntensity">
             <summary>
             Return effective specular intensity, multiplied by absolute value of brightness.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetRange">
             <summary>
             Return range.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetFov">
             <summary>
             Return spotlight field of view.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetAspectRatio">
             <summary>
             Return spotlight aspect ratio.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetFadeDistance">
             <summary>
             Return fade start distance.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetShadowFadeDistance">
             <summary>
             Return shadow fade start distance.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetShadowBias">
             <summary>
             Return shadow depth bias parameters.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetShadowCascade">
             <summary>
             Return directional light cascaded shadow parameters.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetShadowFocus">
             <summary>
             Return shadow map focus parameters.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetShadowIntensity">
             <summary>
             Return light intensity in shadow.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetShadowResolution">
             <summary>
             Return shadow resolution.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetShadowNearFarRatio">
             <summary>
             Return shadow camera near/far clip distance ratio.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetShadowMaxExtrusion">
             <summary>
             Return maximum shadow extrusion distance for directional lights.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetRampTexture">
             <summary>
             Return range attenuation texture.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetShapeTexture">
             <summary>
             Return spotlight attenuation texture.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetFrustum">
             <summary>
             Return spotlight frustum.
             
             </summary>
            </member>
        <member name="M:Urho.Light.GetViewSpaceFrustum(Urho.Matrix3x4)">
             <summary>
             Return spotlight frustum in the specified view space.
             </summary>
            </member>
        <member name="M:Urho.Light.GetNumShadowSplits">
             <summary>
             Return number of shadow map cascade splits for a directional light, considering also graphics API limitations.
             
             </summary>
            </member>
        <member name="M:Urho.Light.IsNegative">
             <summary>
             Return whether light has negative (darkening) color.
             
             </summary>
            </member>
        <member name="M:Urho.Light.SetIntensitySortValue(System.Single)">
             <summary>
             Set sort value based on intensity and view distance.
             </summary>
            </member>
        <member name="M:Urho.Light.SetIntensitySortValue(Urho.BoundingBox)">
             <summary>
             Set sort value based on overall intensity over a bounding box.
             </summary>
            </member>
        <member name="M:Urho.Light.SetLightQueue(Urho.LightBatchQueue*)">
             <summary>
             Set light queue used for this light. Called by View.
             </summary>
            </member>
        <member name="M:Urho.Light.GetVolumeTransform(Urho.Camera)">
             <summary>
             Return light volume model transform.
             </summary>
            </member>
        <member name="M:Urho.Light.GetLightQueue">
             <summary>
             Return light queue. Called by View.
             </summary>
            </member>
        <member name="M:Urho.Light.GetIntensityDivisor(System.Single)">
             <summary>
             Return a divisor value based on intensity for calculating the sort value.
             </summary>
            </member>
        <member name="M:Urho.Light.GetRampTextureAttr">
             <summary>
             Return ramp texture attribute.
             </summary>
            </member>
        <member name="M:Urho.Light.GetShapeTextureAttr">
             <summary>
             Return shape texture attribute.
             </summary>
            </member>
        <member name="M:Urho.Light.GetFullscreenQuadTransform(Urho.Camera)">
             <summary>
             Return a transform for deferred fullscreen quad (directional light) rendering.
             </summary>
            </member>
        <member name="P:Urho.Light.LightType">
             <summary>
             Return light type.
             
             Or
             Set light type.
             
             </summary>
            </member>
        <member name="P:Urho.Light.PerVertex">
             <summary>
             Return vertex lighting mode.
             
             Or
             Set vertex lighting mode.
             
             </summary>
            </member>
        <member name="P:Urho.Light.Color">
             <summary>
             Return color.
             
             Or
             Set color.
             
             </summary>
            </member>
        <member name="P:Urho.Light.Temperature">
             <summary>
             Return the temperature of the light in Kelvin.
             
             Or
             Set temperature of the light in Kelvin. Modulates the light color when "use physical values" is enabled.
             
             </summary>
            </member>
        <member name="P:Urho.Light.Radius">
             <summary>
             Return area light mode radius. Works only with PBR shaders.
             
             Or
             Set area light radius. Greater than zero activates area light mode. Works only with PBR shaders.
             
             </summary>
            </member>
        <member name="P:Urho.Light.Length">
             <summary>
             Return area tube light length. Works only with PBR shaders.
             
             Or
             Set tube area light length. Works only with PBR shaders.
             
             </summary>
            </member>
        <member name="P:Urho.Light.UsePhysicalValues">
             <summary>
             Return if light uses temperature and brightness in lumens.
             
             Or
             Set use physical light values.
             
             </summary>
            </member>
        <member name="P:Urho.Light.SpecularIntensity">
             <summary>
             Return specular intensity.
             
             Or
             Set specular intensity. Zero disables specular calculations.
             
             </summary>
            </member>
        <member name="P:Urho.Light.Brightness">
             <summary>
             Return brightness multiplier. Specified in lumens when "use physical values" is enabled.
             
             Or
             Set light brightness multiplier. Both the color and specular intensity are multiplied with this. When "use physical values" is enabled, the value is specified in lumens.
             
             </summary>
            </member>
        <member name="P:Urho.Light.Range">
             <summary>
             Return range.
             
             Or
             Set range.
             
             </summary>
            </member>
        <member name="P:Urho.Light.Fov">
             <summary>
             Return spotlight field of view.
             
             Or
             Set spotlight field of view.
             
             </summary>
            </member>
        <member name="P:Urho.Light.AspectRatio">
             <summary>
             Return spotlight aspect ratio.
             
             Or
             Set spotlight aspect ratio.
             
             </summary>
            </member>
        <member name="P:Urho.Light.FadeDistance">
             <summary>
             Return fade start distance.
             
             Or
             Set fade out start distance.
             
             </summary>
            </member>
        <member name="P:Urho.Light.ShadowFadeDistance">
             <summary>
             Return shadow fade start distance.
             
             Or
             Set shadow fade out start distance. Only has effect if shadow distance is also non-zero.
             
             </summary>
            </member>
        <member name="P:Urho.Light.ShadowBias">
             <summary>
             Return shadow depth bias parameters.
             
             Or
             Set shadow depth bias parameters.
             
             </summary>
            </member>
        <member name="P:Urho.Light.ShadowCascade">
             <summary>
             Return directional light cascaded shadow parameters.
             
             Or
             Set directional light cascaded shadow parameters.
             
             </summary>
            </member>
        <member name="P:Urho.Light.ShadowFocus">
             <summary>
             Return shadow map focus parameters.
             
             Or
             Set shadow map focusing parameters.
             
             </summary>
            </member>
        <member name="P:Urho.Light.ShadowIntensity">
             <summary>
             Return light intensity in shadow.
             
             Or
             Set light intensity in shadow between 0.0 - 1.0. 0.0 (the default) gives fully dark shadows.
             
             </summary>
            </member>
        <member name="P:Urho.Light.ShadowResolution">
             <summary>
             Return shadow resolution.
             
             Or
             Set shadow resolution between 0.25 - 1.0. Determines the shadow map to use.
             
             </summary>
            </member>
        <member name="P:Urho.Light.ShadowNearFarRatio">
             <summary>
             Return shadow camera near/far clip distance ratio.
             
             Or
             Set shadow camera near/far clip distance ratio for spot and point lights. Does not affect directional lights, since they are orthographic and have near clip 0.
             
             </summary>
            </member>
        <member name="P:Urho.Light.ShadowMaxExtrusion">
             <summary>
             Return maximum shadow extrusion distance for directional lights.
             
             Or
             Set maximum shadow extrusion for directional lights. The actual extrusion will be the smaller of this and camera far clip. Default 1000.
             
             </summary>
            </member>
        <member name="P:Urho.Light.RampTexture">
             <summary>
             Return range attenuation texture.
             
             Or
             Set range attenuation texture.
             
             </summary>
            </member>
        <member name="P:Urho.Light.ShapeTexture">
             <summary>
             Return spotlight attenuation texture.
             
             Or
             Set spotlight attenuation texture.
             
             </summary>
            </member>
        <member name="P:Urho.Light.ColorFromTemperature">
             <summary>
             Return the color value of the temperature in Kelvin.
             
             </summary>
            </member>
        <member name="P:Urho.Light.EffectiveColor">
             <summary>
             Return effective color, multiplied by brightness and affected by temperature when "use physical values" is enabled. Alpha is always 1 so that can compare against the default black color to detect a light with no effect.
             
             </summary>
            </member>
        <member name="P:Urho.Light.EffectiveSpecularIntensity">
             <summary>
             Return effective specular intensity, multiplied by absolute value of brightness.
             
             </summary>
            </member>
        <member name="P:Urho.Light.Frustum">
             <summary>
             Return spotlight frustum.
             
             </summary>
            </member>
        <member name="P:Urho.Light.NumShadowSplits">
             <summary>
             Return number of shadow map cascade splits for a directional light, considering also graphics API limitations.
             
             </summary>
            </member>
        <member name="P:Urho.Light.Negative">
             <summary>
             Return whether light has negative (darkening) color.
             
             </summary>
            </member>
        <member name="P:Urho.Light.LightQueue">
             <summary>
             Return light queue. Called by View.
             Or
             Set light queue used for this light. Called by View.
             </summary>
            </member>
        <member name="P:Urho.Light.RampTextureAttr">
             <summary>
             Return ramp texture attribute.
             </summary>
            </member>
        <member name="P:Urho.Light.ShapeTextureAttr">
             <summary>
             Return shape texture attribute.
             </summary>
            </member>
        <member name="T:Urho.LightPSVariation">
             <summary>
             Light pixel shader variations.
             </summary>
            </member>
        <member name="T:Urho.LightType">
             <summary>
             %Light types.
             </summary>
            </member>
        <member name="T:Urho.LightVSVariation">
             <summary>
             Light vertex shader variations.
             </summary>
            </member>
        <member name="T:Urho.Gui.LineEdit">
             <summary>
             Single-line text editor %UI element.
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately.
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.Update(System.Single)">
             <summary>
             Perform UI element update.
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.OnTextInput(System.String)">
             <summary>
             React to text input event.
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.SetText(System.String)">
             <summary>
             Set text.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.SetCursorPosition(System.UInt32)">
             <summary>
             Set cursor position.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.SetCursorBlinkRate(System.Single)">
             <summary>
             Set cursor blink rate. 0 disables blinking.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.SetMaxLength(System.UInt32)">
             <summary>
             Set maximum text length. 0 for unlimited.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.SetEchoCharacter(System.UInt32)">
             <summary>
             Set echo character for password entry and such. 0 (default) shows the actual text.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.SetCursorMovable(System.Boolean)">
             <summary>
             Set whether can move cursor with arrows or mouse, default true.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.SetTextSelectable(System.Boolean)">
             <summary>
             Set whether selections are allowed, default true.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.SetTextCopyable(System.Boolean)">
             <summary>
             Set whether copy-paste operations are allowed, default true.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.GetText">
             <summary>
             Return text.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.GetCursorPosition">
             <summary>
             Return cursor position.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.GetCursorBlinkRate">
             <summary>
             Return cursor blink rate.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.GetMaxLength">
             <summary>
             Return maximum text length.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.GetEchoCharacter">
             <summary>
             Return echo character.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.IsCursorMovable">
             <summary>
             Return whether can move cursor with arrows or mouse.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.IsTextSelectable">
             <summary>
             Return whether selections are allowed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.IsTextCopyable">
             <summary>
             Return whether copy-paste operations are allowed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.GetTextElement">
             <summary>
             Return text element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.LineEdit.GetCursor">
             <summary>
             Return cursor element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.LineEdit.Text">
             <summary>
             Return text.
             
             Or
             Set text.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.LineEdit.CursorPosition">
             <summary>
             Return cursor position.
             
             Or
             Set cursor position.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.LineEdit.CursorBlinkRate">
             <summary>
             Return cursor blink rate.
             
             Or
             Set cursor blink rate. 0 disables blinking.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.LineEdit.MaxLength">
             <summary>
             Return maximum text length.
             
             Or
             Set maximum text length. 0 for unlimited.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.LineEdit.EchoCharacter">
             <summary>
             Return echo character.
             
             Or
             Set echo character for password entry and such. 0 (default) shows the actual text.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.LineEdit.CursorMovable">
             <summary>
             Return whether can move cursor with arrows or mouse.
             
             Or
             Set whether can move cursor with arrows or mouse, default true.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.LineEdit.TextSelectable">
             <summary>
             Return whether selections are allowed.
             
             Or
             Set whether selections are allowed, default true.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.LineEdit.TextCopyable">
             <summary>
             Return whether copy-paste operations are allowed.
             
             Or
             Set whether copy-paste operations are allowed, default true.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.LineEdit.TextElement">
             <summary>
             Return text element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.LineEdit.Cursor">
             <summary>
             Return cursor element.
             
             </summary>
            </member>
        <member name="T:Urho.Gui.ListView">
             <summary>
             Scrollable list %UI element.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.OnResize(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             React to resize.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.UpdateInternalLayout">
             <summary>
             Manually update layout on internal elements.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.DisableInternalLayoutUpdate">
             <summary>
             Disable automatic layout update for internal elements.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.EnableInternalLayoutUpdate">
             <summary>
             Enable automatic layout update for internal elements.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.AddItem(Urho.Gui.UIElement)">
             <summary>
             Add item to the end of the list.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.InsertItem(System.UInt32,Urho.Gui.UIElement,Urho.Gui.UIElement)">
             <summary>
             
             Insert item at a specific index. In hierarchy mode, the optional parameter will be used to determine the child's indent level in respect to its parent.
             If index is greater than the total items then the new item is inserted at the end of the list.
             In hierarchy mode, if index is greater than the index of last children of the specified parent item then the new item is inserted next to the last children.
             And if the index is lesser than the index of the parent item itself then the new item is inserted before the first child item.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.RemoveItem(Urho.Gui.UIElement,System.UInt32)">
             <summary>
             Remove specific item, starting search at the specified index if provided. In hierarchy mode will also remove any children.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.RemoveItem(System.UInt32)">
             <summary>
             Remove item at index. In hierarchy mode will also remove any children.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.RemoveAllItems">
             <summary>
             Remove all items.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.SetSelection(System.UInt32)">
             <summary>
             Set selection.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.AddSelection(System.UInt32)">
             <summary>
             Add item to the selection, multiselect mode only.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.RemoveSelection(System.UInt32)">
             <summary>
             Remove item from the selection.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.ToggleSelection(System.UInt32)">
             <summary>
             Toggle selection of an item.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.ChangeSelection(System.Int32,System.Boolean)">
             <summary>
             Move selection by a delta and clamp at list ends. If additive (multiselect only), will add to the existing selection.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.ClearSelection">
             <summary>
             Clear selection.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.SetHighlightMode(Urho.Gui.HighlightMode)">
             <summary>
             Set selected items' highlight mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.SetMultiselect(System.Boolean)">
             <summary>
             Enable multiselect.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.SetHierarchyMode(System.Boolean)">
             <summary>
             
             Enable hierarchy mode. Allows items to have parent-child relationship at different indent level and the ability to expand/collapse child items.
             All items in the list will be lost during mode change.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.SetBaseIndent(System.Int32)">
             <summary>
             Set base indent, i.e. the indent level of the ultimate parent item.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.SetClearSelectionOnDefocus(System.Boolean)">
             <summary>
             Enable clearing of selection on defocus.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.SetSelectOnClickEnd(System.Boolean)">
             <summary>
             Enable reacting to click end instead of click start for item selection. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.Expand(System.UInt32,System.Boolean,System.Boolean)">
             <summary>
             Expand item at index. Only has effect in hierarchy mode.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.ToggleExpand(System.UInt32,System.Boolean)">
             <summary>
             Toggle item's expanded flag at index. Only has effect in hierarchy mode.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.GetNumItems">
             <summary>
             Return number of items.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.GetItem(System.UInt32)">
             <summary>
             Return item at index.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.FindItem(Urho.Gui.UIElement)">
             <summary>
             Return index of item, or M_MAX_UNSIGNED If not found.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.GetSelection">
             <summary>
             Return first selected index, or M_MAX_UNSIGNED if none selected.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.CopySelectedItemsToClipboard">
             <summary>
             Copy selected items to system clipboard. Currently only applicable to Text items.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.GetSelectedItem">
             <summary>
             Return first selected item, or null if none selected.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.IsSelected(System.UInt32)">
             <summary>
             Return whether an item at index is selected.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.IsExpanded(System.UInt32)">
             <summary>
             Return whether an item at index has its children expanded (in hierarchy mode only).
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.GetHighlightMode">
             <summary>
             Return highlight mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.GetMultiselect">
             <summary>
             Return whether multiselect enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.GetClearSelectionOnDefocus">
             <summary>
             Return whether selection is cleared on defocus.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.GetSelectOnClickEnd">
             <summary>
             Return whether reacts to click end instead of click start for item selection.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.GetHierarchyMode">
             <summary>
             Return whether hierarchy mode enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.GetBaseIndent">
             <summary>
             Return base indent.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.EnsureItemVisibility(System.UInt32)">
             <summary>
             Ensure full visibility of the item.
             </summary>
            </member>
        <member name="M:Urho.Gui.ListView.EnsureItemVisibility(Urho.Gui.UIElement)">
             <summary>
             Ensure full visibility of the item.
             </summary>
            </member>
        <member name="P:Urho.Gui.ListView.Selection">
             <summary>
             Return first selected index, or M_MAX_UNSIGNED if none selected.
             
             Or
             Set selection.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ListView.HighlightMode">
             <summary>
             Return highlight mode.
             
             Or
             Set selected items' highlight mode.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ListView.Multiselect">
             <summary>
             Return whether multiselect enabled.
             
             Or
             Enable multiselect.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ListView.HierarchyMode">
             <summary>
             Return whether hierarchy mode enabled.
             
             Or
             
             Enable hierarchy mode. Allows items to have parent-child relationship at different indent level and the ability to expand/collapse child items.
             All items in the list will be lost during mode change.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ListView.BaseIndent">
             <summary>
             Return base indent.
             
             Or
             Set base indent, i.e. the indent level of the ultimate parent item.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ListView.ClearSelectionOnDefocus">
             <summary>
             Return whether selection is cleared on defocus.
             
             Or
             Enable clearing of selection on defocus.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ListView.SelectOnClickEnd">
             <summary>
             Return whether reacts to click end instead of click start for item selection.
             
             Or
             Enable reacting to click end instead of click start for item selection. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ListView.NumItems">
             <summary>
             Return number of items.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ListView.SelectedItem">
             <summary>
             Return first selected item, or null if none selected.
             
             </summary>
            </member>
        <member name="T:Urho.LoadMode">
             <summary>
             Asynchronous scene loading mode.
             </summary>
            </member>
        <member name="T:Urho.Resources.Localization">
             <summary>
             %Localization subsystem. Stores all the strings in all languages.
             </summary>
            </member>
        <member name="M:Urho.Resources.Localization.GetNumLanguages">
             <summary>
             Return the number of languages.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Localization.GetLanguageIndex">
             <summary>
             Return the index number of current language. The index is determined by the order of loading.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Localization.GetLanguageIndex(System.String)">
             <summary>
             Return the index number of language. The index is determined by the order of loading.
             </summary>
            </member>
        <member name="M:Urho.Resources.Localization.GetLanguage">
             <summary>
             Return the name of current language.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Localization.GetLanguage(System.Int32)">
             <summary>
             Return the name of language.
             </summary>
            </member>
        <member name="M:Urho.Resources.Localization.SetLanguage(System.Int32)">
             <summary>
             Set current language.
             </summary>
            </member>
        <member name="M:Urho.Resources.Localization.SetLanguage(System.String)">
             <summary>
             Set current language.
             </summary>
            </member>
        <member name="M:Urho.Resources.Localization.Get(System.String)">
             <summary>
             Return a string in the current language. Returns String::EMPTY if id is empty. Returns id if translation is not found and logs a warning.
             </summary>
            </member>
        <member name="M:Urho.Resources.Localization.Reset">
             <summary>
             Clear all loaded strings.
             </summary>
            </member>
        <member name="M:Urho.Resources.Localization.LoadJsonFile(System.String,System.String)">
             <summary>
             Load strings from JSONFile. The file should be UTF8 without BOM.
             </summary>
            </member>
        <member name="P:Urho.Resources.Localization.NumLanguages">
             <summary>
             Return the number of languages.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Localization.LanguageIndex">
             <summary>
             Return the index number of current language. The index is determined by the order of loading.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Localization.Language">
             <summary>
             Return the name of current language.
             
             </summary>
            </member>
        <member name="T:Urho.LockState">
             <summary>
             Vertex/index buffer lock state.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.LoopMode">
             <summary>
             Loop Mode.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.LoopMode2D">
             <summary>
             Loop mode.
             </summary>
            </member>
        <member name="T:Urho.Gui.Menu">
             <summary>
             %Menu %UI element that optionally shows a popup.
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.LoadXml(Urho.Resources.XmlElement,Urho.Resources.XmlFile)">
             <summary>
             Load from XML data with style. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.SaveXml(Urho.Resources.XmlElement)">
             <summary>
             Save as XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.Update(System.Single)">
             <summary>
             Perform UI element update.
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.OnShowPopup">
             <summary>
             React to the popup being shown.
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.OnHidePopup">
             <summary>
             React to the popup being hidden.
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.SetPopup(Urho.Gui.UIElement)">
             <summary>
             Set popup element to show on selection.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.SetPopupOffset(Urho.IntVector2)">
             <summary>
             Set popup element offset.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.SetPopupOffset(System.Int32,System.Int32)">
             <summary>
             Set popup element offset.
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.ShowPopup(System.Boolean)">
             <summary>
             Force the popup to show or hide.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.SetAccelerator(System.Int32,System.Int32)">
             <summary>
             Set accelerator key (set zero key code to disable).
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.GetPopup">
             <summary>
             Return popup element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.GetPopupOffset">
             <summary>
             Return popup element offset.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.GetShowPopup">
             <summary>
             Return whether popup is open.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.GetAcceleratorKey">
             <summary>
             Return accelerator key code, 0 if disabled.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Menu.GetAcceleratorQualifiers">
             <summary>
             Return accelerator qualifiers.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Menu.Popup">
             <summary>
             Return popup element.
             
             Or
             Set popup element to show on selection.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Menu.PopupOffset">
             <summary>
             Return popup element offset.
             
             Or
             Set popup element offset.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Menu.IsPopupShown">
             <summary>
             Return whether popup is open.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Menu.AcceleratorKey">
             <summary>
             Return accelerator key code, 0 if disabled.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Menu.AcceleratorQualifiers">
             <summary>
             Return accelerator qualifiers.
             
             </summary>
            </member>
        <member name="T:Urho.Gui.MessageBox">
             <summary>
             Message box dialog. Manages its lifetime automatically, so the application does not need to hold a reference to it, and shouldn't attempt to destroy it manually.
             </summary>
            </member>
        <member name="M:Urho.Gui.MessageBox.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.MessageBox.SetTitle(System.String)">
             <summary>
             Set title text. No-ops if there is no title text element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.MessageBox.SetMessage(System.String)">
             <summary>
             Set message text. No-ops if there is no message text element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.MessageBox.GetTitle">
             <summary>
             Return title text. Return empty string if there is no title text element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.MessageBox.GetMessage">
             <summary>
             Return message text. Return empty string if there is no message text element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.MessageBox.GetWindow">
             <summary>
             Return dialog window.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.MessageBox.Title">
             <summary>
             Return title text. Return empty string if there is no title text element.
             
             Or
             Set title text. No-ops if there is no title text element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.MessageBox.Message">
             <summary>
             Return message text. Return empty string if there is no message text element.
             
             Or
             Set message text. No-ops if there is no message text element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.MessageBox.Window">
             <summary>
             Return dialog window.
             
             </summary>
            </member>
        <member name="T:Urho.MouseMode">
             <summary>
             %Input Mouse Modes.
             </summary>
            </member>
        <member name="T:Urho.Navigation.NavArea">
             <summary>
             Construct.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavArea.RegisterObject(Urho.Context)">
             <summary>
             Register object factory and attributes.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavArea.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Render debug geometry for the bounds.
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavArea.GetAreaID">
             <summary>
             Get the area id for this volume.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavArea.SetAreaID(System.UInt32)">
             <summary>
             Set the area id for this volume.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavArea.GetBoundingBox">
             <summary>
             Get the bounding box of this navigation area, in local space.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavArea.SetBoundingBox(Urho.BoundingBox)">
             <summary>
             Set the bounding box of this area, in local space.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.NavArea.GetWorldBoundingBox">
             <summary>
             Get the bounds of this navigation area in world space.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavArea.AreaID">
             <summary>
             Get the area id for this volume.
             
             Or
             Set the area id for this volume.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavArea.BoundingBox">
             <summary>
             Get the bounding box of this navigation area, in local space.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.NavArea.WorldBoundingBox">
             <summary>
             Get the bounds of this navigation area in world space.
             
             </summary>
            </member>
        <member name="T:Urho.Navigation.Navigable">
             <summary>
             Component which tags geometry for inclusion in the navigation mesh. Optionally auto-includes geometry from child nodes.
             </summary>
            </member>
        <member name="M:Urho.Navigation.Navigable.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.Navigable.SetRecursive(System.Boolean)">
             <summary>
             Set whether geometry is automatically collected from child nodes. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.Navigable.IsRecursive">
             <summary>
             Return whether geometry is automatically collected from child nodes.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.Navigable.Recursive">
             <summary>
             Return whether geometry is automatically collected from child nodes.
             
             Or
             Set whether geometry is automatically collected from child nodes. Default true.
             
             </summary>
            </member>
        <member name="T:Urho.NavigationPathPointFlag">
             <summary>
             A flag representing the type of path point- none, the start of a path segment, the end of one, or an off-mesh connection.
             </summary>
            </member>
        <member name="T:Urho.Network.NetworkPriority">
             <summary>
             %Network interest management settings component.
             </summary>
            </member>
        <member name="M:Urho.Network.NetworkPriority.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Network.NetworkPriority.SetBasePriority(System.Single)">
             <summary>
             Set base priority. Default 100 (send updates at full frequency).
             
             </summary>
            </member>
        <member name="M:Urho.Network.NetworkPriority.SetDistanceFactor(System.Single)">
             <summary>
             Set priority reduction distance factor. Default 0 (no effect).
             
             </summary>
            </member>
        <member name="M:Urho.Network.NetworkPriority.SetMinPriority(System.Single)">
             <summary>
             Set minimum priority. Default 0 (no updates when far away enough).
             
             </summary>
            </member>
        <member name="M:Urho.Network.NetworkPriority.SetAlwaysUpdateOwner(System.Boolean)">
             <summary>
             Set whether updates to owner should be sent always at full rate. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.Network.NetworkPriority.GetBasePriority">
             <summary>
             Return base priority.
             
             </summary>
            </member>
        <member name="M:Urho.Network.NetworkPriority.GetDistanceFactor">
             <summary>
             Return priority reduction distance factor.
             
             </summary>
            </member>
        <member name="M:Urho.Network.NetworkPriority.GetMinPriority">
             <summary>
             Return minimum priority.
             
             </summary>
            </member>
        <member name="M:Urho.Network.NetworkPriority.GetAlwaysUpdateOwner">
             <summary>
             Return whether updates to owner should be sent always at full rate.
             
             </summary>
            </member>
        <member name="M:Urho.Network.NetworkPriority.CheckUpdate(System.Single,System.Single@)">
             <summary>
             Increment and check priority accumulator. Return true if should update. Called by Connection.
             </summary>
            </member>
        <member name="P:Urho.Network.NetworkPriority.BasePriority">
             <summary>
             Return base priority.
             
             Or
             Set base priority. Default 100 (send updates at full frequency).
             
             </summary>
            </member>
        <member name="P:Urho.Network.NetworkPriority.DistanceFactor">
             <summary>
             Return priority reduction distance factor.
             
             Or
             Set priority reduction distance factor. Default 0 (no effect).
             
             </summary>
            </member>
        <member name="P:Urho.Network.NetworkPriority.MinPriority">
             <summary>
             Return minimum priority.
             
             Or
             Set minimum priority. Default 0 (no updates when far away enough).
             
             </summary>
            </member>
        <member name="P:Urho.Network.NetworkPriority.AlwaysUpdateOwner">
             <summary>
             Return whether updates to owner should be sent always at full rate.
             
             Or
             Set whether updates to owner should be sent always at full rate. Default true.
             
             </summary>
            </member>
        <member name="T:Urho.Time">
             <summary>
             %Time and frame counter subsystem.
             </summary>
            </member>
        <member name="M:Urho.Time.BeginFrame(System.Single)">
             <summary>
             Begin new frame, with (last) frame duration in seconds and send frame start event.
             </summary>
            </member>
        <member name="M:Urho.Time.EndFrame">
             <summary>
             End frame. Increment total time and send frame end event.
             </summary>
            </member>
        <member name="M:Urho.Time.SetTimerPeriod(System.UInt32)">
             <summary>
             Set the low-resolution timer period in milliseconds. 0 resets to the default period.
             </summary>
            </member>
        <member name="M:Urho.Time.GetFrameNumber">
             <summary>
             Return frame number, starting from 1 once BeginFrame() is called for the first time.
             
             </summary>
            </member>
        <member name="M:Urho.Time.GetTimeStep">
             <summary>
             Return current frame timestep as seconds.
             
             </summary>
            </member>
        <member name="M:Urho.Time.GetTimerPeriod">
             <summary>
             Return current low-resolution timer period in milliseconds.
             </summary>
            </member>
        <member name="M:Urho.Time.GetElapsedTime">
             <summary>
             Return elapsed time from program start as seconds.
             
             </summary>
            </member>
        <member name="M:Urho.Time.GetFramesPerSecond">
             <summary>
             Return current frames per second.
             
             </summary>
            </member>
        <member name="M:Urho.Time.GetSystemTime">
             <summary>
             Get system time as milliseconds.
             </summary>
            </member>
        <member name="M:Urho.Time.GetTimeSinceEpoch">
             <summary>
             Get system time as seconds since 1.1.1970.
             </summary>
            </member>
        <member name="M:Urho.Time.GetTimeStamp">
             <summary>
             Get a date/time stamp as a string.
             </summary>
            </member>
        <member name="M:Urho.Time.Sleep(System.UInt32)">
             <summary>
             Sleep for a number of milliseconds.
             </summary>
            </member>
        <member name="P:Urho.Time.TimerPeriod">
             <summary>
             Return current low-resolution timer period in milliseconds.
             Or
             Set the low-resolution timer period in milliseconds. 0 resets to the default period.
             </summary>
            </member>
        <member name="P:Urho.Time.FrameNumber">
             <summary>
             Return frame number, starting from 1 once BeginFrame() is called for the first time.
             
             </summary>
            </member>
        <member name="P:Urho.Time.TimeStep">
             <summary>
             Return current frame timestep as seconds.
             
             </summary>
            </member>
        <member name="P:Urho.Time.ElapsedTime">
             <summary>
             Return elapsed time from program start as seconds.
             
             </summary>
            </member>
        <member name="P:Urho.Time.FramesPerSecond">
             <summary>
             Return current frames per second.
             
             </summary>
            </member>
        <member name="P:Urho.Time.SystemTime">
             <summary>
             Get system time as milliseconds.
             </summary>
            </member>
        <member name="P:Urho.Time.TimeSinceEpoch">
             <summary>
             Get system time as seconds since 1.1.1970.
             </summary>
            </member>
        <member name="P:Urho.Time.TimeStamp">
             <summary>
             Get a date/time stamp as a string.
             </summary>
            </member>
        <member name="T:Urho.WorkQueue">
             <summary>
             Work queue subsystem for multithreading.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.CreateThreads(System.UInt32)">
             <summary>
             Create worker threads. Can only be called once.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.GetFreeItem">
             <summary>
             Get pointer to an usable WorkItem from the item pool. Allocate one if no more free items.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.Pause">
             <summary>
             Pause worker threads.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.Resume">
             <summary>
             Resume worker threads.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.Complete(System.UInt32)">
             <summary>
             Finish all queued work which has at least the specified priority. Main thread will also execute priority work. Pause worker threads if no more work remains.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.SetTolerance(System.Int32)">
             <summary>
             Set the pool telerance before it starts deleting pool items.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.SetNonThreadedWorkMs(System.Int32)">
             <summary>
             Set how many milliseconds maximum per frame to spend on low-priority work, when there are no worker threads.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.GetNumThreads">
             <summary>
             Return number of worker threads.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.IsCompleted(System.UInt32)">
             <summary>
             Return whether all work with at least the specified priority is finished.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.IsCompleting">
             <summary>
             Return whether the queue is currently completing work in the main thread.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.GetTolerance">
             <summary>
             Return the pool tolerance.
             </summary>
            </member>
        <member name="M:Urho.WorkQueue.GetNonThreadedWorkMs">
             <summary>
             Return how many milliseconds maximum to spend on non-threaded low-priority work.
             </summary>
            </member>
        <member name="P:Urho.WorkQueue.FreeItem">
             <summary>
             Get pointer to an usable WorkItem from the item pool. Allocate one if no more free items.
             </summary>
            </member>
        <member name="P:Urho.WorkQueue.Tolerance">
             <summary>
             Return the pool tolerance.
             Or
             Set the pool telerance before it starts deleting pool items.
             </summary>
            </member>
        <member name="P:Urho.WorkQueue.NonThreadedWorkMs">
             <summary>
             Return how many milliseconds maximum to spend on non-threaded low-priority work.
             Or
             Set how many milliseconds maximum per frame to spend on low-priority work, when there are no worker threads.
             </summary>
            </member>
        <member name="P:Urho.WorkQueue.NumThreads">
             <summary>
             Return number of worker threads.
             </summary>
            </member>
        <member name="P:Urho.WorkQueue.Completing">
             <summary>
             Return whether the queue is currently completing work in the main thread.
             </summary>
            </member>
        <member name="T:Urho.Terrain">
             <summary>
             Heightmap terrain component.
             </summary>
            </member>
        <member name="M:Urho.Terrain.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.Terrain.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetPatchSize(System.Int32)">
             <summary>
             Set patch quads per side. Must be a power of two.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetSpacing(Urho.Vector3)">
             <summary>
             Set vertex (XZ) and height (Y) spacing.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetMaxLodLevels(System.UInt32)">
             <summary>
             Set maximum number of LOD levels for terrain patches. This can be between 1-4.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetOcclusionLodLevel(System.UInt32)">
             <summary>
             Set LOD level used for terrain patch occlusion. By default (M_MAX_UNSIGNED) the coarsest. Since the LOD level used needs to be fixed, using finer LOD levels may result in false positive occlusion in cases where the actual rendered geometry is coarser, so use with caution.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetSmoothing(System.Boolean)">
             <summary>
             Set smoothing of heightmap.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetHeightMap(Urho.Resources.Image)">
             <summary>
             Set heightmap image. Dimensions should be a power of two + 1. Uses 8-bit grayscale, or optionally red as MSB and green as LSB for 16-bit accuracy. Return true if successful.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetMaterial(Urho.Material)">
             <summary>
             Set material.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetNorthNeighbor(Urho.Terrain)">
             <summary>
             Set north (positive Z) neighbor terrain for seamless LOD changes across terrains.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetSouthNeighbor(Urho.Terrain)">
             <summary>
             Set south (negative Z) neighbor terrain for seamless LOD changes across terrains.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetWestNeighbor(Urho.Terrain)">
             <summary>
             Set west (negative X) neighbor terrain for seamless LOD changes across terrains.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetEastNeighbor(Urho.Terrain)">
             <summary>
             Set east (positive X) neighbor terrain for seamless LOD changes across terrains.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetNeighbors(Urho.Terrain,Urho.Terrain,Urho.Terrain,Urho.Terrain)">
             <summary>
             Set all neighbor terrains at once.
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetDrawDistance(System.Single)">
             <summary>
             Set draw distance for patches.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetShadowDistance(System.Single)">
             <summary>
             Set shadow draw distance for patches.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetLodBias(System.Single)">
             <summary>
             Set LOD bias for patches. Affects which terrain LOD to display.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetViewMask(System.UInt32)">
             <summary>
             Set view mask for patches. Is and'ed with camera's view mask to see if the object should be rendered.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetLightMask(System.UInt32)">
             <summary>
             Set light mask for patches. Is and'ed with light's and zone's light mask to see if the object should be lit.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetShadowMask(System.UInt32)">
             <summary>
             Set shadow mask for patches. Is and'ed with light's light mask and zone's shadow mask to see if the object should be rendered to a shadow map.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetZoneMask(System.UInt32)">
             <summary>
             Set zone mask for patches. Is and'ed with zone's zone mask to see if the object should belong to the zone.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetMaxLights(System.UInt32)">
             <summary>
             Set maximum number of per-pixel lights for patches. Default 0 is unlimited.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetCastShadows(System.Boolean)">
             <summary>
             Set shadowcaster flag for patches.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetOccluder(System.Boolean)">
             <summary>
             Set occlusion flag for patches. Occlusion uses the coarsest LOD by default.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetOccludee(System.Boolean)">
             <summary>
             Set occludee flag for patches.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.ApplyHeightMap">
             <summary>
             Apply changes from the heightmap image.
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetPatchSize">
             <summary>
             Return patch quads per side.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetSpacing">
             <summary>
             Return vertex and height spacing.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetNumVertices">
             <summary>
             Return heightmap size in vertices.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetNumPatches">
             <summary>
             Return heightmap size in patches.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetMaxLodLevels">
             <summary>
             Return maximum number of LOD levels for terrain patches. This can be between 1-4.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetOcclusionLodLevel">
             <summary>
             Return LOD level used for occlusion.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetSmoothing">
             <summary>
             Return whether smoothing is in use.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetHeightMap">
             <summary>
             Return heightmap image.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetMaterial">
             <summary>
             Return material.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetPatch(System.UInt32)">
             <summary>
             Return patch by index.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetPatch(System.Int32,System.Int32)">
             <summary>
             Return patch by patch coordinates.
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetNeighborPatch(System.Int32,System.Int32)">
             <summary>
             Return patch by patch coordinates including neighbor terrains.
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetHeight(Urho.Vector3)">
             <summary>
             Return height at world coordinates.
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetNormal(Urho.Vector3)">
             <summary>
             Return normal at world coordinates.
             </summary>
            </member>
        <member name="M:Urho.Terrain.WorldToHeightMap(Urho.Vector3)">
             <summary>
             Convert world position to heightmap pixel position. Note that the internal height data representation is reversed vertically, but in the heightmap image north is at the top.
             </summary>
            </member>
        <member name="M:Urho.Terrain.HeightMapToWorld(Urho.IntVector2)">
             <summary>
             Convert heightmap pixel position to world position.
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetNorthNeighbor">
             <summary>
             Return north neighbor terrain.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetSouthNeighbor">
             <summary>
             Return south neighbor terrain.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetWestNeighbor">
             <summary>
             Return west neighbor terrain.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetEastNeighbor">
             <summary>
             Return east neighbor terrain.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetDrawDistance">
             <summary>
             Return draw distance.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetShadowDistance">
             <summary>
             Return shadow draw distance.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetLodBias">
             <summary>
             Return LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetViewMask">
             <summary>
             Return view mask.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetLightMask">
             <summary>
             Return light mask.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetShadowMask">
             <summary>
             Return shadow mask.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetZoneMask">
             <summary>
             Return zone mask.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetMaxLights">
             <summary>
             Return maximum number of per-pixel lights.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.IsVisible">
             <summary>
             Return visible flag.
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetCastShadows">
             <summary>
             Return shadowcaster flag.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.IsOccluder">
             <summary>
             Return occluder flag.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.IsOccludee">
             <summary>
             Return occludee flag.
             
             </summary>
            </member>
        <member name="M:Urho.Terrain.CreatePatchGeometry(Urho.TerrainPatch)">
             <summary>
             Regenerate patch geometry.
             </summary>
            </member>
        <member name="M:Urho.Terrain.UpdatePatchLod(Urho.TerrainPatch)">
             <summary>
             Update patch based on LOD and neighbor LOD.
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetPatchSizeAttr(System.Int32)">
             <summary>
             Set patch size attribute.
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetMaxLodLevelsAttr(System.UInt32)">
             <summary>
             Set max LOD levels attribute.
             </summary>
            </member>
        <member name="M:Urho.Terrain.SetOcclusionLodLevelAttr(System.UInt32)">
             <summary>
             Set occlusion LOD level attribute.
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetHeightMapAttr">
             <summary>
             Return heightmap attribute.
             </summary>
            </member>
        <member name="M:Urho.Terrain.GetMaterialAttr">
             <summary>
             Return material attribute.
             </summary>
            </member>
        <member name="P:Urho.Terrain.PatchSize">
             <summary>
             Return patch quads per side.
             
             Or
             Set patch quads per side. Must be a power of two.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.Spacing">
             <summary>
             Return vertex and height spacing.
             
             Or
             Set vertex (XZ) and height (Y) spacing.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.MaxLodLevels">
             <summary>
             Return maximum number of LOD levels for terrain patches. This can be between 1-4.
             
             Or
             Set maximum number of LOD levels for terrain patches. This can be between 1-4.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.OcclusionLodLevel">
             <summary>
             Return LOD level used for occlusion.
             
             Or
             Set LOD level used for terrain patch occlusion. By default (M_MAX_UNSIGNED) the coarsest. Since the LOD level used needs to be fixed, using finer LOD levels may result in false positive occlusion in cases where the actual rendered geometry is coarser, so use with caution.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.Smoothing">
             <summary>
             Return whether smoothing is in use.
             
             Or
             Set smoothing of heightmap.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.HeightMap">
             <summary>
             Return heightmap image.
             
             Or
             Set heightmap image. Dimensions should be a power of two + 1. Uses 8-bit grayscale, or optionally red as MSB and green as LSB for 16-bit accuracy. Return true if successful.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.Material">
             <summary>
             Return material.
             
             Or
             Set material.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.NorthNeighbor">
             <summary>
             Return north neighbor terrain.
             
             Or
             Set north (positive Z) neighbor terrain for seamless LOD changes across terrains.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.SouthNeighbor">
             <summary>
             Return south neighbor terrain.
             
             Or
             Set south (negative Z) neighbor terrain for seamless LOD changes across terrains.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.WestNeighbor">
             <summary>
             Return west neighbor terrain.
             
             Or
             Set west (negative X) neighbor terrain for seamless LOD changes across terrains.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.EastNeighbor">
             <summary>
             Return east neighbor terrain.
             
             Or
             Set east (positive X) neighbor terrain for seamless LOD changes across terrains.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.DrawDistance">
             <summary>
             Return draw distance.
             
             Or
             Set draw distance for patches.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.ShadowDistance">
             <summary>
             Return shadow draw distance.
             
             Or
             Set shadow draw distance for patches.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.LodBias">
             <summary>
             Return LOD bias.
             
             Or
             Set LOD bias for patches. Affects which terrain LOD to display.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.ViewMask">
             <summary>
             Return view mask.
             
             Or
             Set view mask for patches. Is and'ed with camera's view mask to see if the object should be rendered.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.LightMask">
             <summary>
             Return light mask.
             
             Or
             Set light mask for patches. Is and'ed with light's and zone's light mask to see if the object should be lit.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.ShadowMask">
             <summary>
             Return shadow mask.
             
             Or
             Set shadow mask for patches. Is and'ed with light's light mask and zone's shadow mask to see if the object should be rendered to a shadow map.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.ZoneMask">
             <summary>
             Return zone mask.
             
             Or
             Set zone mask for patches. Is and'ed with zone's zone mask to see if the object should belong to the zone.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.MaxLights">
             <summary>
             Return maximum number of per-pixel lights.
             
             Or
             Set maximum number of per-pixel lights for patches. Default 0 is unlimited.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.CastShadows">
             <summary>
             Return shadowcaster flag.
             
             Or
             Set shadowcaster flag for patches.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.Occluder">
             <summary>
             Return occluder flag.
             
             Or
             Set occlusion flag for patches. Occlusion uses the coarsest LOD by default.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.Occludee">
             <summary>
             Return occludee flag.
             
             Or
             Set occludee flag for patches.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.NumVertices">
             <summary>
             Return heightmap size in vertices.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.NumPatches">
             <summary>
             Return heightmap size in patches.
             
             </summary>
            </member>
        <member name="P:Urho.Terrain.Visible">
             <summary>
             Return visible flag.
             </summary>
            </member>
        <member name="P:Urho.Terrain.HeightMapAttr">
             <summary>
             Return heightmap attribute.
             </summary>
            </member>
        <member name="P:Urho.Terrain.MaterialAttr">
             <summary>
             Return material attribute.
             </summary>
            </member>
        <member name="T:Urho.Renderer">
             <summary>
             High-level rendering subsystem. Manages drawing of 3D views.
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetNumViewports(System.UInt32)">
             <summary>
             Set number of backbuffer viewports to render.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetViewport(System.UInt32,Urho.Viewport)">
             <summary>
             Set a backbuffer viewport.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetDefaultRenderPath(Urho.RenderPath)">
             <summary>
             Set default renderpath.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetDefaultRenderPath(Urho.Resources.XmlFile)">
             <summary>
             Set default renderpath from an XML file.
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetDefaultTechnique(Urho.Technique)">
             <summary>
             Set default non-textured material technique.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetHDRRendering(System.Boolean)">
             <summary>
             Set HDR rendering on/off.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetSpecularLighting(System.Boolean)">
             <summary>
             Set specular lighting on/off.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetTextureAnisotropy(System.Int32)">
             <summary>
             Set default texture max anisotropy level.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetTextureFilterMode(Urho.TextureFilterMode)">
             <summary>
             Set default texture filtering.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetTextureQuality(Urho.MaterialQuality)">
             <summary>
             Set texture quality level. See the QUALITY constants in GraphicsDefs.h.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetMaterialQuality(Urho.MaterialQuality)">
             <summary>
             Set material quality level. See the QUALITY constants in GraphicsDefs.h.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetDrawShadows(System.Boolean)">
             <summary>
             Set shadows on/off.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetShadowMapSize(System.Int32)">
             <summary>
             Set shadow map resolution.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetShadowQuality(Urho.ShadowQuality)">
             <summary>
             Set shadow quality mode. See the SHADOWQUALITY enum in GraphicsDefs.h.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetShadowSoftness(System.Single)">
             <summary>
             Set shadow softness, only works when SHADOWQUALITY_BLUR_VSM is used.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetVSMShadowParameters(System.Single,System.Single)">
             <summary>
             Set shadow parameters when VSM is used, they help to reduce light bleeding. LightBleeding must be in [0, 1].
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetVSMMultiSample(System.Int32)">
             <summary>
             Set VSM shadow map multisampling level. Default 1 (no multisampling).
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetReuseShadowMaps(System.Boolean)">
             <summary>
             Set reuse of shadow maps. Default is true. If disabled, also transparent geometry can be shadowed.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetMaxShadowMaps(System.Int32)">
             <summary>
             Set maximum number of shadow maps created for one resolution. Only has effect if reuse of shadow maps is disabled.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetDynamicInstancing(System.Boolean)">
             <summary>
             Set dynamic instancing on/off. When on (default), drawables using the same static-type geometry and material will be automatically combined to an instanced draw call.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetNumExtraInstancingBufferElements(System.Int32)">
             <summary>
             Set number of extra instancing buffer elements. Default is 0. Extra 4-vectors are available through TEXCOORD7 and further.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetMinInstances(System.Int32)">
             <summary>
             Set minimum number of instances required in a batch group to render as instanced.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetMaxSortedInstances(System.Int32)">
             <summary>
             Set maximum number of sorted instances per batch group. If exceeded, instances are rendered unsorted.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetMaxOccluderTriangles(System.Int32)">
             <summary>
             Set maximum number of occluder triangles.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetOcclusionBufferSize(System.Int32)">
             <summary>
             Set occluder buffer width.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetOccluderSizeThreshold(System.Single)">
             <summary>
             Set required screen size (1.0 = full screen) for occluders.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetThreadedOcclusion(System.Boolean)">
             <summary>
             Set whether to thread occluder rendering. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetMobileShadowBiasMul(System.Single)">
             <summary>
             Set shadow depth bias multiplier for mobile platforms to counteract possible worse shadow map precision. Default 1.0 (no effect).
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetMobileShadowBiasAdd(System.Single)">
             <summary>
             Set shadow depth bias addition for mobile platforms to counteract possible worse shadow map precision. Default 0.0 (no effect).
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetMobileNormalOffsetMul(System.Single)">
             <summary>
             Set shadow normal offset multiplier for mobile platforms to counteract possible worse shadow map precision. Default 1.0 (no effect).
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.ReloadShaders">
             <summary>
             Force reload of shaders.
             </summary>
            </member>
        <member name="M:Urho.Renderer.ApplyShadowMapFilter(Urho.View,Urho.Urho2D.Texture2D,System.Single)">
             <summary>
             Apply post processing filter to the shadow map. Called by View.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetNumViewports">
             <summary>
             Return number of backbuffer viewports.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetViewport(System.UInt32)">
             <summary>
             Return backbuffer viewport by index.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetViewportForScene(Urho.Scene,System.UInt32)">
             <summary>
             Return nth backbuffer viewport associated to a scene. Index 0 returns the first.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetDefaultRenderPath">
             <summary>
             Return default renderpath.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetDefaultTechnique">
             <summary>
             Return default non-textured material technique.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetHDRRendering">
             <summary>
             Return whether HDR rendering is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetSpecularLighting">
             <summary>
             Return whether specular lighting is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetDrawShadows">
             <summary>
             Return whether drawing shadows is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetTextureAnisotropy">
             <summary>
             Return default texture max. anisotropy level.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetTextureFilterMode">
             <summary>
             Return default texture filtering mode.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetTextureQuality">
             <summary>
             Return texture quality level.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetMaterialQuality">
             <summary>
             Return material quality level.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetShadowMapSize">
             <summary>
             Return shadow map resolution.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetShadowQuality">
             <summary>
             Return shadow quality.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetShadowSoftness">
             <summary>
             Return shadow softness.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetVSMShadowParameters">
             <summary>
             Return VSM shadow parameters.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetVSMMultiSample">
             <summary>
             Return VSM shadow multisample level.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetReuseShadowMaps">
             <summary>
             Return whether shadow maps are reused.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetMaxShadowMaps">
             <summary>
             Return maximum number of shadow maps per resolution.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetDynamicInstancing">
             <summary>
             Return whether dynamic instancing is in use.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetNumExtraInstancingBufferElements">
             <summary>
             Return number of extra instancing buffer elements.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetMinInstances">
             <summary>
             Return minimum number of instances required in a batch group to render as instanced.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetMaxSortedInstances">
             <summary>
             Return maximum number of sorted instances per batch group.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetMaxOccluderTriangles">
             <summary>
             Return maximum number of occluder triangles.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetOcclusionBufferSize">
             <summary>
             Return occlusion buffer width.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetOccluderSizeThreshold">
             <summary>
             Return occluder screen size threshold.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetThreadedOcclusion">
             <summary>
             Return whether occlusion rendering is threaded.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetMobileShadowBiasMul">
             <summary>
             Return shadow depth bias multiplier for mobile platforms.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetMobileShadowBiasAdd">
             <summary>
             Return shadow depth bias addition for mobile platforms.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetMobileNormalOffsetMul">
             <summary>
             Return shadow normal offset multiplier for mobile platforms.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetNumViews">
             <summary>
             Return number of views rendered.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetNumPrimitives">
             <summary>
             Return number of primitives rendered.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetNumBatches">
             <summary>
             Return number of batches rendered.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetNumGeometries(System.Boolean)">
             <summary>
             Return number of geometries rendered.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetNumLights(System.Boolean)">
             <summary>
             Return number of lights rendered.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetNumShadowMaps(System.Boolean)">
             <summary>
             Return number of shadow maps rendered.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetNumOccluders(System.Boolean)">
             <summary>
             Return number of occluders rendered.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetDefaultZone">
             <summary>
             Return the default zone.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetDefaultMaterial">
             <summary>
             Return the default material.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetDefaultLightRamp">
             <summary>
             Return the default range attenuation texture.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetDefaultLightSpot">
             <summary>
             Return the default spotlight attenuation texture.
             
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetFaceSelectCubeMap">
             <summary>
             Return the shadowed pointlight face selection cube map.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetIndirectionCubeMap">
             <summary>
             Return the shadowed pointlight indirection cube map.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetInstancingBuffer">
             <summary>
             Return the instancing vertex buffer.
             </summary>
            </member>
        <member name="M:Urho.Renderer.Update(System.Single)">
             <summary>
             Update for rendering. Called by HandleRenderUpdate().
             </summary>
            </member>
        <member name="M:Urho.Renderer.Render">
             <summary>
             Render. Called by Engine.
             </summary>
            </member>
        <member name="M:Urho.Renderer.DrawDebugGeometry(System.Boolean)">
             <summary>
             Add debug geometry to the debug renderer.
             </summary>
            </member>
        <member name="M:Urho.Renderer.QueueRenderSurface(Urho.RenderSurface)">
             <summary>
             Queue a render surface's viewports for rendering. Called by the surface, or by View.
             </summary>
            </member>
        <member name="M:Urho.Renderer.QueueViewport(Urho.RenderSurface,Urho.Viewport)">
             <summary>
             Queue a viewport for rendering. Null surface means backbuffer.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetLightGeometry(Urho.Light)">
             <summary>
             Return volume geometry for a light.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetQuadGeometry">
             <summary>
             Return quad geometry used in postprocessing.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetShadowMap(Urho.Light,Urho.Camera,System.UInt32,System.UInt32)">
             <summary>
             Allocate a shadow map. If shadow map reuse is disabled, a different map is returned each time.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetScreenBuffer(System.Int32,System.Int32,System.UInt32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.UInt32)">
             <summary>
             Allocate a rendertarget or depth-stencil texture for deferred rendering or postprocessing. Should only be called during actual rendering, not before.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetDepthStencil(System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
             Allocate a depth-stencil surface that does not need to be readable. Should only be called during actual rendering, not before.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetOcclusionBuffer(Urho.Camera)">
             <summary>
             Allocate an occlusion buffer.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetShadowCamera">
             <summary>
             Allocate a temporary shadow camera and a scene node for it. Is thread-safe.
             </summary>
            </member>
        <member name="M:Urho.Renderer.StorePreparedView(Urho.View,Urho.Camera)">
             <summary>
             Mark a view as prepared by the specified culling camera.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetPreparedView(Urho.Camera)">
             <summary>
             Return a prepared view if exists for the specified camera. Used to avoid duplicate view preparation CPU work.
             </summary>
            </member>
        <member name="M:Urho.Renderer.SetCullMode(Urho.CullMode,Urho.Camera)">
             <summary>
             Set cull mode while taking possible projection flipping into account.
             </summary>
            </member>
        <member name="M:Urho.Renderer.ResizeInstancingBuffer(System.UInt32)">
             <summary>
             Ensure sufficient size of the instancing vertex buffer. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Renderer.OptimizeLightByScissor(Urho.Light,Urho.Camera)">
             <summary>
             Optimize a light by scissor rectangle.
             </summary>
            </member>
        <member name="M:Urho.Renderer.OptimizeLightByStencil(Urho.Light,Urho.Camera)">
             <summary>
             Optimize a light by marking it to the stencil buffer and setting a stencil test.
             </summary>
            </member>
        <member name="M:Urho.Renderer.GetActualView(Urho.View)">
             <summary>
             Return a view or its source view if it uses one. Used internally for render statistics.
             </summary>
            </member>
        <member name="P:Urho.Renderer.NumViewports">
             <summary>
             Return number of backbuffer viewports.
             
             Or
             Set number of backbuffer viewports to render.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.DefaultRenderPath">
             <summary>
             Return default renderpath.
             
             Or
             Set default renderpath.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.DefaultTechnique">
             <summary>
             Return default non-textured material technique.
             
             Or
             Set default non-textured material technique.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.HDRRendering">
             <summary>
             Return whether HDR rendering is enabled.
             
             Or
             Set HDR rendering on/off.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.SpecularLighting">
             <summary>
             Return whether specular lighting is enabled.
             
             Or
             Set specular lighting on/off.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.TextureAnisotropy">
             <summary>
             Return default texture max. anisotropy level.
             
             Or
             Set default texture max anisotropy level.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.TextureFilterMode">
             <summary>
             Return default texture filtering mode.
             
             Or
             Set default texture filtering.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.TextureQuality">
             <summary>
             Return texture quality level.
             
             Or
             Set texture quality level. See the QUALITY constants in GraphicsDefs.h.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.MaterialQuality">
             <summary>
             Return material quality level.
             
             Or
             Set material quality level. See the QUALITY constants in GraphicsDefs.h.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.DrawShadows">
             <summary>
             Return whether drawing shadows is enabled.
             
             Or
             Set shadows on/off.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.ShadowMapSize">
             <summary>
             Return shadow map resolution.
             
             Or
             Set shadow map resolution.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.ShadowQuality">
             <summary>
             Return shadow quality.
             
             Or
             Set shadow quality mode. See the SHADOWQUALITY enum in GraphicsDefs.h.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.ShadowSoftness">
             <summary>
             Return shadow softness.
             
             Or
             Set shadow softness, only works when SHADOWQUALITY_BLUR_VSM is used.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.VSMMultiSample">
             <summary>
             Return VSM shadow multisample level.
             
             Or
             Set VSM shadow map multisampling level. Default 1 (no multisampling).
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.ReuseShadowMaps">
             <summary>
             Return whether shadow maps are reused.
             
             Or
             Set reuse of shadow maps. Default is true. If disabled, also transparent geometry can be shadowed.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.MaxShadowMaps">
             <summary>
             Return maximum number of shadow maps per resolution.
             
             Or
             Set maximum number of shadow maps created for one resolution. Only has effect if reuse of shadow maps is disabled.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.DynamicInstancing">
             <summary>
             Return whether dynamic instancing is in use.
             
             Or
             Set dynamic instancing on/off. When on (default), drawables using the same static-type geometry and material will be automatically combined to an instanced draw call.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.NumExtraInstancingBufferElements">
             <summary>
             Return number of extra instancing buffer elements.
             
             Or
             Set number of extra instancing buffer elements. Default is 0. Extra 4-vectors are available through TEXCOORD7 and further.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.MinInstances">
             <summary>
             Return minimum number of instances required in a batch group to render as instanced.
             
             Or
             Set minimum number of instances required in a batch group to render as instanced.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.MaxSortedInstances">
             <summary>
             Return maximum number of sorted instances per batch group.
             
             Or
             Set maximum number of sorted instances per batch group. If exceeded, instances are rendered unsorted.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.MaxOccluderTriangles">
             <summary>
             Return maximum number of occluder triangles.
             
             Or
             Set maximum number of occluder triangles.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.OcclusionBufferSize">
             <summary>
             Return occlusion buffer width.
             
             Or
             Set occluder buffer width.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.OccluderSizeThreshold">
             <summary>
             Return occluder screen size threshold.
             
             Or
             Set required screen size (1.0 = full screen) for occluders.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.ThreadedOcclusion">
             <summary>
             Return whether occlusion rendering is threaded.
             
             Or
             Set whether to thread occluder rendering. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.MobileShadowBiasMul">
             <summary>
             Return shadow depth bias multiplier for mobile platforms.
             
             Or
             Set shadow depth bias multiplier for mobile platforms to counteract possible worse shadow map precision. Default 1.0 (no effect).
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.MobileShadowBiasAdd">
             <summary>
             Return shadow depth bias addition for mobile platforms.
             
             Or
             Set shadow depth bias addition for mobile platforms to counteract possible worse shadow map precision. Default 0.0 (no effect).
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.MobileNormalOffsetMul">
             <summary>
             Return shadow normal offset multiplier for mobile platforms.
             
             Or
             Set shadow normal offset multiplier for mobile platforms to counteract possible worse shadow map precision. Default 1.0 (no effect).
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.VSMShadowParameters">
             <summary>
             Return VSM shadow parameters.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.NumViews">
             <summary>
             Return number of views rendered.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.NumPrimitives">
             <summary>
             Return number of primitives rendered.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.NumBatches">
             <summary>
             Return number of batches rendered.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.DefaultZone">
             <summary>
             Return the default zone.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.DefaultMaterial">
             <summary>
             Return the default material.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.DefaultLightRamp">
             <summary>
             Return the default range attenuation texture.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.DefaultLightSpot">
             <summary>
             Return the default spotlight attenuation texture.
             
             </summary>
            </member>
        <member name="P:Urho.Renderer.FaceSelectCubeMap">
             <summary>
             Return the shadowed pointlight face selection cube map.
             </summary>
            </member>
        <member name="P:Urho.Renderer.IndirectionCubeMap">
             <summary>
             Return the shadowed pointlight indirection cube map.
             </summary>
            </member>
        <member name="P:Urho.Renderer.InstancingBuffer">
             <summary>
             Return the instancing vertex buffer.
             </summary>
            </member>
        <member name="P:Urho.Renderer.QuadGeometry">
             <summary>
             Return quad geometry used in postprocessing.
             </summary>
            </member>
        <member name="P:Urho.Renderer.ShadowCamera">
             <summary>
             Allocate a temporary shadow camera and a scene node for it. Is thread-safe.
             </summary>
            </member>
        <member name="T:Urho.View">
             <summary>
             Internal structure for 3D rendering work. Created for each backbuffer and texture viewport, but not for shadow cameras.
             </summary>
            </member>
        <member name="M:Urho.View.Define(Urho.RenderSurface,Urho.Viewport)">
             <summary>
             Define with rendertarget and viewport. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.View.Render">
             <summary>
             Render batches.
             </summary>
            </member>
        <member name="M:Urho.View.GetGraphics">
             <summary>
             Return graphics subsystem.
             </summary>
            </member>
        <member name="M:Urho.View.GetRenderer">
             <summary>
             Return renderer subsystem.
             </summary>
            </member>
        <member name="M:Urho.View.GetScene">
             <summary>
             Return scene.
             </summary>
            </member>
        <member name="M:Urho.View.GetOctree">
             <summary>
             Return octree.
             </summary>
            </member>
        <member name="M:Urho.View.GetCamera">
             <summary>
             Return viewport camera.
             </summary>
            </member>
        <member name="M:Urho.View.GetCullCamera">
             <summary>
             Return culling camera. Normally same as the viewport camera.
             </summary>
            </member>
        <member name="M:Urho.View.GetRenderTarget">
             <summary>
             Return the rendertarget. 0 if using the backbuffer.
             </summary>
            </member>
        <member name="M:Urho.View.GetDrawDebug">
             <summary>
             Return whether should draw debug geometry.
             </summary>
            </member>
        <member name="M:Urho.View.GetViewRect">
             <summary>
             Return view rectangle.
             </summary>
            </member>
        <member name="M:Urho.View.GetViewSize">
             <summary>
             Return view dimensions.
             </summary>
            </member>
        <member name="M:Urho.View.GetOcclusionBuffer">
             <summary>
             Return the last used software occlusion buffer.
             </summary>
            </member>
        <member name="M:Urho.View.GetNumActiveOccluders">
             <summary>
             Return number of occluders that were actually rendered. Occluders may be rejected if running out of triangles or if behind other occluders.
             </summary>
            </member>
        <member name="M:Urho.View.GetSourceView">
             <summary>
             Return the source view that was already prepared. Used when viewports specify the same culling camera.
             </summary>
            </member>
        <member name="M:Urho.View.SetGlobalShaderParameters">
             <summary>
             Set global (per-frame) shader parameters. Called by Batch and internally by View.
             </summary>
            </member>
        <member name="M:Urho.View.SetCameraShaderParameters(Urho.Camera)">
             <summary>
             Set camera-specific shader parameters. Called by Batch and internally by View.
             </summary>
            </member>
        <member name="M:Urho.View.SetCommandShaderParameters(Urho.RenderPathCommand)">
             <summary>
             Set command's shader parameters if any. Called internally by View.
             </summary>
            </member>
        <member name="M:Urho.View.SetGBufferShaderParameters(Urho.IntVector2,Urho.IntRect)">
             <summary>
             Set G-buffer offset and inverse size shader parameters. Called by Batch and internally by View.
             </summary>
            </member>
        <member name="M:Urho.View.DrawFullscreenQuad(System.Boolean)">
             <summary>
             Draw a fullscreen quad. Shaders and renderstates must have been set beforehand. Quad will be drawn to the middle of depth range, similarly to deferred directional lights.
             </summary>
            </member>
        <member name="M:Urho.View.FindNamedTexture(System.String,System.Boolean,System.Boolean)">
             <summary>
             Get a named texture from the rendertarget list or from the resource cache, to be either used as a rendertarget or texture binding.
             </summary>
            </member>
        <member name="M:Urho.View.SetClearColor(Urho.Color)">
             <summary>
             Set  View clear color , will override the color set in the RenderPath (CLEAR_CMD) , setting  the value of Color(0,0,0,0) will reset it to the default clear color used in the RenderPath
             </summary>
            </member>
        <member name="P:Urho.View.Graphics">
             <summary>
             Return graphics subsystem.
             </summary>
            </member>
        <member name="P:Urho.View.Renderer">
             <summary>
             Return renderer subsystem.
             </summary>
            </member>
        <member name="P:Urho.View.Scene">
             <summary>
             Return scene.
             </summary>
            </member>
        <member name="P:Urho.View.Octree">
             <summary>
             Return octree.
             </summary>
            </member>
        <member name="P:Urho.View.Camera">
             <summary>
             Return viewport camera.
             </summary>
            </member>
        <member name="P:Urho.View.CullCamera">
             <summary>
             Return culling camera. Normally same as the viewport camera.
             </summary>
            </member>
        <member name="P:Urho.View.RenderTarget">
             <summary>
             Return the rendertarget. 0 if using the backbuffer.
             </summary>
            </member>
        <member name="P:Urho.View.DrawDebug">
             <summary>
             Return whether should draw debug geometry.
             </summary>
            </member>
        <member name="P:Urho.View.ViewRect">
             <summary>
             Return view rectangle.
             </summary>
            </member>
        <member name="P:Urho.View.ViewSize">
             <summary>
             Return view dimensions.
             </summary>
            </member>
        <member name="P:Urho.View.OcclusionBuffer">
             <summary>
             Return the last used software occlusion buffer.
             </summary>
            </member>
        <member name="P:Urho.View.NumActiveOccluders">
             <summary>
             Return number of occluders that were actually rendered. Occluders may be rejected if running out of triangles or if behind other occluders.
             </summary>
            </member>
        <member name="P:Urho.View.SourceView">
             <summary>
             Return the source view that was already prepared. Used when viewports specify the same culling camera.
             </summary>
            </member>
        <member name="T:Urho.Physics.PhysicsWorld">
             <summary>
             Physics simulation world component. Should be added only to the root scene node.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.setDebugMode(System.Int32)">
             <summary>
             Set debug draw flags.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.getDebugMode">
             <summary>
             Return debug draw flags.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.Update(System.Single)">
             <summary>
             Step the simulation forward.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.UpdateCollisions">
             <summary>
             Refresh collisions only without updating dynamics.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetFps(System.Int32)">
             <summary>
             Set simulation substeps per second.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetGravity(Urho.Vector3)">
             <summary>
             Set gravity.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetMaxSubSteps(System.Int32)">
             <summary>
             Set maximum number of physics substeps per frame. 0 (default) is unlimited. Positive values cap the amount. Use a negative value to enable an adaptive timestep. This may cause inconsistent physics behavior.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetNumIterations(System.Int32)">
             <summary>
             Set number of constraint solver iterations.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetUpdateEnabled(System.Boolean)">
             <summary>
             Enable or disable automatic physics simulation during scene update. Enabled by default.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetInterpolation(System.Boolean)">
             <summary>
             Set whether to interpolate between simulation steps.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetInternalEdge(System.Boolean)">
             <summary>
             Set whether to use Bullet's internal edge utility for trimesh collisions. Disabled by default.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetSplitImpulse(System.Boolean)">
             <summary>
             Set split impulse collision mode. This is more accurate, but slower. Disabled by default.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetMaxNetworkAngularVelocity(System.Single)">
             <summary>
             Set maximum angular velocity for network replication.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.RaycastSingle(Urho.Physics.PhysicsRaycastResult@,Urho.Ray,System.Single,System.UInt32)">
             <summary>
             Perform a physics world raycast and return the closest hit.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.RaycastSingleSegmented(Urho.Physics.PhysicsRaycastResult@,Urho.Ray,System.Single,System.Single,System.UInt32,System.Single)">
             <summary>
             Perform a physics world segmented raycast and return the closest hit. Useful for big scenes with many bodies.
             overlapDistance is used to make sure there are no gap between segments, and must be smaller than segmentDistance.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SphereCast(Urho.Physics.PhysicsRaycastResult@,Urho.Ray,System.Single,System.Single,System.UInt32)">
             <summary>
             Perform a physics world swept sphere test and return the closest hit.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.ConvexCast(Urho.Physics.PhysicsRaycastResult@,Urho.Physics.CollisionShape,Urho.Vector3,Urho.Quaternion,Urho.Vector3,Urho.Quaternion,System.UInt32)">
             <summary>
             Perform a physics world swept convex test using a user-supplied collision shape and return the first hit.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.RemoveCachedGeometry(Urho.Model)">
             <summary>
             Invalidate cached collision geometry for a model.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.GetGravity">
             <summary>
             Return gravity.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.GetMaxSubSteps">
             <summary>
             Return maximum number of physics substeps per frame.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.GetNumIterations">
             <summary>
             Return number of constraint solver iterations.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.IsUpdateEnabled">
             <summary>
             Return whether physics world will automatically simulate during scene update.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.GetInterpolation">
             <summary>
             Return whether interpolation between simulation steps is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.GetInternalEdge">
             <summary>
             Return whether Bullet's internal edge utility for trimesh collisions is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.GetSplitImpulse">
             <summary>
             Return whether split impulse collision mode is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.GetFps">
             <summary>
             Return simulation steps per second.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.GetMaxNetworkAngularVelocity">
             <summary>
             Return maximum angular velocity for network replication.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.AddRigidBody(Urho.Physics.RigidBody)">
             <summary>
             Add a rigid body to keep track of. Called by RigidBody.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.RemoveRigidBody(Urho.Physics.RigidBody)">
             <summary>
             Remove a rigid body. Called by RigidBody.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.AddCollisionShape(Urho.Physics.CollisionShape)">
             <summary>
             Add a collision shape to keep track of. Called by CollisionShape.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.RemoveCollisionShape(Urho.Physics.CollisionShape)">
             <summary>
             Remove a collision shape. Called by CollisionShape.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.AddConstraint(Urho.Physics.Constraint)">
             <summary>
             Add a constraint to keep track of. Called by Constraint.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.RemoveConstraint(Urho.Physics.Constraint)">
             <summary>
             Remove a constraint. Called by Constraint.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.DrawDebugGeometry(System.Boolean)">
             <summary>
             Add debug geometry to the debug renderer.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetDebugRenderer(Urho.DebugRenderer)">
             <summary>
             Set debug renderer to use. Called both by PhysicsWorld itself and physics components.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetDebugDepthTest(System.Boolean)">
             <summary>
             Set debug geometry depth test mode. Called both by PhysicsWorld itself and physics components.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.CleanupGeometryCache">
             <summary>
             Clean up the geometry cache.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.SetApplyingTransforms(System.Boolean)">
             <summary>
             Set node dirtying to be disregarded.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.IsApplyingTransforms">
             <summary>
             Return whether node dirtying should be disregarded.
             </summary>
            </member>
        <member name="M:Urho.Physics.PhysicsWorld.IsSimulating">
             <summary>
             Return whether is currently inside the Bullet substep loop.
             </summary>
            </member>
        <member name="P:Urho.Physics.PhysicsWorld.Fps">
             <summary>
             Return simulation steps per second.
             
             Or
             Set simulation substeps per second.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.PhysicsWorld.Gravity">
             <summary>
             Return gravity.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.PhysicsWorld.MaxSubSteps">
             <summary>
             Return maximum number of physics substeps per frame.
             
             Or
             Set maximum number of physics substeps per frame. 0 (default) is unlimited. Positive values cap the amount. Use a negative value to enable an adaptive timestep. This may cause inconsistent physics behavior.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.PhysicsWorld.NumIterations">
             <summary>
             Return number of constraint solver iterations.
             
             Or
             Set number of constraint solver iterations.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.PhysicsWorld.UpdateEnabled">
             <summary>
             Return whether physics world will automatically simulate during scene update.
             
             Or
             Enable or disable automatic physics simulation during scene update. Enabled by default.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.PhysicsWorld.Interpolation">
             <summary>
             Return whether interpolation between simulation steps is enabled.
             
             Or
             Set whether to interpolate between simulation steps.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.PhysicsWorld.InternalEdge">
             <summary>
             Return whether Bullet's internal edge utility for trimesh collisions is enabled.
             
             Or
             Set whether to use Bullet's internal edge utility for trimesh collisions. Disabled by default.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.PhysicsWorld.SplitImpulse">
             <summary>
             Return whether split impulse collision mode is enabled.
             
             Or
             Set split impulse collision mode. This is more accurate, but slower. Disabled by default.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.PhysicsWorld.MaxNetworkAngularVelocity">
             <summary>
             Return maximum angular velocity for network replication.
             Or
             Set maximum angular velocity for network replication.
             </summary>
            </member>
        <member name="P:Urho.Physics.PhysicsWorld.ApplyingTransforms">
             <summary>
             Return whether node dirtying should be disregarded.
             Or
             Set node dirtying to be disregarded.
             </summary>
            </member>
        <member name="P:Urho.Physics.PhysicsWorld.Simulating">
             <summary>
             Return whether is currently inside the Bullet substep loop.
             </summary>
            </member>
        <member name="T:Urho.Resources.Resource">
             <summary>
             Base class for resources.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Resources.Resource.Load(Urho.IO.File)-->
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Resources.Resource.Load(Urho.MemoryBuffer)-->
        <member name="M:Urho.Resources.Resource.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.Save(Urho.IO.File)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.Save(Urho.MemoryBuffer)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.LoadFile(System.String)">
             <summary>
             Load resource from file.
             
             {Load}
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.SaveFile(System.String)">
             <summary>
             Save resource to file.
             
             {Save}
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.SetName(System.String)">
             <summary>
             Set name.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.SetMemoryUse(System.UInt32)">
             <summary>
             Set memory use in bytes, possibly approximate.
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.ResetUseTimer">
             <summary>
             Reset last used timer.
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.SetAsyncLoadState(Urho.Resources.AsyncLoadState)">
             <summary>
             Set the asynchronous loading state. Called by ResourceCache. Resources in the middle of asynchronous loading are not normally returned to user.
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.GetName">
             <summary>
             Return name.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.GetNameHash">
             <summary>
             Return name hash.
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.GetMemoryUse">
             <summary>
             Return memory use in bytes, possibly approximate.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.GetUseTimer">
             <summary>
             Return time since last use in milliseconds. If referred to elsewhere than in the resource cache, returns always zero.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.Resource.GetAsyncLoadState">
             <summary>
             Return the asynchronous loading state.
             </summary>
            </member>
        <member name="P:Urho.Resources.Resource.Name">
             <summary>
             Return name.
             
             Or
             Set name.
             
             </summary>
            </member>
        <member name="P:Urho.Resources.Resource.MemoryUse">
             <summary>
             Return memory use in bytes, possibly approximate.
             
             Or
             Set memory use in bytes, possibly approximate.
             </summary>
            </member>
        <member name="P:Urho.Resources.Resource.AsyncLoadState">
             <summary>
             Return the asynchronous loading state.
             Or
             Set the asynchronous loading state. Called by ResourceCache. Resources in the middle of asynchronous loading are not normally returned to user.
             </summary>
            </member>
        <member name="P:Urho.Resources.Resource.NameHash">
             <summary>
             Return name hash.
             </summary>
            </member>
        <member name="P:Urho.Resources.Resource.UseTimer">
             <summary>
             Return time since last use in milliseconds. If referred to elsewhere than in the resource cache, returns always zero.
             
             </summary>
            </member>
        <member name="T:Urho.SmoothedTransform">
             <summary>
             Transform smoothing component for network updates.
             </summary>
            </member>
        <member name="M:Urho.SmoothedTransform.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.SmoothedTransform.Update(System.Single,System.Single)">
             <summary>
             Update smoothing.
             </summary>
            </member>
        <member name="M:Urho.SmoothedTransform.SetTargetPosition(Urho.Vector3)">
             <summary>
             Set target position in parent space.
             
             </summary>
            </member>
        <member name="M:Urho.SmoothedTransform.SetTargetRotation(Urho.Quaternion)">
             <summary>
             Set target rotation in parent space.
             
             </summary>
            </member>
        <member name="M:Urho.SmoothedTransform.SetTargetWorldPosition(Urho.Vector3)">
             <summary>
             Set target position in world space.
             
             </summary>
            </member>
        <member name="M:Urho.SmoothedTransform.SetTargetWorldRotation(Urho.Quaternion)">
             <summary>
             Set target rotation in world space.
             
             </summary>
            </member>
        <member name="M:Urho.SmoothedTransform.GetTargetPosition">
             <summary>
             Return target position in parent space.
             
             </summary>
            </member>
        <member name="M:Urho.SmoothedTransform.GetTargetRotation">
             <summary>
             Return target rotation in parent space.
             
             </summary>
            </member>
        <member name="M:Urho.SmoothedTransform.GetTargetWorldPosition">
             <summary>
             Return target position in world space.
             
             </summary>
            </member>
        <member name="M:Urho.SmoothedTransform.GetTargetWorldRotation">
             <summary>
             Return target rotation in world space.
             
             </summary>
            </member>
        <member name="M:Urho.SmoothedTransform.IsInProgress">
             <summary>
             Return whether smoothing is in progress.
             
             </summary>
            </member>
        <member name="P:Urho.SmoothedTransform.TargetPosition">
             <summary>
             Return target position in parent space.
             
             Or
             Set target position in parent space.
             
             </summary>
            </member>
        <member name="P:Urho.SmoothedTransform.TargetRotation">
             <summary>
             Return target rotation in parent space.
             
             Or
             Set target rotation in parent space.
             
             </summary>
            </member>
        <member name="P:Urho.SmoothedTransform.TargetWorldPosition">
             <summary>
             Return target position in world space.
             
             </summary>
            </member>
        <member name="P:Urho.SmoothedTransform.TargetWorldRotation">
             <summary>
             Return target rotation in world space.
             
             </summary>
            </member>
        <member name="P:Urho.SmoothedTransform.InProgress">
             <summary>
             Return whether smoothing is in progress.
             
             </summary>
            </member>
        <member name="T:Urho.ObjectAnimation">
             <summary>
             Object animation class, an object animation include one or more attribute animations and theirs wrap mode and speed for an Animatable object.
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.Save(Urho.IO.File)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.Save(Urho.MemoryBuffer)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.LoadXml(Urho.Resources.XmlElement)">
             <summary>
             Load from XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.SaveXml(Urho.Resources.XmlElement)">
             <summary>
             Save as XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.AddAttributeAnimation(System.String,Urho.ValueAnimation,Urho.WrapMode,System.Single)">
             <summary>
             Add attribute animation, attribute name can in following format: "attribute" or "#0/#1/attribute" or ""#0/#1/
             #1/attribute.
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.RemoveAttributeAnimation(System.String)">
             <summary>
             Remove attribute animation, attribute name can in following format: "attribute" or "#0/#1/attribute" or ""#0/#1/
             #1/attribute.
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.RemoveAttributeAnimation(Urho.ValueAnimation)">
             <summary>
             Remove attribute animation.
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.GetAttributeAnimation(System.String)">
             <summary>
             Return attribute animation by name.
             
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.GetAttributeAnimationWrapMode(System.String)">
             <summary>
             Return attribute animation wrap mode by name.
             
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.GetAttributeAnimationSpeed(System.String)">
             <summary>
             Return attribute animation speed by name.
             
             </summary>
            </member>
        <member name="M:Urho.ObjectAnimation.GetAttributeAnimationInfo(System.String)">
             <summary>
             Return attribute animation info by name.
             </summary>
            </member>
        <member name="T:Urho.Gui.Slider">
             <summary>
             %Slider bar %UI element.
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.Update(System.Single)">
             <summary>
             Perform UI element update.
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.OnResize(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             React to resize.
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.SetOrientation(Urho.Gui.Orientation)">
             <summary>
             Set orientation type.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.SetRange(System.Single)">
             <summary>
             Set slider range maximum value (minimum value is always 0).
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.SetValue(System.Single)">
             <summary>
             Set slider current value.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.ChangeValue(System.Single)">
             <summary>
             Change value by a delta.
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.SetRepeatRate(System.Single)">
             <summary>
             Set paging minimum repeat rate (number of events per second).
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.GetOrientation">
             <summary>
             Return orientation type.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.GetRange">
             <summary>
             Return slider range.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.GetValue">
             <summary>
             Return slider current value.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.GetKnob">
             <summary>
             Return knob element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Slider.GetRepeatRate">
             <summary>
             Return paging minimum repeat rate (number of events per second).
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Slider.Orientation">
             <summary>
             Return orientation type.
             
             Or
             Set orientation type.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Slider.Range">
             <summary>
             Return slider range.
             
             Or
             Set slider range maximum value (minimum value is always 0).
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Slider.Value">
             <summary>
             Return slider current value.
             
             Or
             Set slider current value.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Slider.RepeatRate">
             <summary>
             Return paging minimum repeat rate (number of events per second).
             
             Or
             Set paging minimum repeat rate (number of events per second).
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Slider.Knob">
             <summary>
             Return knob element.
             
             </summary>
            </member>
        <member name="T:Urho.Gui.ScrollBar">
             <summary>
             Scroll bar %UI element with forward and back buttons.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.OnResize(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             React to resize.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.OnSetEditable">
             <summary>
             React to editable status change.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.SetOrientation(Urho.Gui.Orientation)">
             <summary>
             Set orientation type.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.SetRange(System.Single)">
             <summary>
             Set slider range maximum value (minimum value is always 0).
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.SetValue(System.Single)">
             <summary>
             Set slider current value.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.ChangeValue(System.Single)">
             <summary>
             Change slider current value by a delta.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.SetScrollStep(System.Single)">
             <summary>
             Set button scroll step.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.SetStepFactor(System.Single)">
             <summary>
             Set button step factor, can be used to adjust the step for constant pixel size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.StepBack">
             <summary>
             Scroll back one step.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.StepForward">
             <summary>
             Scroll forward one step.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.GetOrientation">
             <summary>
             Return scrollbar orientation.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.GetRange">
             <summary>
             Return slider range.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.GetValue">
             <summary>
             Return slider current value.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.GetScrollStep">
             <summary>
             Return button scroll step.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.GetStepFactor">
             <summary>
             Return button step factor.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.GetEffectiveScrollStep">
             <summary>
             Return scroll step multiplied by factor.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.GetBackButton">
             <summary>
             Return back button element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.GetForwardButton">
             <summary>
             Return forward button element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollBar.GetSlider">
             <summary>
             Return slider element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollBar.Orientation">
             <summary>
             Return scrollbar orientation.
             
             Or
             Set orientation type.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollBar.Range">
             <summary>
             Return slider range.
             
             Or
             Set slider range maximum value (minimum value is always 0).
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollBar.Value">
             <summary>
             Return slider current value.
             
             Or
             Set slider current value.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollBar.ScrollStep">
             <summary>
             Return button scroll step.
             
             Or
             Set button scroll step.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollBar.StepFactor">
             <summary>
             Return button step factor.
             
             Or
             Set button step factor, can be used to adjust the step for constant pixel size.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollBar.EffectiveScrollStep">
             <summary>
             Return scroll step multiplied by factor.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollBar.BackButton">
             <summary>
             Return back button element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollBar.ForwardButton">
             <summary>
             Return forward button element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollBar.Slider">
             <summary>
             Return slider element.
             
             </summary>
            </member>
        <member name="T:Urho.Gui.ScrollView">
             <summary>
             Scrollable %UI element for showing a (possibly large) child element.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.Update(System.Single)">
             <summary>
             Perform UI element update.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.OnResize(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             React to resize.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.IsWheelHandler">
             <summary>
             Return whether the element could handle wheel input.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetContentElement(Urho.Gui.UIElement)">
             <summary>
             Set content element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetViewPosition(Urho.IntVector2)">
             <summary>
             Set view offset from the top-left corner.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetViewPosition(System.Int32,System.Int32)">
             <summary>
             Set view offset from the top-left corner.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetScrollBarsVisible(System.Boolean,System.Boolean)">
             <summary>
             Set scrollbars' visibility manually. Disables scrollbar autoshow/hide.
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetHorizontalScrollBarVisible(System.Boolean)">
             <summary>
             Set horizontal scrollbar visibility manually. Disables scrollbar autoshow/hide.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetVerticalScrollBarVisible(System.Boolean)">
             <summary>
             Set vertical scrollbar visibility manually. Disables scrollbar autoshow/hide.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetScrollBarsAutoVisible(System.Boolean)">
             <summary>
             Set whether to automatically show/hide scrollbars. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetScrollStep(System.Single)">
             <summary>
             Set arrow key scroll step. Also sets it on the scrollbars.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetPageStep(System.Single)">
             <summary>
             Set arrow key page step.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetScrollDeceleration(System.Single)">
             <summary>
             Set scroll deceleration.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetScrollSnapEpsilon(System.Single)">
             <summary>
             Set scroll snap epsilon.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetAutoDisableChildren(System.Boolean)">
             <summary>
             Set whether child elements should be disabled while touch scrolling.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetAutoDisableThreshold(System.Single)">
             <summary>
             Set how much touch movement is needed to trigger child element disabling.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetViewPosition">
             <summary>
             Return view offset from the top-left corner.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetContentElement">
             <summary>
             Return content element.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetHorizontalScrollBar">
             <summary>
             Return horizontal scroll bar.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetVerticalScrollBar">
             <summary>
             Return vertical scroll bar.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetScrollPanel">
             <summary>
             Return scroll panel.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetScrollBarsAutoVisible">
             <summary>
             Return whether scrollbars are automatically shown/hidden.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetHorizontalScrollBarVisible">
             <summary>
             Return whether the horizontal scrollbar is visible.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetVerticalScrollBarVisible">
             <summary>
             Return whether the vertical scrollbar is visible.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetScrollStep">
             <summary>
             Return arrow key scroll step.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetPageStep">
             <summary>
             Return arrow key page step.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetScrollDeceleration">
             <summary>
             Return scroll deceleration.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetScrollSnapEpsilon">
             <summary>
             Return scroll snap epsilon.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetAutoDisableChildren">
             <summary>
             Return whether child element will be disabled while touch scrolling.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.GetAutoDisableThreshold">
             <summary>
             Return how much touch movement is needed to trigger child element disabling.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ScrollView.SetViewPositionAttr(Urho.IntVector2)">
             <summary>
             Set view position attribute.
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.WheelHandler">
             <summary>
             Return whether the element could handle wheel input.
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.ContentElement">
             <summary>
             Return content element.
             
             Or
             Set content element.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.ViewPosition">
             <summary>
             Return view offset from the top-left corner.
             
             Or
             Set view offset from the top-left corner.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.HorizontalScrollBarVisible">
             <summary>
             Return whether the horizontal scrollbar is visible.
             
             Or
             Set horizontal scrollbar visibility manually. Disables scrollbar autoshow/hide.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.VerticalScrollBarVisible">
             <summary>
             Return whether the vertical scrollbar is visible.
             
             Or
             Set vertical scrollbar visibility manually. Disables scrollbar autoshow/hide.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.ScrollBarsAutoVisible">
             <summary>
             Return whether scrollbars are automatically shown/hidden.
             
             Or
             Set whether to automatically show/hide scrollbars. Default true.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.ScrollStep">
             <summary>
             Return arrow key scroll step.
             
             Or
             Set arrow key scroll step. Also sets it on the scrollbars.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.PageStep">
             <summary>
             Return arrow key page step.
             
             Or
             Set arrow key page step.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.ScrollDeceleration">
             <summary>
             Return scroll deceleration.
             
             Or
             Set scroll deceleration.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.ScrollSnapEpsilon">
             <summary>
             Return scroll snap epsilon.
             
             Or
             Set scroll snap epsilon.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.AutoDisableChildren">
             <summary>
             Return whether child element will be disabled while touch scrolling.
             
             Or
             Set whether child elements should be disabled while touch scrolling.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.AutoDisableThreshold">
             <summary>
             Return how much touch movement is needed to trigger child element disabling.
             
             Or
             Set how much touch movement is needed to trigger child element disabling.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.HorizontalScrollBar">
             <summary>
             Return horizontal scroll bar.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.VerticalScrollBar">
             <summary>
             Return vertical scroll bar.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ScrollView.ScrollPanel">
             <summary>
             Return scroll panel.
             
             </summary>
            </member>
        <member name="T:Urho.Gui.Window">
             <summary>
             %Window %UI element that can optionally by moved or resized.
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.SetMovable(System.Boolean)">
             <summary>
             Set whether can be moved.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.SetResizable(System.Boolean)">
             <summary>
             Set whether can be resized.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.SetFixedWidthResizing(System.Boolean)">
             <summary>
             Set whether resizing width is fixed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.SetFixedHeightResizing(System.Boolean)">
             <summary>
             Set whether resizing height is fixed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.SetResizeBorder(Urho.IntRect)">
             <summary>
             Set resize area width at edges.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.SetModal(System.Boolean)">
             <summary>
             Set modal flag. When the modal flag is set, the focused window needs to be dismissed first to allow other UI elements to gain focus.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.SetModalShadeColor(Urho.Color)">
             <summary>
             Set modal shade color.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.SetModalFrameColor(Urho.Color)">
             <summary>
             Set modal frame color.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.SetModalFrameSize(Urho.IntVector2)">
             <summary>
             Set modal frame size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.SetModalAutoDismiss(System.Boolean)">
             <summary>
             Set whether model window can be dismissed with the escape key. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.IsMovable">
             <summary>
             Return whether is movable.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.IsResizable">
             <summary>
             Return whether is resizable.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.GetFixedWidthResizing">
             <summary>
             Return whether is resizing width is fixed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.GetFixedHeightResizing">
             <summary>
             Return whether is resizing height is fixed.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.GetResizeBorder">
             <summary>
             Return resize area width at edges.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.IsModal">
             <summary>
             Return modal flag.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.GetModalShadeColor">
             <summary>
             Get modal shade color.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.GetModalFrameColor">
             <summary>
             Get modal frame color.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.GetModalFrameSize">
             <summary>
             Get modal frame size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Window.GetModalAutoDismiss">
             <summary>
             Return whether can be dismissed with escape key.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Window.Movable">
             <summary>
             Return whether is movable.
             
             Or
             Set whether can be moved.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Window.Resizable">
             <summary>
             Return whether is resizable.
             
             Or
             Set whether can be resized.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Window.FixedWidthResizing">
             <summary>
             Return whether is resizing width is fixed.
             
             Or
             Set whether resizing width is fixed.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Window.FixedHeightResizing">
             <summary>
             Return whether is resizing height is fixed.
             
             Or
             Set whether resizing height is fixed.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Window.ResizeBorder">
             <summary>
             Return resize area width at edges.
             
             Or
             Set resize area width at edges.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Window.Modal">
             <summary>
             Return modal flag.
             
             Or
             Set modal flag. When the modal flag is set, the focused window needs to be dismissed first to allow other UI elements to gain focus.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Window.ModalShadeColor">
             <summary>
             Get modal shade color.
             
             Or
             Set modal shade color.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Window.ModalFrameColor">
             <summary>
             Get modal frame color.
             
             Or
             Set modal frame color.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Window.ModalFrameSize">
             <summary>
             Get modal frame size.
             
             Or
             Set modal frame size.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Window.ModalAutoDismiss">
             <summary>
             Return whether can be dismissed with escape key.
             
             Or
             Set whether model window can be dismissed with the escape key. Default true.
             
             </summary>
            </member>
        <member name="T:Urho.ObjectFactory">
             <summary>
             Base class for object factories.
             </summary>
            </member>
        <member name="M:Urho.ObjectFactory.CreateObject">
             <summary>
             Create an object. Implemented in templated subclasses.
             </summary>
            </member>
        <member name="M:Urho.ObjectFactory.GetContext">
             <summary>
             Return execution context.
             </summary>
            </member>
        <member name="M:Urho.ObjectFactory.GetTypeInfo">
             <summary>
             Return type info of objects created by this factory.
             </summary>
            </member>
        <member name="M:Urho.ObjectFactory.UrhoGetType">
             <summary>
             Return type hash of objects created by this factory.
             </summary>
            </member>
        <member name="M:Urho.ObjectFactory.GetTypeName">
             <summary>
             Return type name of objects created by this factory.
             </summary>
            </member>
        <member name="P:Urho.ObjectFactory.Context">
             <summary>
             Return execution context.
             </summary>
            </member>
        <member name="P:Urho.ObjectFactory.TypeInfo">
             <summary>
             Return type info of objects created by this factory.
             </summary>
            </member>
        <member name="P:Urho.ObjectFactory.Type">
             <summary>
             Return type hash of objects created by this factory.
             </summary>
            </member>
        <member name="P:Urho.ObjectFactory.TypeName">
             <summary>
             Return type name of objects created by this factory.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ObjectType">
             <summary>
             Object type.
             </summary>
            </member>
        <member name="T:Urho.Network.ObserverPositionSendMode">
             <summary>
             Send modes for observer position/rotation. Activated by the client setting either position or rotation.
             </summary>
            </member>
        <member name="T:Urho.Navigation.Obstacle">
             <summary>
             Obstacle for dynamic navigation mesh.
             </summary>
            </member>
        <member name="M:Urho.Navigation.Obstacle.RegisterObject(Urho.Context)">
             <summary>
             Register Obstacle with engine context.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.Obstacle.OnSetEnabled">
             <summary>
             Update the owning mesh when enabled status has changed.
             </summary>
            </member>
        <member name="M:Urho.Navigation.Obstacle.GetHeight">
             <summary>
             Get the height of this obstacle.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.Obstacle.SetHeight(System.Single)">
             <summary>
             Set the height of this obstacle.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.Obstacle.GetRadius">
             <summary>
             Get the blocking radius of this obstacle.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.Obstacle.SetRadius(System.Single)">
             <summary>
             Set the blocking radius of this obstacle.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.Obstacle.GetObstacleID">
             <summary>
             Get the internal obstacle ID.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.Obstacle.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Render debug information.
             </summary>
            </member>
        <member name="M:Urho.Navigation.Obstacle.DrawDebugGeometry(System.Boolean)">
             <summary>
             Simplified rendering of debug information for script usage.
             </summary>
            </member>
        <member name="P:Urho.Navigation.Obstacle.Height">
             <summary>
             Get the height of this obstacle.
             
             Or
             Set the height of this obstacle.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.Obstacle.Radius">
             <summary>
             Get the blocking radius of this obstacle.
             
             Or
             Set the blocking radius of this obstacle.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.Obstacle.ObstacleID">
             <summary>
             Get the internal obstacle ID.
             
             </summary>
            </member>
        <member name="T:Urho.OcclusionBuffer">
             <summary>
             Software renderer for occlusion.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.SetSize(System.Int32,System.Int32,System.Boolean)">
             <summary>
             Set occlusion buffer size and whether to reserve multiple buffers for threading optimization.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.SetView(Urho.Camera)">
             <summary>
             Set camera view to render from.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.SetMaxTriangles(System.UInt32)">
             <summary>
             Set maximum triangles to render.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.SetCullMode(Urho.CullMode)">
             <summary>
             Set culling mode.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.Reset">
             <summary>
             Reset number of triangles.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.Clear">
             <summary>
             Clear the buffer.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.AddTriangles(Urho.Matrix3x4,System.Void*,System.UInt32,System.UInt32,System.UInt32)">
             <summary>
             Submit a triangle mesh to the buffer using non-indexed geometry. Return true if did not overflow the allowed triangle count.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.AddTriangles(Urho.Matrix3x4,System.Void*,System.UInt32,System.Void*,System.UInt32,System.UInt32,System.UInt32)">
             <summary>
             Submit a triangle mesh to the buffer using indexed geometry. Return true if did not overflow the allowed triangle count.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.DrawTriangles">
             <summary>
             Draw submitted batches. Uses worker threads if enabled during SetSize().
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.BuildDepthHierarchy">
             <summary>
             Build reduced size mip levels.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.ResetUseTimer">
             <summary>
             Reset last used timer.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.GetBuffer">
             <summary>
             Return highest level depth values.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.GetView">
             <summary>
             Return view transform matrix.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.GetProjection">
             <summary>
             Return projection matrix.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.GetWidth">
             <summary>
             Return buffer width.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.GetHeight">
             <summary>
             Return buffer height.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.GetNumTriangles">
             <summary>
             Return number of rendered triangles.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.GetMaxTriangles">
             <summary>
             Return maximum number of triangles.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.GetCullMode">
             <summary>
             Return culling mode.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.IsThreaded">
             <summary>
             Return whether is using threads to speed up rendering.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.IsVisible(Urho.BoundingBox)">
             <summary>
             Test a bounding box for visibility. For best performance, build depth hierarchy first.
             </summary>
            </member>
        <member name="M:Urho.OcclusionBuffer.GetUseTimer">
             <summary>
             Return time since last use in milliseconds.
             </summary>
            </member>
        <member name="P:Urho.OcclusionBuffer.View">
             <summary>
             Return view transform matrix.
             </summary>
            </member>
        <member name="P:Urho.OcclusionBuffer.MaxTriangles">
             <summary>
             Return maximum number of triangles.
             Or
             Set maximum triangles to render.
             </summary>
            </member>
        <member name="P:Urho.OcclusionBuffer.CullMode">
             <summary>
             Return culling mode.
             Or
             Set culling mode.
             </summary>
            </member>
        <member name="P:Urho.OcclusionBuffer.Buffer">
             <summary>
             Return highest level depth values.
             </summary>
            </member>
        <member name="P:Urho.OcclusionBuffer.Projection">
             <summary>
             Return projection matrix.
             </summary>
            </member>
        <member name="P:Urho.OcclusionBuffer.Width">
             <summary>
             Return buffer width.
             </summary>
            </member>
        <member name="P:Urho.OcclusionBuffer.Height">
             <summary>
             Return buffer height.
             </summary>
            </member>
        <member name="P:Urho.OcclusionBuffer.NumTriangles">
             <summary>
             Return number of rendered triangles.
             </summary>
            </member>
        <member name="P:Urho.OcclusionBuffer.Threaded">
             <summary>
             Return whether is using threads to speed up rendering.
             </summary>
            </member>
        <member name="P:Urho.OcclusionBuffer.UseTimer">
             <summary>
             Return time since last use in milliseconds.
             </summary>
            </member>
        <member name="T:Urho.Navigation.OffMeshConnection">
             <summary>
             A link between otherwise unconnected regions of the navigation mesh.
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.SetEndPoint(Urho.Node)">
             <summary>
             Set endpoint node.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.SetRadius(System.Single)">
             <summary>
             Set radius.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.SetBidirectional(System.Boolean)">
             <summary>
             Set bidirectional flag. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.SetMask(System.UInt32)">
             <summary>
             Set a user assigned mask.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.SetAreaID(System.UInt32)">
             <summary>
             Sets the assigned area Id for the connection.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.GetEndPoint">
             <summary>
             Return endpoint node.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.GetRadius">
             <summary>
             Return radius.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.IsBidirectional">
             <summary>
             Return whether is bidirectional.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.GetMask">
             <summary>
             Return the user assigned mask.
             
             </summary>
            </member>
        <member name="M:Urho.Navigation.OffMeshConnection.GetAreaID">
             <summary>
             Return the user assigned area ID.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.OffMeshConnection.EndPoint">
             <summary>
             Return endpoint node.
             
             Or
             Set endpoint node.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.OffMeshConnection.Radius">
             <summary>
             Return radius.
             
             Or
             Set radius.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.OffMeshConnection.Bidirectional">
             <summary>
             Return whether is bidirectional.
             
             Or
             Set bidirectional flag. Default true.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.OffMeshConnection.Mask">
             <summary>
             Return the user assigned mask.
             
             Or
             Set a user assigned mask.
             
             </summary>
            </member>
        <member name="P:Urho.Navigation.OffMeshConnection.AreaID">
             <summary>
             Return the user assigned area ID.
             
             Or
             Sets the assigned area Id for the connection.
             
             </summary>
            </member>
        <member name="T:Urho.Audio.OggVorbisSoundStream">
             <summary>
             Ogg Vorbis sound stream.
             </summary>
            </member>
        <member name="M:Urho.Audio.OggVorbisSoundStream.Seek(System.UInt32)">
             <summary>
             Seek to sample number. Return true on success.
             </summary>
            </member>
        <member name="M:Urho.Audio.OggVorbisSoundStream.GetData(System.SByte*,System.UInt32)">
             <summary>
             Produce sound data into destination. Return number of bytes produced. Called by SoundSource from the mixing thread.
             </summary>
            </member>
        <member name="T:Urho.Gui.Orientation">
             <summary>
             %UI element orientation.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.Orientation2D">
             <summary>
             Orientation.
             </summary>
            </member>
        <member name="T:Urho.Resources.PListFile">
             <summary>
             Property list (plist).
             </summary>
            </member>
        <member name="M:Urho.Resources.PListFile.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.PListFile.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.PListFile.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="T:Urho.Resources.PListValueType">
             <summary>
             PList value types.
             </summary>
            </member>
        <member name="T:Urho.IO.PackageFile">
             <summary>
             Stores files of a directory tree sequentially for convenient access.
             </summary>
            </member>
        <member name="M:Urho.IO.PackageFile.Open(System.String,System.UInt32)">
             <summary>
             Open the package file. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.IO.PackageFile.Exists(System.String)">
             <summary>
             Check if a file exists within the package file. This will be case-insensitive on Windows and case-sensitive on other platforms.
             </summary>
            </member>
        <member name="M:Urho.IO.PackageFile.GetEntry(System.String)">
             <summary>
             Return the file entry corresponding to the name, or null if not found. This will be case-insensitive on Windows and case-sensitive on other platforms.
             </summary>
            </member>
        <member name="M:Urho.IO.PackageFile.GetName">
             <summary>
             Return the package file name.
             
             </summary>
            </member>
        <member name="M:Urho.IO.PackageFile.GetNameHash">
             <summary>
             Return hash of the package file name.
             </summary>
            </member>
        <member name="M:Urho.IO.PackageFile.GetNumFiles">
             <summary>
             Return number of files.
             
             </summary>
            </member>
        <member name="M:Urho.IO.PackageFile.GetTotalSize">
             <summary>
             Return total size of the package file.
             
             </summary>
            </member>
        <member name="M:Urho.IO.PackageFile.GetTotalDataSize">
             <summary>
             Return total data size from all the file entries in the package file.
             
             </summary>
            </member>
        <member name="M:Urho.IO.PackageFile.GetChecksum">
             <summary>
             Return checksum of the package file contents.
             
             </summary>
            </member>
        <member name="M:Urho.IO.PackageFile.IsCompressed">
             <summary>
             Return whether the files are compressed.
             
             </summary>
            </member>
        <member name="P:Urho.IO.PackageFile.Name">
             <summary>
             Return the package file name.
             
             </summary>
            </member>
        <member name="P:Urho.IO.PackageFile.NameHash">
             <summary>
             Return hash of the package file name.
             </summary>
            </member>
        <member name="P:Urho.IO.PackageFile.NumFiles">
             <summary>
             Return number of files.
             
             </summary>
            </member>
        <member name="P:Urho.IO.PackageFile.TotalSize">
             <summary>
             Return total size of the package file.
             
             </summary>
            </member>
        <member name="P:Urho.IO.PackageFile.TotalDataSize">
             <summary>
             Return total data size from all the file entries in the package file.
             
             </summary>
            </member>
        <member name="P:Urho.IO.PackageFile.Checksum">
             <summary>
             Return checksum of the package file contents.
             
             </summary>
            </member>
        <member name="P:Urho.IO.PackageFile.Compressed">
             <summary>
             Return whether the files are compressed.
             
             </summary>
            </member>
        <member name="T:Urho.PacketType">
             <summary>
             Packet types for outgoing buffers. Outgoing messages are grouped by their type
             </summary>
            </member>
        <member name="T:Urho.ParticleEffect">
             <summary>
             %Particle effect definition.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.Save(Urho.IO.File)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.Save(Urho.MemoryBuffer)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.Save(Urho.Resources.XmlElement)">
             <summary>
             Save resource to XMLElement. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.Load(Urho.Resources.XmlElement)">
             <summary>
             Load resource from XMLElement synchronously. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMaterial(Urho.Material)">
             <summary>
             Set material.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetNumParticles(System.UInt32)">
             <summary>
             Set maximum number of particles.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetUpdateInvisible(System.Boolean)">
             <summary>
             Set whether to update when particles are not visible.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetRelative(System.Boolean)">
             <summary>
             Set whether billboards are relative to the scene node.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetScaled(System.Boolean)">
             <summary>
             Set whether scene node scale affects billboards' size.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetSorted(System.Boolean)">
             <summary>
             Set whether billboards are sorted by distance.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetFixedScreenSize(System.Boolean)">
             <summary>
             Set whether billboards have fixed size on screen (measured in pixels) regardless of distance to camera.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetAnimationLodBias(System.Single)">
             <summary>
             Set animation LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetEmitterType(Urho.EmitterType)">
             <summary>
             Set emitter type.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetEmitterSize(Urho.Vector3)">
             <summary>
             Set emitter size.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMinDirection(Urho.Vector3)">
             <summary>
             Set negative direction limit.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMaxDirection(Urho.Vector3)">
             <summary>
             Set positive direction limit.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetConstantForce(Urho.Vector3)">
             <summary>
             Set constant force acting on particles.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetDampingForce(System.Single)">
             <summary>
             Set particle velocity damping force.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetActiveTime(System.Single)">
             <summary>
             Set emission active period length (0 = infinite).
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetInactiveTime(System.Single)">
             <summary>
             Set emission inactive period length (0 = infinite).
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMinEmissionRate(System.Single)">
             <summary>
             Set minimum emission rate.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMaxEmissionRate(System.Single)">
             <summary>
             Set maximum emission rate.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMinParticleSize(Urho.Vector2)">
             <summary>
             Set particle minimum size.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMaxParticleSize(Urho.Vector2)">
             <summary>
             Set particle maximum size.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMinTimeToLive(System.Single)">
             <summary>
             Set particle minimum time to live.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMaxTimeToLive(System.Single)">
             <summary>
             Set particle maximum time to live.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMinVelocity(System.Single)">
             <summary>
             Set particle minimum velocity.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMaxVelocity(System.Single)">
             <summary>
             Set particle maximum velocity.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMinRotation(System.Single)">
             <summary>
             Set particle minimum rotation.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMaxRotation(System.Single)">
             <summary>
             Set particle maximum rotation.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMinRotationSpeed(System.Single)">
             <summary>
             Set particle minimum rotation speed.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetMaxRotationSpeed(System.Single)">
             <summary>
             Set particle maximum rotation speed.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetSizeAdd(System.Single)">
             <summary>
             Set particle size additive modifier.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetSizeMul(System.Single)">
             <summary>
             Set particle size multiplicative modifier.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetFaceCameraMode(Urho.FaceCameraMode)">
             <summary>
             Set how the particles should rotate in relation to the camera. Default is to follow camera rotation on all axes (FC_ROTATE_XYZ).
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.AddColorTime(Urho.Color,System.Single)">
             <summary>
             Add a color frame sorted in the correct position based on time.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.RemoveColorFrame(System.UInt32)">
             <summary>
             Remove color frame at index.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetNumColorFrames(System.UInt32)">
             <summary>
             Set number of color frames.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SortColorFrames">
             <summary>
             Sort the list of color frames based on time.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.RemoveTextureFrame(System.UInt32)">
             <summary>
             Remove texture frame at index.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SetNumTextureFrames(System.UInt32)">
             <summary>
             Set number of texture frames.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.SortTextureFrames">
             <summary>
             Sort the list of texture frames based on time.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.Clone(System.String)">
             <summary>
             Clone the particle effect.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMaterial">
             <summary>
             Return material.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetNumParticles">
             <summary>
             Return maximum number of particles.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetUpdateInvisible">
             <summary>
             Return whether to update when particles are not visible.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.IsRelative">
             <summary>
             Return whether billboards are relative to the scene node.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.IsScaled">
             <summary>
             Return whether scene node scale affects billboards' size.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.IsSorted">
             <summary>
             Return whether billboards are sorted.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.IsFixedScreenSize">
             <summary>
             Return whether billboards are fixed screen size.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetAnimationLodBias">
             <summary>
             Return animation Lod bias.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetEmitterType">
             <summary>
             Return emitter type.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetEmitterSize">
             <summary>
             Return emitter size.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMinDirection">
             <summary>
             Return negative direction limit.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMaxDirection">
             <summary>
             Return positive direction limit.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetConstantForce">
             <summary>
             Return constant force acting on particles.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetDampingForce">
             <summary>
             Return particle velocity damping force.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetActiveTime">
             <summary>
             Return emission active period length (0 = infinite).
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetInactiveTime">
             <summary>
             Return emission inactive period length (0 = infinite).
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMinEmissionRate">
             <summary>
             Return minimum emission rate.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMaxEmissionRate">
             <summary>
             Return maximum emission rate.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMinParticleSize">
             <summary>
             Return particle minimum size.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMaxParticleSize">
             <summary>
             Return particle maximum size.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMinTimeToLive">
             <summary>
             Return particle minimum time to live.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMaxTimeToLive">
             <summary>
             Return particle maximum time to live.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMinVelocity">
             <summary>
             Return particle minimum velocity.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMaxVelocity">
             <summary>
             Return particle maximum velocity.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMinRotation">
             <summary>
             Return particle minimum rotation.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMaxRotation">
             <summary>
             Return particle maximum rotation.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMinRotationSpeed">
             <summary>
             Return particle minimum rotation speed.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetMaxRotationSpeed">
             <summary>
             Return particle maximum rotation speed.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetSizeAdd">
             <summary>
             Return particle size additive modifier.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetSizeMul">
             <summary>
             Return particle size multiplicative modifier.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetNumColorFrames">
             <summary>
             Return number of color animation frames.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetColorFrame(System.UInt32)">
             <summary>
             Return a color animation frame, or null if outside range.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetNumTextureFrames">
             <summary>
             Return number of texture animation frames.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetTextureFrame(System.UInt32)">
             <summary>
             Return a texture animation frame, or null if outside range.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetFaceCameraMode">
             <summary>
             Return how the particles rotate in relation to the camera.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetRandomDirection">
             <summary>
             Return random direction.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetRandomSize">
             <summary>
             Return random size.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetRandomVelocity">
             <summary>
             Return random velocity.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetRandomTimeToLive">
             <summary>
             Return random timetolive.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetRandomRotationSpeed">
             <summary>
             Return random rotationspeed.
             </summary>
            </member>
        <member name="M:Urho.ParticleEffect.GetRandomRotation">
             <summary>
             Return random rotation.
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.Material">
             <summary>
             Return material.
             
             Or
             Set material.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.NumParticles">
             <summary>
             Return maximum number of particles.
             
             Or
             Set maximum number of particles.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.UpdateInvisible">
             <summary>
             Return whether to update when particles are not visible.
             
             Or
             Set whether to update when particles are not visible.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.Relative">
             <summary>
             Return whether billboards are relative to the scene node.
             
             Or
             Set whether billboards are relative to the scene node.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.Scaled">
             <summary>
             Return whether scene node scale affects billboards' size.
             
             Or
             Set whether scene node scale affects billboards' size.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.Sorted">
             <summary>
             Return whether billboards are sorted.
             
             Or
             Set whether billboards are sorted by distance.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.FixedScreenSize">
             <summary>
             Return whether billboards are fixed screen size.
             
             Or
             Set whether billboards have fixed size on screen (measured in pixels) regardless of distance to camera.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.AnimationLodBias">
             <summary>
             Return animation Lod bias.
             
             Or
             Set animation LOD bias.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.EmitterType">
             <summary>
             Return emitter type.
             
             Or
             Set emitter type.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.EmitterSize">
             <summary>
             Return emitter size.
             
             Or
             Set emitter size.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MinDirection">
             <summary>
             Return negative direction limit.
             
             Or
             Set negative direction limit.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MaxDirection">
             <summary>
             Return positive direction limit.
             
             Or
             Set positive direction limit.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.ConstantForce">
             <summary>
             Return constant force acting on particles.
             
             Or
             Set constant force acting on particles.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.DampingForce">
             <summary>
             Return particle velocity damping force.
             
             Or
             Set particle velocity damping force.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.ActiveTime">
             <summary>
             Return emission active period length (0 = infinite).
             
             Or
             Set emission active period length (0 = infinite).
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.InactiveTime">
             <summary>
             Return emission inactive period length (0 = infinite).
             
             Or
             Set emission inactive period length (0 = infinite).
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MinEmissionRate">
             <summary>
             Return minimum emission rate.
             
             Or
             Set minimum emission rate.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MaxEmissionRate">
             <summary>
             Return maximum emission rate.
             
             Or
             Set maximum emission rate.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MinParticleSize">
             <summary>
             Return particle minimum size.
             
             Or
             Set particle minimum size.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MaxParticleSize">
             <summary>
             Return particle maximum size.
             
             Or
             Set particle maximum size.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MinTimeToLive">
             <summary>
             Return particle minimum time to live.
             
             Or
             Set particle minimum time to live.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MaxTimeToLive">
             <summary>
             Return particle maximum time to live.
             
             Or
             Set particle maximum time to live.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MinVelocity">
             <summary>
             Return particle minimum velocity.
             
             Or
             Set particle minimum velocity.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MaxVelocity">
             <summary>
             Return particle maximum velocity.
             
             Or
             Set particle maximum velocity.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MinRotation">
             <summary>
             Return particle minimum rotation.
             
             Or
             Set particle minimum rotation.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MaxRotation">
             <summary>
             Return particle maximum rotation.
             
             Or
             Set particle maximum rotation.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MinRotationSpeed">
             <summary>
             Return particle minimum rotation speed.
             
             Or
             Set particle minimum rotation speed.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.MaxRotationSpeed">
             <summary>
             Return particle maximum rotation speed.
             
             Or
             Set particle maximum rotation speed.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.SizeAdd">
             <summary>
             Return particle size additive modifier.
             
             Or
             Set particle size additive modifier.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.SizeMul">
             <summary>
             Return particle size multiplicative modifier.
             
             Or
             Set particle size multiplicative modifier.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.FaceCameraMode">
             <summary>
             Return how the particles rotate in relation to the camera.
             
             Or
             Set how the particles should rotate in relation to the camera. Default is to follow camera rotation on all axes (FC_ROTATE_XYZ).
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.NumColorFrames">
             <summary>
             Return number of color animation frames.
             
             Or
             Set number of color frames.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.NumTextureFrames">
             <summary>
             Return number of texture animation frames.
             
             Or
             Set number of texture frames.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.RandomDirection">
             <summary>
             Return random direction.
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.RandomSize">
             <summary>
             Return random size.
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.RandomVelocity">
             <summary>
             Return random velocity.
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.RandomTimeToLive">
             <summary>
             Return random timetolive.
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.RandomRotationSpeed">
             <summary>
             Return random rotationspeed.
             </summary>
            </member>
        <member name="P:Urho.ParticleEffect.RandomRotation">
             <summary>
             Return random rotation.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ParticleEffect2D">
             <summary>
             2D particle effect resource.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. Drawable2D must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.Save(Urho.IO.File)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.Save(Urho.MemoryBuffer)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetSprite(Urho.Urho2D.Sprite2D)">
             <summary>
             Set sprite.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetSourcePositionVariance(Urho.Vector2)">
             <summary>
             Set source position variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetSpeed(System.Single)">
             <summary>
             Set speed.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetSpeedVariance(System.Single)">
             <summary>
             Set speed variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetParticleLifeSpan(System.Single)">
             <summary>
             Set particle lifespan.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetParticleLifespanVariance(System.Single)">
             <summary>
             Set particle lifespan variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetAngle(System.Single)">
             <summary>
             Set angle.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetAngleVariance(System.Single)">
             <summary>
             Set angle variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetGravity(Urho.Vector2)">
             <summary>
             Set gravity.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetRadialAcceleration(System.Single)">
             <summary>
             Set radial acceleration.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetTangentialAcceleration(System.Single)">
             <summary>
             Set tangential acceleration.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetRadialAccelVariance(System.Single)">
             <summary>
             Set radial acceleration variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetTangentialAccelVariance(System.Single)">
             <summary>
             Set tangential acceleration variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetStartColor(Urho.Color)">
             <summary>
             Set start color.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetStartColorVariance(Urho.Color)">
             <summary>
             Set start color variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetFinishColor(Urho.Color)">
             <summary>
             Set finish color.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetFinishColorVariance(Urho.Color)">
             <summary>
             Set finish color variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetMaxParticles(System.Int32)">
             <summary>
             Set max particles.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetStartParticleSize(System.Single)">
             <summary>
             Set start particle size.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetStartParticleSizeVariance(System.Single)">
             <summary>
             Set start particle size variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetFinishParticleSize(System.Single)">
             <summary>
             Set finish particle size.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetFinishParticleSizeVariance(System.Single)">
             <summary>
             Set finish particle size variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetDuration(System.Single)">
             <summary>
             Set duration.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetEmitterType(Urho.Urho2D.EmitterType2D)">
             <summary>
             Set emitter type.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetMaxRadius(System.Single)">
             <summary>
             Set max radius.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetMaxRadiusVariance(System.Single)">
             <summary>
             Set max radius variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetMinRadius(System.Single)">
             <summary>
             Set min radius.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetMinRadiusVariance(System.Single)">
             <summary>
             Set min radius variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetRotatePerSecond(System.Single)">
             <summary>
             Set rotate per second.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetRotatePerSecondVariance(System.Single)">
             <summary>
             Set rotate per second variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetBlendMode(Urho.BlendMode)">
             <summary>
             Set blend mode.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetRotationStart(System.Single)">
             <summary>
             Set rotation start.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetRotationStartVariance(System.Single)">
             <summary>
             Set rotation start variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetRotationEnd(System.Single)">
             <summary>
             Set rotation end.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.SetRotationEndVariance(System.Single)">
             <summary>
             Set rotation end variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.Clone(System.String)">
             <summary>
             Clone the 2D particle effect.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetSprite">
             <summary>
             Return sprite.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetSourcePositionVariance">
             <summary>
             Return source position variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetSpeed">
             <summary>
             Return speed.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetSpeedVariance">
             <summary>
             Return speed variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetParticleLifeSpan">
             <summary>
             Return particle lifespan.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetParticleLifespanVariance">
             <summary>
             Return particle lifespan variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetAngle">
             <summary>
             Return angle.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetAngleVariance">
             <summary>
             Return angle variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetGravity">
             <summary>
             Return gravity.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetRadialAcceleration">
             <summary>
             Return radial acceleration.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetTangentialAcceleration">
             <summary>
             Return tangential acceleration.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetRadialAccelVariance">
             <summary>
             Return radial acceleration variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetTangentialAccelVariance">
             <summary>
             Return tangential acceleration variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetStartColor">
             <summary>
             Return start color.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetStartColorVariance">
             <summary>
             Return start color variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetFinishColor">
             <summary>
             Return finish color.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetFinishColorVariance">
             <summary>
             Return finish color variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetMaxParticles">
             <summary>
             Return max particles.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetStartParticleSize">
             <summary>
             Return start particle size.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetStartParticleSizeVariance">
             <summary>
             Return start particle size variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetFinishParticleSize">
             <summary>
             Return finish particle size.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetFinishParticleSizeVariance">
             <summary>
             Return finish particle size variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetDuration">
             <summary>
             Return duration.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetEmitterType">
             <summary>
             Return emitter type.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetMaxRadius">
             <summary>
             Return max radius.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetMaxRadiusVariance">
             <summary>
             Return max radius variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetMinRadius">
             <summary>
             Return min radius.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetMinRadiusVariance">
             <summary>
             Return min radius variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetRotatePerSecond">
             <summary>
             Return rotate per second.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetRotatePerSecondVariance">
             <summary>
             Return rotate per second variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetBlendMode">
             <summary>
             Return blend mode.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetRotationStart">
             <summary>
             Return rotation start.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetRotationStartVariance">
             <summary>
             Return rotation start variance.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetRotationEnd">
             <summary>
             Return rotation end.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEffect2D.GetRotationEndVariance">
             <summary>
             Return rotation end variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.Sprite">
             <summary>
             Return sprite.
             Or
             Set sprite.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.SourcePositionVariance">
             <summary>
             Return source position variance.
             Or
             Set source position variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.Speed">
             <summary>
             Return speed.
             Or
             Set speed.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.SpeedVariance">
             <summary>
             Return speed variance.
             Or
             Set speed variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.ParticleLifeSpan">
             <summary>
             Return particle lifespan.
             Or
             Set particle lifespan.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.ParticleLifespanVariance">
             <summary>
             Return particle lifespan variance.
             Or
             Set particle lifespan variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.Angle">
             <summary>
             Return angle.
             Or
             Set angle.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.AngleVariance">
             <summary>
             Return angle variance.
             Or
             Set angle variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.Gravity">
             <summary>
             Return gravity.
             Or
             Set gravity.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.RadialAcceleration">
             <summary>
             Return radial acceleration.
             Or
             Set radial acceleration.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.TangentialAcceleration">
             <summary>
             Return tangential acceleration.
             Or
             Set tangential acceleration.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.RadialAccelVariance">
             <summary>
             Return radial acceleration variance.
             Or
             Set radial acceleration variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.TangentialAccelVariance">
             <summary>
             Return tangential acceleration variance.
             Or
             Set tangential acceleration variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.StartColor">
             <summary>
             Return start color.
             Or
             Set start color.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.StartColorVariance">
             <summary>
             Return start color variance.
             Or
             Set start color variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.FinishColor">
             <summary>
             Return finish color.
             Or
             Set finish color.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.FinishColorVariance">
             <summary>
             Return finish color variance.
             Or
             Set finish color variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.MaxParticles">
             <summary>
             Return max particles.
             Or
             Set max particles.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.StartParticleSize">
             <summary>
             Return start particle size.
             Or
             Set start particle size.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.StartParticleSizeVariance">
             <summary>
             Return start particle size variance.
             Or
             Set start particle size variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.FinishParticleSize">
             <summary>
             Return finish particle size.
             Or
             Set finish particle size.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.FinishParticleSizeVariance">
             <summary>
             Return finish particle size variance.
             Or
             Set finish particle size variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.Duration">
             <summary>
             Return duration.
             Or
             Set duration.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.EmitterType">
             <summary>
             Return emitter type.
             Or
             Set emitter type.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.MaxRadius">
             <summary>
             Return max radius.
             Or
             Set max radius.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.MaxRadiusVariance">
             <summary>
             Return max radius variance.
             Or
             Set max radius variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.MinRadius">
             <summary>
             Return min radius.
             Or
             Set min radius.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.MinRadiusVariance">
             <summary>
             Return min radius variance.
             Or
             Set min radius variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.RotatePerSecond">
             <summary>
             Return rotate per second.
             Or
             Set rotate per second.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.RotatePerSecondVariance">
             <summary>
             Return rotate per second variance.
             Or
             Set rotate per second variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.BlendMode">
             <summary>
             Return blend mode.
             Or
             Set blend mode.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.RotationStart">
             <summary>
             Return rotation start.
             Or
             Set rotation start.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.RotationStartVariance">
             <summary>
             Return rotation start variance.
             Or
             Set rotation start variance.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.RotationEnd">
             <summary>
             Return rotation end.
             Or
             Set rotation end.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEffect2D.RotationEndVariance">
             <summary>
             Return rotation end variance.
             Or
             Set rotation end variance.
             </summary>
            </member>
        <member name="T:Urho.ParticleEmitter">
             <summary>
             %Particle emitter component.
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.SetEffect(Urho.ParticleEffect)">
             <summary>
             Set particle effect.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.SetNumParticles(System.UInt32)">
             <summary>
             Set maximum number of particles.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.SetEmitting(System.Boolean)">
             <summary>
             Set whether should be emitting. If the state was changed, also resets the emission period timer.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.SetSerializeParticles(System.Boolean)">
             <summary>
             Set whether particles should be serialized. Default true, set false to reduce scene file size.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.SetAutoRemoveMode(Urho.AutoRemoveMode)">
             <summary>
             Set to remove either the emitter component or its owner node from the scene automatically on particle effect completion. Disabled by default.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.ResetEmissionTimer">
             <summary>
             Reset the emission period timer.
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.RemoveAllParticles">
             <summary>
             Remove all current particles.
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.Reset">
             <summary>
             Reset the particle emitter completely. Removes current particles, sets emitting state on, and resets the emission timer.
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.ApplyEffect">
             <summary>
             Apply not continuously updated values such as the material, the number of particles and sorting mode from the particle effect. Call this if you change the effect programmatically.
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.GetEffect">
             <summary>
             Return particle effect.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.GetNumParticles">
             <summary>
             Return maximum number of particles.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.IsEmitting">
             <summary>
             Return whether is currently emitting.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.GetSerializeParticles">
             <summary>
             Return whether particles are to be serialized.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.GetAutoRemoveMode">
             <summary>
             Return automatic removal mode on particle effect completion.
             
             </summary>
            </member>
        <member name="M:Urho.ParticleEmitter.GetEffectAttr">
             <summary>
             Set particles effect attribute.
             </summary>
            </member>
        <member name="P:Urho.ParticleEmitter.Effect">
             <summary>
             Return particle effect.
             
             Or
             Set particle effect.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEmitter.NumParticles">
             <summary>
             Return maximum number of particles.
             
             Or
             Set maximum number of particles.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEmitter.Emitting">
             <summary>
             Return whether is currently emitting.
             
             Or
             Set whether should be emitting. If the state was changed, also resets the emission period timer.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEmitter.SerializeParticles">
             <summary>
             Return whether particles are to be serialized.
             
             Or
             Set whether particles should be serialized. Default true, set false to reduce scene file size.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEmitter.AutoRemoveMode">
             <summary>
             Return automatic removal mode on particle effect completion.
             
             Or
             Set to remove either the emitter component or its owner node from the scene automatically on particle effect completion. Disabled by default.
             
             </summary>
            </member>
        <member name="P:Urho.ParticleEmitter.EffectAttr">
             <summary>
             Set particles effect attribute.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.ParticleEmitter2D">
             <summary>
             2D particle emitter component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. Drawable2D must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.SetEffect(Urho.Urho2D.ParticleEffect2D)">
             <summary>
             Set particle effect.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.SetSprite(Urho.Urho2D.Sprite2D)">
             <summary>
             Set sprite.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.SetBlendMode(Urho.BlendMode)">
             <summary>
             Set blend mode.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.SetMaxParticles(System.UInt32)">
             <summary>
             Set max particles.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.SetEmitting(System.Boolean)">
             <summary>
             Set whether should be emitting. If the state was changed, also resets the emission period timer.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.GetEffect">
             <summary>
             Return particle effect.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.GetSprite">
             <summary>
             Return sprite.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.GetBlendMode">
             <summary>
             Return blend mode.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.GetMaxParticles">
             <summary>
             Return max particles.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.GetParticleEffectAttr">
             <summary>
             Return particle model attr.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.GetSpriteAttr">
             <summary>
             Return sprite attribute.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.ParticleEmitter2D.IsEmitting">
             <summary>
             Return whether is currently emitting.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEmitter2D.Effect">
             <summary>
             Return particle effect.
             
             Or
             Set particle effect.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEmitter2D.Sprite">
             <summary>
             Return sprite.
             
             Or
             Set sprite.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEmitter2D.BlendMode">
             <summary>
             Return blend mode.
             
             Or
             Set blend mode.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEmitter2D.MaxParticles">
             <summary>
             Return max particles.
             Or
             Set max particles.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEmitter2D.Emitting">
             <summary>
             Return whether is currently emitting.
             
             Or
             Set whether should be emitting. If the state was changed, also resets the emission period timer.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEmitter2D.ParticleEffectAttr">
             <summary>
             Return particle model attr.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.ParticleEmitter2D.SpriteAttr">
             <summary>
             Return sprite attribute.
             </summary>
            </member>
        <member name="T:Urho.Pass">
             <summary>
             %Material rendering pass, which defines shaders and render state.
             </summary>
            </member>
        <member name="M:Urho.Pass.SetBlendMode(Urho.BlendMode)">
             <summary>
             Set blend mode.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetCullMode(Urho.CullMode)">
             <summary>
             Set culling mode override. By default culling mode is read from the material instead. Set the illegal culling mode MAX_CULLMODES to disable override again.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetDepthTestMode(Urho.CompareMode)">
             <summary>
             Set depth compare mode.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetLightingMode(Urho.PassLightingMode)">
             <summary>
             Set pass lighting mode, affects what shader variations will be attempted to be loaded.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetDepthWrite(System.Boolean)">
             <summary>
             Set depth write on/off.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetAlphaToCoverage(System.Boolean)">
             <summary>
             Set alpha-to-coverage on/off.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetIsDesktop(System.Boolean)">
             <summary>
             Set whether requires desktop level hardware.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetVertexShader(System.String)">
             <summary>
             Set vertex shader name.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetPixelShader(System.String)">
             <summary>
             Set pixel shader name.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetVertexShaderDefines(System.String)">
             <summary>
             Set vertex shader defines. Separate multiple defines with spaces.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetPixelShaderDefines(System.String)">
             <summary>
             Set pixel shader defines. Separate multiple defines with spaces.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetVertexShaderDefineExcludes(System.String)">
             <summary>
             Set vertex shader define excludes. Use to mark defines that the shader code will not recognize, to prevent compiling redundant shader variations.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.SetPixelShaderDefineExcludes(System.String)">
             <summary>
             Set pixel shader define excludes. Use to mark defines that the shader code will not recognize, to prevent compiling redundant shader variations.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.ReleaseShaders">
             <summary>
             Reset shader pointers.
             </summary>
            </member>
        <member name="M:Urho.Pass.MarkShadersLoaded(System.UInt32)">
             <summary>
             Mark shaders loaded this frame.
             </summary>
            </member>
        <member name="M:Urho.Pass.GetName">
             <summary>
             Return pass name.
             </summary>
            </member>
        <member name="M:Urho.Pass.GetIndex">
             <summary>
             Return pass index. This is used for optimal render-time pass queries that avoid map lookups.
             </summary>
            </member>
        <member name="M:Urho.Pass.GetBlendMode">
             <summary>
             Return blend mode.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetCullMode">
             <summary>
             Return culling mode override. If pass is not overriding culling mode (default), the illegal mode MAX_CULLMODES is returned.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetDepthTestMode">
             <summary>
             Return depth compare mode.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetLightingMode">
             <summary>
             Return pass lighting mode.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetShadersLoadedFrameNumber">
             <summary>
             Return last shaders loaded frame number.
             </summary>
            </member>
        <member name="M:Urho.Pass.GetDepthWrite">
             <summary>
             Return depth write mode.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetAlphaToCoverage">
             <summary>
             Return alpha-to-coverage mode.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.IsDesktop">
             <summary>
             Return whether requires desktop level hardware.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetVertexShader">
             <summary>
             Return vertex shader name.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetPixelShader">
             <summary>
             Return pixel shader name.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetVertexShaderDefines">
             <summary>
             Return vertex shader defines.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetPixelShaderDefines">
             <summary>
             Return pixel shader defines.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetVertexShaderDefineExcludes">
             <summary>
             Return vertex shader define excludes.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetPixelShaderDefineExcludes">
             <summary>
             Return pixel shader define excludes.
             
             </summary>
            </member>
        <member name="M:Urho.Pass.GetEffectiveVertexShaderDefines">
             <summary>
             Return the effective vertex shader defines, accounting for excludes. Called internally by Renderer.
             </summary>
            </member>
        <member name="M:Urho.Pass.GetEffectivePixelShaderDefines">
             <summary>
             Return the effective pixel shader defines, accounting for excludes. Called internally by Renderer.
             </summary>
            </member>
        <member name="P:Urho.Pass.BlendMode">
             <summary>
             Return blend mode.
             
             Or
             Set blend mode.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.CullMode">
             <summary>
             Return culling mode override. If pass is not overriding culling mode (default), the illegal mode MAX_CULLMODES is returned.
             
             Or
             Set culling mode override. By default culling mode is read from the material instead. Set the illegal culling mode MAX_CULLMODES to disable override again.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.DepthTestMode">
             <summary>
             Return depth compare mode.
             
             Or
             Set depth compare mode.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.LightingMode">
             <summary>
             Return pass lighting mode.
             
             Or
             Set pass lighting mode, affects what shader variations will be attempted to be loaded.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.DepthWrite">
             <summary>
             Return depth write mode.
             
             Or
             Set depth write on/off.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.AlphaToCoverage">
             <summary>
             Return alpha-to-coverage mode.
             
             Or
             Set alpha-to-coverage on/off.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.VertexShader">
             <summary>
             Return vertex shader name.
             
             Or
             Set vertex shader name.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.PixelShader">
             <summary>
             Return pixel shader name.
             
             Or
             Set pixel shader name.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.VertexShaderDefines">
             <summary>
             Return vertex shader defines.
             
             Or
             Set vertex shader defines. Separate multiple defines with spaces.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.PixelShaderDefines">
             <summary>
             Return pixel shader defines.
             
             Or
             Set pixel shader defines. Separate multiple defines with spaces.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.VertexShaderDefineExcludes">
             <summary>
             Return vertex shader define excludes.
             
             Or
             Set vertex shader define excludes. Use to mark defines that the shader code will not recognize, to prevent compiling redundant shader variations.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.PixelShaderDefineExcludes">
             <summary>
             Return pixel shader define excludes.
             
             Or
             Set pixel shader define excludes. Use to mark defines that the shader code will not recognize, to prevent compiling redundant shader variations.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.Name">
             <summary>
             Return pass name.
             </summary>
            </member>
        <member name="P:Urho.Pass.Index">
             <summary>
             Return pass index. This is used for optimal render-time pass queries that avoid map lookups.
             </summary>
            </member>
        <member name="P:Urho.Pass.ShadersLoadedFrameNumber">
             <summary>
             Return last shaders loaded frame number.
             </summary>
            </member>
        <member name="P:Urho.Pass.Desktop">
             <summary>
             Return whether requires desktop level hardware.
             
             </summary>
            </member>
        <member name="P:Urho.Pass.EffectiveVertexShaderDefines">
             <summary>
             Return the effective vertex shader defines, accounting for excludes. Called internally by Renderer.
             </summary>
            </member>
        <member name="P:Urho.Pass.EffectivePixelShaderDefines">
             <summary>
             Return the effective pixel shader defines, accounting for excludes. Called internally by Renderer.
             </summary>
            </member>
        <member name="T:Urho.PassLightingMode">
             <summary>
             Lighting mode of a pass.
             </summary>
            </member>
        <member name="T:Urho.Plugin">
             <summary>
             Construct.
             </summary>
            </member>
        <member name="T:Urho.PrimitiveType">
             <summary>
             Primitive type.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.PropertySet2D">
             <summary>
             Property set.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PropertySet2D.Load(Urho.Resources.XmlElement)">
             <summary>
             Load from XML element.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PropertySet2D.HasProperty(System.String)">
             <summary>
             Return has property.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.PropertySet2D.GetProperty(System.String)">
             <summary>
             Return property value.
             </summary>
            </member>
        <member name="T:Urho.RayQueryLevel">
             <summary>
             Graphics raycast detail level.
             </summary>
            </member>
        <member name="T:Urho.Physics.RaycastVehicle">
             <summary>
             Construct.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.RegisterObject(Urho.Context)">
             <summary>
             Register object factory and attributes.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.ApplyAttributes">
             <summary>
             Perform post-load after deserialization. Acquire the components from the scene nodes.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.AddWheel(Urho.Node,Urho.Vector3,Urho.Vector3,System.Single,System.Single,System.Boolean)">
             <summary>
             Add a wheel. All parameters are relative to RigidBody / node.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.ResetSuspension">
             <summary>
             Reset all suspension.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.UpdateWheelTransform(System.Int32,System.Boolean)">
             <summary>
             Update transform for particular wheel.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetSteeringValue(System.Int32,System.Single)">
             <summary>
             Set steering value of particular wheel.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetWheelSuspensionStiffness(System.Int32,System.Single)">
             <summary>
             Set suspension stiffness for particular wheel.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetWheelMaxSuspensionForce(System.Int32,System.Single)">
             <summary>
             Set wheel max suspension force. Good results are often obtained by a value that is about 3x to 4x the vehicle weight.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetWheelDampingRelaxation(System.Int32,System.Single)">
             <summary>
             Set wheel damping relaxation.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetWheelDampingCompression(System.Int32,System.Single)">
             <summary>
             Set wheel damping compression.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetWheelFrictionSlip(System.Int32,System.Single)">
             <summary>
             Set wheel friction slip.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetWheelRollInfluence(System.Int32,System.Single)">
             <summary>
             Set wheel roll influence.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetEngineForce(System.Int32,System.Single)">
             <summary>
             Set engine force for the wheel.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetBrake(System.Int32,System.Single)">
             <summary>
             Set hand brake (wheel rotation blocking force).
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetWheelRadius(System.Int32,System.Single)">
             <summary>
             Set wheel radius.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.ResetWheels">
             <summary>
             Sets node initial positions.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Physics.RaycastVehicle.SetWheelSkidInfo(System.Int32,System.Single)-->
        <member name="M:Urho.Physics.RaycastVehicle.WheelIsGrounded(System.Int32)">
             <summary>
             True if wheel touches ground (raycast hits something).
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetMaxSuspensionTravel(System.Int32,System.Single)">
             <summary>
             Set maximum suspension travel value.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetWheelDirection(System.Int32,Urho.Vector3)">
             <summary>
             Set wheel direction vector.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetWheelAxle(System.Int32,Urho.Vector3)">
             <summary>
             Set wheel axle vector.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetMaxSideSlipSpeed(System.Single)">
             <summary>
             Set side speed which is considered sliding.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetWheelSkidInfoCumulative(System.Int32,System.Single)">
             <summary>
             Set cumulative skid info.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetInAirRPM(System.Single)">
             <summary>
             Set revolution per minute value for when wheel doesn't touch ground. If set to 0 (or not set), calculated from engine force (probably not what you want).
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.Init">
             <summary>
             Init the vehicle component after creation.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.FixedUpdate(System.Single)">
             <summary>
             Perform fixed step pre-update.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.FixedPostUpdate(System.Single)">
             <summary>
             Perform fixed step post-update.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.PostUpdate(System.Single)">
             <summary>
             Perform variable step post-update.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelPosition(System.Int32)">
             <summary>
             Get wheel position relative to RigidBody.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelRotation(System.Int32)">
             <summary>
             Get wheel rotation relative to RigidBody.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelConnectionPoint(System.Int32)">
             <summary>
             Get wheel connection point relative to RigidBody.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetNumWheels">
             <summary>
             Get number of attached wheels.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelNode(System.Int32)">
             <summary>
             Get node of the wheel.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetSteeringValue(System.Int32)">
             <summary>
             Get steering value of particular wheel.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelSuspensionStiffness(System.Int32)">
             <summary>
             Get suspension stiffness for particular wheel.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelMaxSuspensionForce(System.Int32)">
             <summary>
             Get wheel max suspension force.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelDampingRelaxation(System.Int32)">
             <summary>
             Get wheel damping relaxation.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelDampingCompression(System.Int32)">
             <summary>
             Get wheel damping compression.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelFrictionSlip(System.Int32)">
             <summary>
             Get wheel friction slip.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelRollInfluence(System.Int32)">
             <summary>
             Get wheel roll influence.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetEngineForce(System.Int32)">
             <summary>
             Get engine force for the wheel.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetBrake(System.Int32)">
             <summary>
             Get hand brake value.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelRadius(System.Int32)">
             <summary>
             Get wheel radius.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.SetWheelRestLength(System.Int32,System.Single)">
             <summary>
             Get wheel rest length.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelRestLength(System.Int32)">
             <summary>
             Get wheel rest length.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetMaxSuspensionTravel(System.Int32)">
             <summary>
             Get maximum suspension travel value.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelAxle(System.Int32)">
             <summary>
             Get wheel axle vector.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelSideSlipSpeed(System.Int32)">
             <summary>
             Get wheel slide speed.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetMaxSideSlipSpeed">
             <summary>
             Get side speed which is considered sliding.
             
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Physics.RaycastVehicle.GetWheelSkidInfo(System.Int32)-->
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelDirection(System.Int32)">
             <summary>
             Get wheel direction vector.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetWheelSkidInfoCumulative(System.Int32)">
             <summary>
             Get cumulative skid info.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.IsFrontWheel(System.Int32)">
             <summary>
             True if front wheel, otherwise false.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetContactPosition(System.Int32)">
             <summary>
             Get wheel contact position.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetContactNormal(System.Int32)">
             <summary>
             Get contact normal.
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetInAirRPM">
             <summary>
             Get revolution per minute value for when wheel doesn't touch ground.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RaycastVehicle.GetCoordinateSystem">
             <summary>
             Get the coordinate system.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RaycastVehicle.MaxSideSlipSpeed">
             <summary>
             Get side speed which is considered sliding.
             
             Or
             Set side speed which is considered sliding.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RaycastVehicle.InAirRPM">
             <summary>
             Get revolution per minute value for when wheel doesn't touch ground.
             
             Or
             Set revolution per minute value for when wheel doesn't touch ground. If set to 0 (or not set), calculated from engine force (probably not what you want).
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RaycastVehicle.CoordinateSystem">
             <summary>
             Get the coordinate system.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RaycastVehicle.NumWheels">
             <summary>
             Get number of attached wheels.
             
             </summary>
            </member>
        <member name="T:Urho.RenderCommandSortMode">
             <summary>
             Rendering path sorting modes.
             </summary>
            </member>
        <member name="T:Urho.RenderCommandType">
             <summary>
             Rendering path command types.
             </summary>
            </member>
        <member name="T:Urho.RenderSurface">
             <summary>
             %Color or depth-stencil surface that can be rendered into.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.SetNumViewports(System.UInt32)">
             <summary>
             Set number of viewports.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.SetViewport(System.UInt32,Urho.Viewport)">
             <summary>
             Set viewport.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.SetUpdateMode(Urho.RenderSurfaceUpdateMode)">
             <summary>
             Set viewport update mode. Default is to update when visible.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.SetLinkedRenderTarget(Urho.RenderSurface)">
             <summary>
             Set linked color rendertarget.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.SetLinkedDepthStencil(Urho.RenderSurface)">
             <summary>
             Set linked depth-stencil surface.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.QueueUpdate">
             <summary>
             Queue manual update of the viewport(s).
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.Release">
             <summary>
             Release surface.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.CreateRenderBuffer(System.UInt32,System.UInt32,System.UInt32,System.Int32)">
             <summary>
             Create renderbuffer that cannot be sampled as a texture. Only used on OpenGL.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetWidth">
             <summary>
             Return width.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetHeight">
             <summary>
             Return height.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetUsage">
             <summary>
             Return usage.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetMultiSample">
             <summary>
             Return multisampling level.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetAutoResolve">
             <summary>
             Return multisampling autoresolve mode.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetNumViewports">
             <summary>
             Return number of viewports.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetViewport(System.UInt32)">
             <summary>
             Return viewport by index.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetUpdateMode">
             <summary>
             Return viewport update mode.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetLinkedRenderTarget">
             <summary>
             Return linked color rendertarget.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetLinkedDepthStencil">
             <summary>
             Return linked depth-stencil surface.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.IsUpdateQueued">
             <summary>
             Return whether manual update queued. Called internally.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.ResetUpdateQueued">
             <summary>
             Reset update queued flag. Called internally.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetParentTexture">
             <summary>
             Return parent texture.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetSurface">
             <summary>
             Return Direct3D9 surface.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetRenderTargetView">
             <summary>
             Return Direct3D11 rendertarget or depth-stencil view. Not valid on OpenGL.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetReadOnlyView">
             <summary>
             Return Direct3D11 read-only depth-stencil view. May be null if not applicable. Not valid on OpenGL.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetTarget">
             <summary>
             Return surface's OpenGL target.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.GetRenderBuffer">
             <summary>
             Return OpenGL renderbuffer if created.
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.IsResolveDirty">
             <summary>
             Return whether multisampled rendertarget needs resolve.
             
             </summary>
            </member>
        <member name="M:Urho.RenderSurface.SetResolveDirty(System.Boolean)">
             <summary>
             Set or clear the need resolve flag. Called internally by Graphics.
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.NumViewports">
             <summary>
             Return number of viewports.
             
             Or
             Set number of viewports.
             
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.UpdateMode">
             <summary>
             Return viewport update mode.
             
             Or
             Set viewport update mode. Default is to update when visible.
             
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.LinkedRenderTarget">
             <summary>
             Return linked color rendertarget.
             
             Or
             Set linked color rendertarget.
             
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.LinkedDepthStencil">
             <summary>
             Return linked depth-stencil surface.
             
             Or
             Set linked depth-stencil surface.
             
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.Width">
             <summary>
             Return width.
             
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.Height">
             <summary>
             Return height.
             
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.Usage">
             <summary>
             Return usage.
             
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.MultiSample">
             <summary>
             Return multisampling level.
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.AutoResolve">
             <summary>
             Return multisampling autoresolve mode.
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.UpdateQueued">
             <summary>
             Return whether manual update queued. Called internally.
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.ParentTexture">
             <summary>
             Return parent texture.
             
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.Surface">
             <summary>
             Return Direct3D9 surface.
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.RenderTargetView">
             <summary>
             Return Direct3D11 rendertarget or depth-stencil view. Not valid on OpenGL.
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.ReadOnlyView">
             <summary>
             Return Direct3D11 read-only depth-stencil view. May be null if not applicable. Not valid on OpenGL.
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.Target">
             <summary>
             Return surface's OpenGL target.
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.RenderBuffer">
             <summary>
             Return OpenGL renderbuffer if created.
             </summary>
            </member>
        <member name="P:Urho.RenderSurface.ResolveDirty">
             <summary>
             Return whether multisampled rendertarget needs resolve.
             
             Or
             Set or clear the need resolve flag. Called internally by Graphics.
             </summary>
            </member>
        <member name="T:Urho.RenderSurfaceUpdateMode">
             <summary>
             Update mode for render surface viewports.
             </summary>
            </member>
        <member name="T:Urho.RenderTargetSizeMode">
             <summary>
             Rendertarget size mode.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.Renderer2D">
             <summary>
             2D renderer component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Renderer2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Renderer2D.GetUpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Renderer2D.AddDrawable(Urho.Urho2D.Drawable2D)">
             <summary>
             Add Drawable2D.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Renderer2D.RemoveDrawable(Urho.Urho2D.Drawable2D)">
             <summary>
             Remove Drawable2D.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Renderer2D.GetMaterial(Urho.Urho2D.Texture2D,Urho.BlendMode)">
             <summary>
             Return material by texture and blend mode.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Renderer2D.CheckVisibility(Urho.Urho2D.Drawable2D)">
             <summary>
             Check visibility.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Renderer2D.UpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="T:Urho.Resources.ResourceRequest">
             <summary>
             Resource request types.
             </summary>
            </member>
        <member name="T:Urho.ResourceRouter">
             <summary>
             Optional resource request processor. Can deny requests, re-route resource file names, or perform other processing per request.
             </summary>
            </member>
        <member name="T:Urho.ResourceWithMetadata">
             <summary>
             Base class for resources that support arbitrary metadata stored. Metadata serialization shall be implemented in derived classes.
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,Urho.Vector3)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,Urho.IntRect)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,Urho.Color)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,Urho.Vector2)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,Urho.Vector4)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,Urho.IntVector2)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,Urho.Quaternion)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,Urho.Matrix4)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,Urho.Matrix3)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,Urho.Matrix3x4)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,System.Int32)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,System.Single)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,System.String)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.AddMetadata(System.String,System.Boolean)">
             <summary>
             Add new metadata variable or overwrite old value.
             
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.RemoveMetadata(System.String)">
             <summary>
             Remove metadata variable.
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.RemoveAllMetadata">
             <summary>
             Remove all metadata variables.
             </summary>
            </member>
        <member name="M:Urho.ResourceWithMetadata.HasMetadata">
             <summary>
             Return whether the resource has metadata.
             
             </summary>
            </member>
        <member name="T:Urho.RibbonTrail">
             <summary>
             Drawable component that creates a tail.
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetUpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetMaterial(Urho.Material)">
             <summary>
             Set material.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetVertexDistance(System.Single)">
             <summary>
             Set distance between points.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetWidth(System.Single)">
             <summary>
             Set width of the tail. Only works for face camera trail type.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetStartColor(Urho.Color)">
             <summary>
             Set vertex blended color for start of trail.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetEndColor(Urho.Color)">
             <summary>
             Set vertex blended scale for end of trail.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetStartScale(System.Single)">
             <summary>
             Set vertex blended color for start of trail.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetEndScale(System.Single)">
             <summary>
             Set vertex blended scale for end of trail.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetTrailType(Urho.TrailType)">
             <summary>
             Set how the trail behave.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetBaseVelocity(Urho.Vector3)">
             <summary>
             Set base velocity applied to the trail.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetSorted(System.Boolean)">
             <summary>
             Set whether tails are sorted by distance. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetLifetime(System.Single)">
             <summary>
             Set tail time to live.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetEmitting(System.Boolean)">
             <summary>
             Set whether trail should be emitting.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetUpdateInvisible(System.Boolean)">
             <summary>
             Set whether to update when trail emitter are not visible.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetTailColumn(System.UInt32)">
             <summary>
             Set number of column for every tails. Can be useful for fixing distortion at high angle.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.SetAnimationLodBias(System.Single)">
             <summary>
             Set animation LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.Commit">
             <summary>
             Mark for bounding box and vertex buffer update. Call after modifying the trails.
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetMaterial">
             <summary>
             Return material.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetMaterialAttr">
             <summary>
             Return material attribute.
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetVertexDistance">
             <summary>
             Get distance between points.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetWidth">
             <summary>
             Get width of the trail.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetStartColor">
             <summary>
             Get vertex blended color for start of trail.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetEndColor">
             <summary>
             Get vertex blended color for end of trail.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetStartScale">
             <summary>
             Get vertex blended scale for start of trail.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetEndScale">
             <summary>
             Get vertex blended scale for end of trail.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.IsSorted">
             <summary>
             Return whether tails are sorted.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetLifetime">
             <summary>
             Return tail time to live.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetAnimationLodBias">
             <summary>
             Return animation LOD bias.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetTrailType">
             <summary>
             Return how the trail behave.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetBaseVelocity">
             <summary>
             Return base trail velocity.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetTailColumn">
             <summary>
             Return number of column for tails.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.IsEmitting">
             <summary>
             Return whether is currently emitting.
             
             </summary>
            </member>
        <member name="M:Urho.RibbonTrail.GetUpdateInvisible">
             <summary>
             Return whether to update when trail emitter are not visible.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.UpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.Material">
             <summary>
             Return material.
             
             Or
             Set material.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.MaterialAttr">
             <summary>
             Return material attribute.
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.VertexDistance">
             <summary>
             Get distance between points.
             
             Or
             Set distance between points.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.Width">
             <summary>
             Get width of the trail.
             
             Or
             Set width of the tail. Only works for face camera trail type.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.StartColor">
             <summary>
             Get vertex blended color for start of trail.
             
             Or
             Set vertex blended color for start of trail.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.EndColor">
             <summary>
             Get vertex blended color for end of trail.
             
             Or
             Set vertex blended scale for end of trail.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.StartScale">
             <summary>
             Get vertex blended scale for start of trail.
             
             Or
             Set vertex blended color for start of trail.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.EndScale">
             <summary>
             Get vertex blended scale for end of trail.
             
             Or
             Set vertex blended scale for end of trail.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.TrailType">
             <summary>
             Return how the trail behave.
             
             Or
             Set how the trail behave.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.BaseVelocity">
             <summary>
             Return base trail velocity.
             
             Or
             Set base velocity applied to the trail.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.Sorted">
             <summary>
             Return whether tails are sorted.
             
             Or
             Set whether tails are sorted by distance. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.Lifetime">
             <summary>
             Return tail time to live.
             
             Or
             Set tail time to live.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.Emitting">
             <summary>
             Return whether is currently emitting.
             
             Or
             Set whether trail should be emitting.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.UpdateInvisible">
             <summary>
             Return whether to update when trail emitter are not visible.
             
             Or
             Set whether to update when trail emitter are not visible.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.TailColumn">
             <summary>
             Return number of column for tails.
             
             Or
             Set number of column for every tails. Can be useful for fixing distortion at high angle.
             
             </summary>
            </member>
        <member name="P:Urho.RibbonTrail.AnimationLodBias">
             <summary>
             Return animation LOD bias.
             
             Or
             Set animation LOD bias.
             
             </summary>
            </member>
        <member name="T:Urho.Physics.RigidBody">
             <summary>
             Physics rigid body component.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetMass(System.Single)">
             <summary>
             Set mass. Zero mass makes the body static.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetPosition(Urho.Vector3)">
             <summary>
             Set rigid body position in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetRotation(Urho.Quaternion)">
             <summary>
             Set rigid body rotation in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetTransform(Urho.Vector3,Urho.Quaternion)">
             <summary>
             Set rigid body position and rotation in world space as an atomic operation.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetLinearVelocity(Urho.Vector3)">
             <summary>
             Set linear velocity.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetLinearFactor(Urho.Vector3)">
             <summary>
             Set linear degrees of freedom. Use 1 to enable an axis or 0 to disable. Default is all axes enabled (1, 1, 1).
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetLinearRestThreshold(System.Single)">
             <summary>
             Set linear velocity deactivation threshold.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetLinearDamping(System.Single)">
             <summary>
             Set linear velocity damping factor.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetAngularVelocity(Urho.Vector3)">
             <summary>
             Set angular velocity.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetAngularFactor(Urho.Vector3)">
             <summary>
             Set angular degrees of freedom. Use 1 to enable an axis or 0 to disable. Default is all axes enabled (1, 1, 1).
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetAngularRestThreshold(System.Single)">
             <summary>
             Set angular velocity deactivation threshold.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetAngularDamping(System.Single)">
             <summary>
             Set angular velocity damping factor.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetFriction(System.Single)">
             <summary>
             Set friction coefficient.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetAnisotropicFriction(Urho.Vector3)">
             <summary>
             Set anisotropic friction.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetRollingFriction(System.Single)">
             <summary>
             Set rolling friction coefficient.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetRestitution(System.Single)">
             <summary>
             Set restitution coefficient.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetContactProcessingThreshold(System.Single)">
             <summary>
             Set contact processing threshold.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetCcdRadius(System.Single)">
             <summary>
             Set continuous collision detection swept sphere radius.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetCcdMotionThreshold(System.Single)">
             <summary>
             Set continuous collision detection motion-per-simulation-step threshold. 0 disables, which is the default.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetUseGravity(System.Boolean)">
             <summary>
             Set whether gravity is applied to rigid body.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetGravityOverride(Urho.Vector3)">
             <summary>
             Set gravity override. If zero, uses physics world's gravity.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetKinematic(System.Boolean)">
             <summary>
             Set rigid body kinematic mode. In kinematic mode forces are not applied to the rigid body.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetTrigger(System.Boolean)">
             <summary>
             Set rigid body trigger mode. In trigger mode collisions are reported but do not apply forces.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetCollisionLayer(System.UInt32)">
             <summary>
             Set collision layer.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetCollisionMask(System.UInt32)">
             <summary>
             Set collision mask.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetCollisionLayerAndMask(System.UInt32,System.UInt32)">
             <summary>
             Set collision group and mask.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.SetCollisionEventMode(Urho.Physics.CollisionEventMode)">
             <summary>
             Set collision event signaling mode. Default is to signal when rigid bodies are active.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.ApplyForce(Urho.Vector3)">
             <summary>
             Apply force to center of mass.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.ApplyForce(Urho.Vector3,Urho.Vector3)">
             <summary>
             Apply force at local position.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.ApplyTorque(Urho.Vector3)">
             <summary>
             Apply torque.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.ApplyImpulse(Urho.Vector3)">
             <summary>
             Apply impulse to center of mass.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.ApplyImpulse(Urho.Vector3,Urho.Vector3)">
             <summary>
             Apply impulse at local position.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.ApplyTorqueImpulse(Urho.Vector3)">
             <summary>
             Apply torque impulse.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.ResetForces">
             <summary>
             Reset accumulated forces.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.Activate">
             <summary>
             Activate rigid body if it was resting.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.ReAddBodyToWorld">
             <summary>
             Readd rigid body to the physics world to clean up internal state like stale contacts.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.DisableMassUpdate">
             <summary>
             Disable mass update. Call this to optimize performance when adding or editing multiple collision shapes in the same node.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.EnableMassUpdate">
             <summary>
             Re-enable mass update and recalculate the mass/inertia by calling UpdateMass(). Call when collision shape changes are finished.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetPhysicsWorld">
             <summary>
             Return physics world.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetMass">
             <summary>
             Return mass.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetPosition">
             <summary>
             Return rigid body position in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetRotation">
             <summary>
             Return rigid body rotation in world space.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetLinearVelocity">
             <summary>
             Return linear velocity.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetLinearFactor">
             <summary>
             Return linear degrees of freedom.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetVelocityAtPoint(Urho.Vector3)">
             <summary>
             Return linear velocity at local point.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetLinearRestThreshold">
             <summary>
             Return linear velocity deactivation threshold.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetLinearDamping">
             <summary>
             Return linear velocity damping factor.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetAngularVelocity">
             <summary>
             Return angular velocity.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetAngularFactor">
             <summary>
             Return angular degrees of freedom.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetAngularRestThreshold">
             <summary>
             Return angular velocity deactivation threshold.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetAngularDamping">
             <summary>
             Return angular velocity damping factor.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetFriction">
             <summary>
             Return friction coefficient.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetAnisotropicFriction">
             <summary>
             Return anisotropic friction.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetRollingFriction">
             <summary>
             Return rolling friction coefficient.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetRestitution">
             <summary>
             Return restitution coefficient.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetContactProcessingThreshold">
             <summary>
             Return contact processing threshold.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetCcdRadius">
             <summary>
             Return continuous collision detection swept sphere radius.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetCcdMotionThreshold">
             <summary>
             Return continuous collision detection motion-per-simulation-step threshold.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetUseGravity">
             <summary>
             Return whether rigid body uses gravity.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetGravityOverride">
             <summary>
             Return gravity override. If zero (default), uses the physics world's gravity.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetCenterOfMass">
             <summary>
             Return center of mass offset.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.IsKinematic">
             <summary>
             Return kinematic mode flag.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.IsTrigger">
             <summary>
             Return whether this RigidBody is acting as a trigger.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.IsActive">
             <summary>
             Return whether rigid body is active (not sleeping).
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetCollisionLayer">
             <summary>
             Return collision layer.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetCollisionMask">
             <summary>
             Return collision mask.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.GetCollisionEventMode">
             <summary>
             Return collision event signaling mode.
             
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.ApplyWorldTransform(Urho.Vector3,Urho.Quaternion)">
             <summary>
             Apply new world transform after a simulation step. Called internally.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.UpdateMass">
             <summary>
             Update mass and inertia to the Bullet rigid body. Readd body to world if necessary: if was in world and the Bullet collision shape to use changed.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.UpdateGravity">
             <summary>
             Update gravity parameters to the Bullet rigid body.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.AddConstraint(Urho.Physics.Constraint)">
             <summary>
             Add a constraint that refers to this rigid body.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.RemoveConstraint(Urho.Physics.Constraint)">
             <summary>
             Remove a constraint that refers to this rigid body.
             </summary>
            </member>
        <member name="M:Urho.Physics.RigidBody.ReleaseBody">
             <summary>
             Remove the rigid body.
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.Mass">
             <summary>
             Return mass.
             
             Or
             Set mass. Zero mass makes the body static.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.Position">
             <summary>
             Return rigid body position in world space.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.Rotation">
             <summary>
             Return rigid body rotation in world space.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.LinearVelocity">
             <summary>
             Return linear velocity.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.LinearFactor">
             <summary>
             Return linear degrees of freedom.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.LinearRestThreshold">
             <summary>
             Return linear velocity deactivation threshold.
             
             Or
             Set linear velocity deactivation threshold.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.LinearDamping">
             <summary>
             Return linear velocity damping factor.
             
             Or
             Set linear velocity damping factor.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.AngularVelocity">
             <summary>
             Return angular velocity.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.AngularFactor">
             <summary>
             Return angular degrees of freedom.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.AngularRestThreshold">
             <summary>
             Return angular velocity deactivation threshold.
             
             Or
             Set angular velocity deactivation threshold.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.AngularDamping">
             <summary>
             Return angular velocity damping factor.
             
             Or
             Set angular velocity damping factor.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.Friction">
             <summary>
             Return friction coefficient.
             
             Or
             Set friction coefficient.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.AnisotropicFriction">
             <summary>
             Return anisotropic friction.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.RollingFriction">
             <summary>
             Return rolling friction coefficient.
             
             Or
             Set rolling friction coefficient.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.Restitution">
             <summary>
             Return restitution coefficient.
             
             Or
             Set restitution coefficient.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.ContactProcessingThreshold">
             <summary>
             Return contact processing threshold.
             
             Or
             Set contact processing threshold.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.CcdRadius">
             <summary>
             Return continuous collision detection swept sphere radius.
             
             Or
             Set continuous collision detection swept sphere radius.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.CcdMotionThreshold">
             <summary>
             Return continuous collision detection motion-per-simulation-step threshold.
             
             Or
             Set continuous collision detection motion-per-simulation-step threshold. 0 disables, which is the default.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.UseGravity">
             <summary>
             Return whether rigid body uses gravity.
             
             Or
             Set whether gravity is applied to rigid body.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.GravityOverride">
             <summary>
             Return gravity override. If zero (default), uses the physics world's gravity.
             
             Or
             Set gravity override. If zero, uses physics world's gravity.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.Kinematic">
             <summary>
             Return kinematic mode flag.
             
             Or
             Set rigid body kinematic mode. In kinematic mode forces are not applied to the rigid body.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.Trigger">
             <summary>
             Return whether this RigidBody is acting as a trigger.
             
             Or
             Set rigid body trigger mode. In trigger mode collisions are reported but do not apply forces.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.CollisionLayer">
             <summary>
             Return collision layer.
             
             Or
             Set collision layer.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.CollisionMask">
             <summary>
             Return collision mask.
             
             Or
             Set collision mask.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.CollisionEventMode">
             <summary>
             Return collision event signaling mode.
             
             Or
             Set collision event signaling mode. Default is to signal when rigid bodies are active.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.PhysicsWorld">
             <summary>
             Return physics world.
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.CenterOfMass">
             <summary>
             Return center of mass offset.
             
             </summary>
            </member>
        <member name="P:Urho.Physics.RigidBody.Active">
             <summary>
             Return whether rigid body is active (not sleeping).
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.RigidBody2D">
             <summary>
             2D rigid body component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.OnSetEnabled">
             <summary>
             Handle enabled/disabled state change.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetBodyType(Urho.Urho2D.BodyType2D)">
             <summary>
             Set body type.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetMass(System.Single)">
             <summary>
             Set mass.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetInertia(System.Single)">
             <summary>
             Set inertia.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetMassCenter(Urho.Vector2)">
             <summary>
             Set mass center.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetUseFixtureMass(System.Boolean)">
             <summary>
             Set whether to automatically calculate mass and inertia from collision shapes. Default true.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetLinearDamping(System.Single)">
             <summary>
             Set linear damping.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetAngularDamping(System.Single)">
             <summary>
             Set angular damping.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetAllowSleep(System.Boolean)">
             <summary>
             Set allow sleep.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetFixedRotation(System.Boolean)">
             <summary>
             Set fixed rotation.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetBullet(System.Boolean)">
             <summary>
             Set bullet mode.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetGravityScale(System.Single)">
             <summary>
             Set gravity scale.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetAwake(System.Boolean)">
             <summary>
             Set awake.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetLinearVelocity(Urho.Vector2)">
             <summary>
             Set linear velocity.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.SetAngularVelocity(System.Single)">
             <summary>
             Set angular velocity.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.ApplyForce(Urho.Vector2,Urho.Vector2,System.Boolean)">
             <summary>
             Apply force.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.ApplyForceToCenter(Urho.Vector2,System.Boolean)">
             <summary>
             Apply force to center.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.ApplyTorque(System.Single,System.Boolean)">
             <summary>
             Apply Torque.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.ApplyLinearImpulse(Urho.Vector2,Urho.Vector2,System.Boolean)">
             <summary>
             Apply linear impulse.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.ApplyLinearImpulseToCenter(Urho.Vector2,System.Boolean)">
             <summary>
             Apply linear impulse to center.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.ApplyAngularImpulse(System.Single,System.Boolean)">
             <summary>
             Apply angular impulse.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.CreateBody">
             <summary>
             Create body.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.ReleaseBody">
             <summary>
             Release body.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.ApplyWorldTransform">
             <summary>
             Apply world transform from the Box2D body. Called by PhysicsWorld2D.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:Urho.Urho2D.RigidBody2D.ApplyWorldTransform(Urho.Vector3,Urho.Quaternion)-->
        <member name="M:Urho.Urho2D.RigidBody2D.AddCollisionShape2D(Urho.Urho2D.CollisionShape2D)">
             <summary>
             Add collision shape.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.RemoveCollisionShape2D(Urho.Urho2D.CollisionShape2D)">
             <summary>
             Remove collision shape.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.AddConstraint2D(Urho.Urho2D.Constraint2D)">
             <summary>
             Add constraint.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.RemoveConstraint2D(Urho.Urho2D.Constraint2D)">
             <summary>
             Remove constraint.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.GetBodyType">
             <summary>
             Return body type.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.GetMass">
             <summary>
             Return mass.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.GetInertia">
             <summary>
             Return inertia.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.GetMassCenter">
             <summary>
             Return mass center.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.GetUseFixtureMass">
             <summary>
             Return whether to calculate mass and inertia from collision shapes automatically.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.GetLinearDamping">
             <summary>
             Return linear damping.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.GetAngularDamping">
             <summary>
             Return angular damping.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.IsAllowSleep">
             <summary>
             Return allow sleep.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.IsFixedRotation">
             <summary>
             Return fixed rotation.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.IsBullet">
             <summary>
             Return bullet mode.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.GetGravityScale">
             <summary>
             Return gravity scale.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.IsAwake">
             <summary>
             Return awake.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.GetLinearVelocity">
             <summary>
             Return linear velocity.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.RigidBody2D.GetAngularVelocity">
             <summary>
             Return angular velocity.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.BodyType">
             <summary>
             Return body type.
             
             Or
             Set body type.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.Mass">
             <summary>
             Return mass.
             
             Or
             Set mass.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.Inertia">
             <summary>
             Return inertia.
             
             Or
             Set inertia.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.MassCenter">
             <summary>
             Return mass center.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.UseFixtureMass">
             <summary>
             Return whether to calculate mass and inertia from collision shapes automatically.
             
             Or
             Set whether to automatically calculate mass and inertia from collision shapes. Default true.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.LinearDamping">
             <summary>
             Return linear damping.
             
             Or
             Set linear damping.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.AngularDamping">
             <summary>
             Return angular damping.
             
             Or
             Set angular damping.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.AllowSleep">
             <summary>
             Return allow sleep.
             
             Or
             Set allow sleep.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.FixedRotation">
             <summary>
             Return fixed rotation.
             
             Or
             Set fixed rotation.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.Bullet">
             <summary>
             Return bullet mode.
             
             Or
             Set bullet mode.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.GravityScale">
             <summary>
             Return gravity scale.
             
             Or
             Set gravity scale.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.Awake">
             <summary>
             Return awake.
             
             Or
             Set awake.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.LinearVelocity">
             <summary>
             Return linear velocity.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.RigidBody2D.AngularVelocity">
             <summary>
             Return angular velocity.
             Or
             Set angular velocity.
             </summary>
            </member>
        <member name="T:Urho.SceneResolver">
             <summary>
             Utility class that resolves node
             </summary>
            </member>
        <member name="M:Urho.SceneResolver.Reset">
             <summary>
             Reset. Clear all remembered nodes and components.
             </summary>
            </member>
        <member name="M:Urho.SceneResolver.AddNode(System.UInt32,Urho.Node)">
             <summary>
             Remember a created node.
             </summary>
            </member>
        <member name="M:Urho.SceneResolver.AddComponent(System.UInt32,Urho.Component)">
             <summary>
             Remember a created component.
             </summary>
            </member>
        <member name="M:Urho.SceneResolver.Resolve">
             <summary>
             Resolve component and node ID attributes and reset.
             </summary>
            </member>
        <member name="T:Urho.Shader">
             <summary>
             %Shader resource consisting of several shader variations.
             </summary>
            </member>
        <member name="M:Urho.Shader.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Shader.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Shader.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Shader.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Shader.GetVariation(Urho.ShaderType,System.String)">
             <summary>
             Return a variation with defines. Separate multiple defines with spaces.
             </summary>
            </member>
        <member name="M:Urho.Shader.GetSourceCode(Urho.ShaderType)">
             <summary>
             Return either vertex or pixel shader source code.
             </summary>
            </member>
        <member name="M:Urho.Shader.GetTimeStamp">
             <summary>
             Return the latest timestamp of the shader code and its includes.
             </summary>
            </member>
        <member name="P:Urho.Shader.TimeStamp">
             <summary>
             Return the latest timestamp of the shader code and its includes.
             </summary>
            </member>
        <member name="T:Urho.ShaderParameterAnimationInfo">
             <summary>
             Material's shader parameter animation instance.
             </summary>
            </member>
        <member name="M:Urho.ShaderParameterAnimationInfo.GetName">
             <summary>
             Return shader parameter name.
             </summary>
            </member>
        <member name="P:Urho.ShaderParameterAnimationInfo.Name">
             <summary>
             Return shader parameter name.
             </summary>
            </member>
        <member name="T:Urho.ShaderParameterGroup">
             <summary>
             Shader parameter groups for determining need to update. On APIs that support constant buffers, these correspond to different constant buffers.
             </summary>
            </member>
        <member name="T:Urho.ShaderPrecache">
             <summary>
             Utility class for collecting used shader combinations during runtime for precaching.
             </summary>
            </member>
        <member name="M:Urho.ShaderPrecache.StoreShaders(Urho.ShaderVariation,Urho.ShaderVariation)">
             <summary>
             Collect a shader combination. Called by Graphics when shaders have been set.
             </summary>
            </member>
        <member name="M:Urho.ShaderPrecache.LoadShaders(Urho.Graphics,Urho.IO.File)">
             <summary>
             Load shaders from an XML file.
             </summary>
            </member>
        <member name="M:Urho.ShaderPrecache.LoadShaders(Urho.Graphics,Urho.MemoryBuffer)">
             <summary>
             Load shaders from an XML file.
             </summary>
            </member>
        <member name="T:Urho.ShaderProgram">
             <summary>
             Linked shader program on the GPU.
             </summary>
            </member>
        <member name="T:Urho.ShaderType">
             <summary>
             Shader types.
             </summary>
            </member>
        <member name="T:Urho.ShaderVariation">
             <summary>
             Vertex or pixel shader on the GPU.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.Release">
             <summary>
             Release the shader.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.Create">
             <summary>
             Compile the shader. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.SetName(System.String)">
             <summary>
             Set name.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.SetDefines(System.String)">
             <summary>
             Set defines.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.GetOwner">
             <summary>
             Return the owner resource.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.GetShaderType">
             <summary>
             Return shader type.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.GetName">
             <summary>
             Return shader name.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.GetFullName">
             <summary>
             Return full shader name.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.HasParameter(Urho.StringHash)">
             <summary>
             Return whether uses a parameter. Not applicable on OpenGL, where this information is contained in ShaderProgram instead.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.HasTextureUnit(Urho.TextureUnit)">
             <summary>
             Return whether uses a texture unit (only for pixel shaders). Not applicable on OpenGL, where this information is contained in ShaderProgram instead.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.GetElementHash">
             <summary>
             Return vertex element hash.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.GetDefines">
             <summary>
             Return defines.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.GetCompilerOutput">
             <summary>
             Return compile error/warning string.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.GetConstantBufferSizes">
             <summary>
             Return constant buffer data sizes.
             </summary>
            </member>
        <member name="M:Urho.ShaderVariation.GetDefinesClipPlane">
             <summary>
             Return defines with the CLIPPLANE define appended. Used internally on Direct3D11 only, will be empty on other APIs.
             </summary>
            </member>
        <member name="P:Urho.ShaderVariation.Name">
             <summary>
             Return shader name.
             Or
             Set name.
             </summary>
            </member>
        <member name="P:Urho.ShaderVariation.Defines">
             <summary>
             Return defines.
             Or
             Set defines.
             </summary>
            </member>
        <member name="P:Urho.ShaderVariation.Owner">
             <summary>
             Return the owner resource.
             </summary>
            </member>
        <member name="P:Urho.ShaderVariation.ShaderType">
             <summary>
             Return shader type.
             </summary>
            </member>
        <member name="P:Urho.ShaderVariation.FullName">
             <summary>
             Return full shader name.
             </summary>
            </member>
        <member name="P:Urho.ShaderVariation.ElementHash">
             <summary>
             Return vertex element hash.
             </summary>
            </member>
        <member name="P:Urho.ShaderVariation.CompilerOutput">
             <summary>
             Return compile error/warning string.
             </summary>
            </member>
        <member name="P:Urho.ShaderVariation.ConstantBufferSizes">
             <summary>
             Return constant buffer data sizes.
             </summary>
            </member>
        <member name="P:Urho.ShaderVariation.DefinesClipPlane">
             <summary>
             Return defines with the CLIPPLANE define appended. Used internally on Direct3D11 only, will be empty on other APIs.
             </summary>
            </member>
        <member name="T:Urho.ShadowQuality">
             <summary>
             Shadow type.
             </summary>
            </member>
        <member name="T:Urho.Physics.ShapeType">
             <summary>
             Collision shape type.
             </summary>
            </member>
        <member name="T:Urho.Skybox">
             <summary>
             Static model component with fixed position in relation to the camera.
             </summary>
            </member>
        <member name="M:Urho.Skybox.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. StaticModel must be registered first.
             
             </summary>
            </member>
        <member name="T:Urho.SmoothingType">
             <summary>
             No ongoing smoothing.
             </summary>
            </member>
        <member name="T:Urho.Audio.Sound">
             <summary>
             %Sound resource.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.LoadRaw(Urho.IO.File)">
             <summary>
             Load raw sound data.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.LoadRaw(Urho.MemoryBuffer)">
             <summary>
             Load raw sound data.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.LoadWav(Urho.IO.File)">
             <summary>
             Load WAV format sound data.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.LoadWav(Urho.MemoryBuffer)">
             <summary>
             Load WAV format sound data.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.LoadOggVorbis(Urho.IO.File)">
             <summary>
             Load Ogg Vorbis format sound data. Does not decode at load, but will rather be decoded while playing.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.LoadOggVorbis(Urho.MemoryBuffer)">
             <summary>
             Load Ogg Vorbis format sound data. Does not decode at load, but will rather be decoded while playing.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.SetSize(System.UInt32)">
             <summary>
             Set sound size in bytes. Also resets the sound to be uncompressed and one-shot.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.SetData(System.Void*,System.UInt32)">
             <summary>
             Set uncompressed sound data.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.SetFormat(System.UInt32,System.Boolean,System.Boolean)">
             <summary>
             Set uncompressed sound data format.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.SetLooped(System.Boolean)">
             <summary>
             Set loop on/off. If loop is enabled, sets the full sound as loop range.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.SetLoop(System.UInt32,System.UInt32)">
             <summary>
             Define loop.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.GetDecoderStream">
             <summary>
             Return a new instance of a decoder sound stream. Used by compressed sounds.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.GetStart">
             <summary>
             Return sound data start.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.GetRepeat">
             <summary>
             Return loop start.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.GetEnd">
             <summary>
             Return sound data end.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.GetLength">
             <summary>
             Return length in seconds.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.GetDataSize">
             <summary>
             Return total sound data size.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.GetSampleSize">
             <summary>
             Return sample size.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.GetFrequency">
             <summary>
             Return default frequency as a float.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.GetIntFrequency">
             <summary>
             Return default frequency as an integer.
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.IsLooped">
             <summary>
             Return whether is looped.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.IsSixteenBit">
             <summary>
             Return whether data is sixteen bit.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.IsStereo">
             <summary>
             Return whether data is stereo.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.IsCompressed">
             <summary>
             Return whether is compressed.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.Sound.FixInterpolation">
             <summary>
             Fix interpolation by copying data from loop start to loop end (looped), or adding silence (oneshot). Called internally, does not normally need to be called, unless the sound data is modified manually on the fly.
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.Looped">
             <summary>
             Return whether is looped.
             
             Or
             Set loop on/off. If loop is enabled, sets the full sound as loop range.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.DecoderStream">
             <summary>
             Return a new instance of a decoder sound stream. Used by compressed sounds.
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.Start">
             <summary>
             Return sound data start.
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.Repeat">
             <summary>
             Return loop start.
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.End">
             <summary>
             Return sound data end.
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.Length">
             <summary>
             Return length in seconds.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.DataSize">
             <summary>
             Return total sound data size.
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.SampleSize">
             <summary>
             Return sample size.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.Frequency">
             <summary>
             Return default frequency as a float.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.IntFrequency">
             <summary>
             Return default frequency as an integer.
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.SixteenBit">
             <summary>
             Return whether data is sixteen bit.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.Stereo">
             <summary>
             Return whether data is stereo.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.Sound.Compressed">
             <summary>
             Return whether is compressed.
             
             </summary>
            </member>
        <member name="T:Urho.Audio.SoundListener">
             <summary>
             %Sound listener component.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundListener.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="T:Urho.Audio.SoundSource">
             <summary>
             %Sound source component with stereo position. A sound source needs to be created to a node to be considered "enabled" and be able to play, however that node does not need to belong to a scene.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.Seek(System.Single)">
             <summary>
             Seek to time.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.Play(Urho.Audio.Sound)">
             <summary>
             Play a sound.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.Play(Urho.Audio.Sound,System.Single)">
             <summary>
             Play a sound with specified frequency.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.Play(Urho.Audio.Sound,System.Single,System.Single)">
             <summary>
             Play a sound with specified frequency and gain.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.Play(Urho.Audio.Sound,System.Single,System.Single,System.Single)">
             <summary>
             Play a sound with specified frequency, gain and panning.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.Play(Urho.Audio.SoundStream)">
             <summary>
             Start playing a sound stream.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.Stop">
             <summary>
             Stop playback.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.SetSoundType(System.String)">
             <summary>
             Set sound type, determines the master gain group.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.SetFrequency(System.Single)">
             <summary>
             Set frequency.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.SetGain(System.Single)">
             <summary>
             Set gain. 0.0 is silence, 1.0 is full volume.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.SetAttenuation(System.Single)">
             <summary>
             Set attenuation. 1.0 is unaltered. Used for distance attenuated playback.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.SetPanning(System.Single)">
             <summary>
             Set stereo panning. -1.0 is full left and 1.0 is full right.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.SetAutoRemoveMode(Urho.AutoRemoveMode)">
             <summary>
             Set to remove either the sound source component or its owner node from the scene automatically on sound playback completion. Disabled by default.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.SetPlayPosition(System.SByte*)">
             <summary>
             Set new playback position.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.GetSound">
             <summary>
             Return sound.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.GetPlayPosition">
             <summary>
             Return playback position.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.GetSoundType">
             <summary>
             Return sound type, determines the master gain group.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.GetTimePosition">
             <summary>
             Return playback time position.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.GetFrequency">
             <summary>
             Return frequency.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.GetGain">
             <summary>
             Return gain.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.GetAttenuation">
             <summary>
             Return attenuation.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.GetPanning">
             <summary>
             Return stereo panning.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.GetAutoRemoveMode">
             <summary>
             Return automatic removal mode on sound playback completion.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.IsPlaying">
             <summary>
             Return whether is playing.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.Update(System.Single)">
             <summary>
             Update the sound source. Perform subclass specific operations. Called by Audio.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.Mix(System.Int32*,System.UInt32,System.Int32,System.Boolean,System.Boolean)">
             <summary>
             Mix sound source output to a 32-bit clipping buffer. Called by Audio.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.UpdateMasterGain">
             <summary>
             Update the effective master gain. Called internally and by Audio when the master gain changes.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.SetPositionAttr(System.Int32)">
             <summary>
             Set sound position attribute.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.GetSoundAttr">
             <summary>
             Return sound attribute.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.SetPlayingAttr(System.Boolean)">
             <summary>
             Set sound playing attribute.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource.GetPositionAttr">
             <summary>
             Return sound position attribute.
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.SoundType">
             <summary>
             Return sound type, determines the master gain group.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.Frequency">
             <summary>
             Return frequency.
             
             Or
             Set frequency.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.Gain">
             <summary>
             Return gain.
             
             Or
             Set gain. 0.0 is silence, 1.0 is full volume.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.Attenuation">
             <summary>
             Return attenuation.
             
             Or
             Set attenuation. 1.0 is unaltered. Used for distance attenuated playback.
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.Panning">
             <summary>
             Return stereo panning.
             
             Or
             Set stereo panning. -1.0 is full left and 1.0 is full right.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.AutoRemoveMode">
             <summary>
             Return automatic removal mode on sound playback completion.
             
             Or
             Set to remove either the sound source component or its owner node from the scene automatically on sound playback completion. Disabled by default.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.PlayPosition">
             <summary>
             Return playback position.
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.Sound">
             <summary>
             Return sound.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.TimePosition">
             <summary>
             Return playback time position.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.Playing">
             <summary>
             Return whether is playing.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.SoundAttr">
             <summary>
             Return sound attribute.
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource.PositionAttr">
             <summary>
             Return sound position attribute.
             Or
             Set sound position attribute.
             </summary>
            </member>
        <member name="T:Urho.Audio.SoundSource3D">
             <summary>
             %Sound source component with three-dimensional position.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.Update(System.Single)">
             <summary>
             Update sound source.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.SetDistanceAttenuation(System.Single,System.Single,System.Single)">
             <summary>
             Set attenuation parameters.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.SetAngleAttenuation(System.Single,System.Single)">
             <summary>
             Set angle attenuation parameters.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.SetNearDistance(System.Single)">
             <summary>
             Set near distance. Inside this range sound will not be attenuated.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.SetFarDistance(System.Single)">
             <summary>
             Set far distance. Outside this range sound will be completely attenuated.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.SetInnerAngle(System.Single)">
             <summary>
             Set inner angle in degrees. Inside this angle sound will not be attenuated.By default 360, meaning direction never has an effect.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.SetOuterAngle(System.Single)">
             <summary>
             Set outer angle in degrees. Outside this angle sound will be completely attenuated. By default 360, meaning direction never has an effect.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.SetRolloffFactor(System.Single)">
             <summary>
             Set rolloff power factor, defines attenuation function shape.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.CalculateAttenuation">
             <summary>
             Calculate attenuation and panning based on current position and listener position.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.GetNearDistance">
             <summary>
             Return near distance.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.GetFarDistance">
             <summary>
             Return far distance.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.GetInnerAngle">
             <summary>
             Return inner angle in degrees.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.GetOuterAngle">
             <summary>
             Return outer angle in degrees.
             
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundSource3D.RollAngleoffFactor">
             <summary>
             Return rolloff power factor.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource3D.NearDistance">
             <summary>
             Return near distance.
             
             Or
             Set near distance. Inside this range sound will not be attenuated.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource3D.FarDistance">
             <summary>
             Return far distance.
             
             Or
             Set far distance. Outside this range sound will be completely attenuated.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource3D.InnerAngle">
             <summary>
             Return inner angle in degrees.
             
             Or
             Set inner angle in degrees. Inside this angle sound will not be attenuated.By default 360, meaning direction never has an effect.
             
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundSource3D.OuterAngle">
             <summary>
             Return outer angle in degrees.
             
             Or
             Set outer angle in degrees. Outside this angle sound will be completely attenuated. By default 360, meaning direction never has an effect.
             
             </summary>
            </member>
        <member name="T:Urho.Audio.SoundStream">
             <summary>
             Base class for sound streams.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundStream.Seek(System.UInt32)">
             <summary>
             Seek to sample number. Return true on success. Need not be implemented by all streams.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundStream.GetData(System.SByte*,System.UInt32)">
             <summary>
             Produce sound data into destination. Return number of bytes produced. Called by SoundSource from the mixing thread.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundStream.SetFormat(System.UInt32,System.Boolean,System.Boolean)">
             <summary>
             Set sound data format.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundStream.SetStopAtEnd(System.Boolean)">
             <summary>
             Set whether playback should stop when no more data. Default false.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundStream.GetSampleSize">
             <summary>
             Return sample size.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundStream.GetFrequency">
             <summary>
             Return default frequency as a float.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundStream.GetIntFrequency">
             <summary>
             Return default frequency as an integer.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundStream.GetStopAtEnd">
             <summary>
             Return whether playback should stop when no more data.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundStream.IsSixteenBit">
             <summary>
             Return whether data is sixteen bit.
             </summary>
            </member>
        <member name="M:Urho.Audio.SoundStream.IsStereo">
             <summary>
             Return whether data is stereo.
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundStream.StopAtEnd">
             <summary>
             Return whether playback should stop when no more data.
             Or
             Set whether playback should stop when no more data. Default false.
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundStream.SampleSize">
             <summary>
             Return sample size.
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundStream.Frequency">
             <summary>
             Return default frequency as a float.
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundStream.IntFrequency">
             <summary>
             Return default frequency as an integer.
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundStream.SixteenBit">
             <summary>
             Return whether data is sixteen bit.
             </summary>
            </member>
        <member name="P:Urho.Audio.SoundStream.Stereo">
             <summary>
             Return whether data is stereo.
             </summary>
            </member>
        <member name="T:Urho.Sphere">
             <summary>
             %Sphere in three-dimensional space.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Define(Urho.Sphere)">
             <summary>
             Define from another sphere.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Define(Urho.Vector3,System.Single)">
             <summary>
             Define from center and radius.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Define(Urho.Vector3*,System.UInt32)">
             <summary>
             Define from an array of vertices.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Define(Urho.BoundingBox)">
             <summary>
             Define from a bounding box.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Define(Urho.Frustum)">
             <summary>
             Define from a frustum.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Define(Urho.Polyhedron)">
             <summary>
             Define from a polyhedron.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Merge(Urho.Vector3)">
             <summary>
             Merge a point.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Merge(Urho.Vector3*,System.UInt32)">
             <summary>
             Merge an array of vertices.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Merge(Urho.BoundingBox)">
             <summary>
             Merge a bounding box.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Merge(Urho.Frustum)">
             <summary>
             Merge a frustum.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Merge(Urho.Polyhedron)">
             <summary>
             Merge a polyhedron.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Merge(Urho.Sphere)">
             <summary>
             Merge a sphere.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Clear">
             <summary>
             Clear to undefined state.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Defined">
             <summary>
             Return true if this sphere is defined via a previous call to Define() or Merge().
             </summary>
            </member>
        <member name="M:Urho.Sphere.IsInside(Urho.Vector3)">
             <summary>
             Test if a point is inside.
             </summary>
            </member>
        <member name="M:Urho.Sphere.IsInside(Urho.Sphere)">
             <summary>
             Test if another sphere is inside, outside or intersects.
             </summary>
            </member>
        <member name="M:Urho.Sphere.IsInsideFast(Urho.Sphere)">
             <summary>
             Test if another sphere is (partially) inside or outside.
             </summary>
            </member>
        <member name="M:Urho.Sphere.IsInside(Urho.BoundingBox)">
             <summary>
             Test if a bounding box is inside, outside or intersects.
             </summary>
            </member>
        <member name="M:Urho.Sphere.IsInsideFast(Urho.BoundingBox)">
             <summary>
             Test if a bounding box is (partially) inside or outside.
             </summary>
            </member>
        <member name="M:Urho.Sphere.Distance(Urho.Vector3)">
             <summary>
             Return distance of a point to the surface, or 0 if inside.
             </summary>
            </member>
        <member name="M:Urho.Sphere.GetLocalPoint(System.Single,System.Single)">
             <summary>
             Return point on the sphere relative to sphere position.
             </summary>
            </member>
        <member name="M:Urho.Sphere.GetPoint(System.Single,System.Single)">
             <summary>
             Return point on the sphere.
             </summary>
            </member>
        <member name="T:Urho.Spline">
             <summary>
             Spline class to get a point on it based off the interpolation mode.
             </summary>
            </member>
        <member name="M:Urho.Spline.GetInterpolationMode">
             <summary>
             Return the interpolation mode.
             
             </summary>
            </member>
        <member name="M:Urho.Spline.GetKnot(System.UInt32)">
             <summary>
             Return the knot at the specific index.
             
             </summary>
            </member>
        <member name="M:Urho.Spline.GetPoint(System.Single)">
             <summary>
             Return the T of the point of the spline at f from 0.f - 1.f.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetInterpolationMode(Urho.InterpolationMode)">
             <summary>
             Set the interpolation mode.
             
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(Urho.Vector3,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(Urho.IntRect,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(Urho.Color,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(Urho.Vector2,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(Urho.Vector4,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(Urho.IntVector2,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(Urho.Quaternion,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(Urho.Matrix4,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(Urho.Matrix3,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(Urho.Matrix3x4,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(System.Int32,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(System.Single,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(System.String,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.SetKnot(System.Boolean,System.UInt32)">
             <summary>
             Set the value of an existing knot.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Vector3)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.IntRect)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Color)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Vector2)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Vector4)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.IntVector2)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Quaternion)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Matrix4)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Matrix3)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Matrix3x4)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(System.Int32)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(System.Single)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(System.String)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(System.Boolean)">
             <summary>
             Add a knot to the end of the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Vector3,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.IntRect,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Color,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Vector2,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Vector4,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.IntVector2,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Quaternion,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Matrix4,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Matrix3,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(Urho.Matrix3x4,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(System.Int32,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(System.Single,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(System.String,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.AddKnot(System.Boolean,System.UInt32)">
             <summary>
             Add a knot to the spline at a specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.RemoveKnot">
             <summary>
             Remove the last knot on the spline.
             </summary>
            </member>
        <member name="M:Urho.Spline.RemoveKnot(System.UInt32)">
             <summary>
             Remove the knot at the specific index.
             </summary>
            </member>
        <member name="M:Urho.Spline.Clear">
             <summary>
             Clear the spline.
             </summary>
            </member>
        <member name="P:Urho.Spline.InterpolationMode">
             <summary>
             Return the interpolation mode.
             
             Or
             Set the interpolation mode.
             
             </summary>
            </member>
        <member name="T:Urho.SplinePath">
             <summary>
             Spline for creating smooth movement based on Speed along a set of Control Points modified by the Interpolation Mode.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.SplinePath.ApplyAttributes">
             <summary>
             Apply Attributes to the SplinePath.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Draw the Debug Geometry.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.AddControlPoint(Urho.Node,System.UInt32)">
             <summary>
             Add a Node to the SplinePath as a Control Point.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.RemoveControlPoint(Urho.Node)">
             <summary>
             Remove a Node Control Point from the SplinePath.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.ClearControlPoints">
             <summary>
             Clear the Control Points from the SplinePath.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.SetInterpolationMode(Urho.InterpolationMode)">
             <summary>
             Set the Interpolation Mode.
             
             </summary>
            </member>
        <member name="M:Urho.SplinePath.SetSpeed(System.Single)">
             <summary>
             Set the movement Speed.
             
             </summary>
            </member>
        <member name="M:Urho.SplinePath.SetPosition(System.Single)">
             <summary>
             Set the controlled Node's position on the SplinePath.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.SetControlledNode(Urho.Node)">
             <summary>
             Set the Node to be moved along the SplinePath.
             
             </summary>
            </member>
        <member name="M:Urho.SplinePath.GetInterpolationMode">
             <summary>
             Get the Interpolation Mode.
             
             </summary>
            </member>
        <member name="M:Urho.SplinePath.GetSpeed">
             <summary>
             Get the movement Speed.
             
             </summary>
            </member>
        <member name="M:Urho.SplinePath.GetLength">
             <summary>
             Get the length of SplinePath.
             
             </summary>
            </member>
        <member name="M:Urho.SplinePath.GetPosition">
             <summary>
             Get the parent Node's last position on the spline.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.GetControlledNode">
             <summary>
             Get the controlled Node.
             
             </summary>
            </member>
        <member name="M:Urho.SplinePath.GetPoint(System.Single)">
             <summary>
             Get a point on the SplinePath from 0.f to 1.f where 0 is the start and 1 is the end.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.Move(System.Single)">
             <summary>
             Move the controlled Node to the next position along the SplinePath based off the Speed value.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.Reset">
             <summary>
             Reset movement along the path.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.IsFinished">
             <summary>
             Returns whether the movement along the SplinePath is complete.
             
             </summary>
            </member>
        <member name="M:Urho.SplinePath.SetControlledIdAttr(System.UInt32)">
             <summary>
             Set Controlled Node ID attribute.
             </summary>
            </member>
        <member name="M:Urho.SplinePath.GetControlledIdAttr">
             <summary>
             Get Controlled Node ID attribute.
             </summary>
            </member>
        <member name="P:Urho.SplinePath.InterpolationMode">
             <summary>
             Get the Interpolation Mode.
             
             Or
             Set the Interpolation Mode.
             
             </summary>
            </member>
        <member name="P:Urho.SplinePath.Speed">
             <summary>
             Get the movement Speed.
             
             Or
             Set the movement Speed.
             
             </summary>
            </member>
        <member name="P:Urho.SplinePath.Position">
             <summary>
             Get the parent Node's last position on the spline.
             </summary>
            </member>
        <member name="P:Urho.SplinePath.ControlledNode">
             <summary>
             Get the controlled Node.
             
             Or
             Set the Node to be moved along the SplinePath.
             
             </summary>
            </member>
        <member name="P:Urho.SplinePath.Length">
             <summary>
             Get the length of SplinePath.
             
             </summary>
            </member>
        <member name="P:Urho.SplinePath.Finished">
             <summary>
             Returns whether the movement along the SplinePath is complete.
             
             </summary>
            </member>
        <member name="P:Urho.SplinePath.ControlledIdAttr">
             <summary>
             Get Controlled Node ID attribute.
             Or
             Set Controlled Node ID attribute.
             </summary>
            </member>
        <member name="T:Urho.Gui.Sprite">
             <summary>
             %UI element which allows sub-pixel positioning and size, as well as rotation. Only other Sprites should be added as child elements.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.IsWithinScissor(Urho.IntRect)">
             <summary>
             Return whether is visible and inside a scissor rectangle and should be rendered.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.GetScreenPosition">
             <summary>
             Update and return screen position.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.OnPositionSet(Urho.IntVector2)">
             <summary>
             React to position change.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.ScreenToElement(Urho.IntVector2)">
             <summary>
             Convert screen coordinates to element coordinates.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.ElementToScreen(Urho.IntVector2)">
             <summary>
             Convert element coordinates to screen coordinates.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetPosition(Urho.Vector2)">
             <summary>
             Set floating point position.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetPosition(System.Single,System.Single)">
             <summary>
             Set floating point position.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetHotSpot(Urho.IntVector2)">
             <summary>
             Set hotspot for positioning and rotation.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetHotSpot(System.Int32,System.Int32)">
             <summary>
             Set hotspot for positioning and rotation.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetScale(Urho.Vector2)">
             <summary>
             Set scale. Scale also affects child sprites.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetScale(System.Single,System.Single)">
             <summary>
             Set scale. Scale also affects child sprites.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetScale(System.Single)">
             <summary>
             Set uniform scale. Scale also affects child sprites.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetRotation(System.Single)">
             <summary>
             Set rotation angle.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetTexture(Urho.Texture)">
             <summary>
             Set texture.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetImageRect(Urho.IntRect)">
             <summary>
             Set part of texture to use as the image.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetFullImageRect">
             <summary>
             Use whole texture as the image.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.SetBlendMode(Urho.BlendMode)">
             <summary>
             Set blend mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.GetPosition">
             <summary>
             Return floating point position.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.GetHotSpot">
             <summary>
             Return hotspot.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.GetScale">
             <summary>
             Return scale.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.GetRotation">
             <summary>
             Return rotation angle.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.GetTexture">
             <summary>
             Return texture.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.GetImageRect">
             <summary>
             Return image rectangle.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.GetBlendMode">
             <summary>
             Return blend mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.GetTextureAttr">
             <summary>
             Return texture attribute.
             </summary>
            </member>
        <member name="M:Urho.Gui.Sprite.GetTransform">
             <summary>
             Update and return rendering transform, also used to transform child sprites.
             </summary>
            </member>
        <member name="P:Urho.Gui.Sprite.ScreenPosition">
             <summary>
             Update and return screen position.
             </summary>
            </member>
        <member name="P:Urho.Gui.Sprite.PositionFloat">
             <summary>
             Return floating point position.
             
             Or
             Set floating point position.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Sprite.HotSpot">
             <summary>
             Return hotspot.
             
             Or
             Set hotspot for positioning and rotation.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Sprite.Scale">
             <summary>
             Return scale.
             
             Or
             Set scale. Scale also affects child sprites.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Sprite.Rotation">
             <summary>
             Return rotation angle.
             
             Or
             Set rotation angle.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Sprite.Texture">
             <summary>
             Return texture.
             
             Or
             Set texture.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Sprite.ImageRect">
             <summary>
             Return image rectangle.
             
             Or
             Set part of texture to use as the image.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Sprite.BlendMode">
             <summary>
             Return blend mode.
             
             Or
             Set blend mode.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Sprite.TextureAttr">
             <summary>
             Return texture attribute.
             </summary>
            </member>
        <member name="P:Urho.Gui.Sprite.Transform">
             <summary>
             Update and return rendering transform, also used to transform child sprites.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.Sprite2D">
             <summary>
             Sprite.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.SetTexture(Urho.Urho2D.Texture2D)">
             <summary>
             Set texture.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.SetRectangle(Urho.IntRect)">
             <summary>
             Set rectangle.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.SetHotSpot(Urho.Vector2)">
             <summary>
             Set hot spot.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.SetOffset(Urho.IntVector2)">
             <summary>
             Set offset.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.SetTextureEdgeOffset(System.Single)">
             <summary>
             Set texture edge offset in pixels. This affects the left/right and top/bottom edges equally to prevent edge sampling artifacts. Default 0.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.SetSpriteSheet(Urho.Urho2D.SpriteSheet2D)">
             <summary>
             Set sprite sheet.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.GetTexture">
             <summary>
             Return texture.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.GetRectangle">
             <summary>
             Return rectangle.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.GetHotSpot">
             <summary>
             Return hot spot.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.GetOffset">
             <summary>
             Return offset.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.GetTextureEdgeOffset">
             <summary>
             Return texture edge offset.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.GetSpriteSheet">
             <summary>
             Return sprite sheet.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Sprite2D.SaveToResourceRef(Urho.Urho2D.Sprite2D)">
             <summary>
             Save sprite to ResourceRef.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Sprite2D.Texture">
             <summary>
             Return texture.
             
             Or
             Set texture.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Sprite2D.Rectangle">
             <summary>
             Return rectangle.
             
             Or
             Set rectangle.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Sprite2D.HotSpot">
             <summary>
             Return hot spot.
             
             Or
             Set hot spot.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Sprite2D.Offset">
             <summary>
             Return offset.
             
             Or
             Set offset.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Sprite2D.TextureEdgeOffset">
             <summary>
             Return texture edge offset.
             
             Or
             Set texture edge offset in pixels. This affects the left/right and top/bottom edges equally to prevent edge sampling artifacts. Default 0.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Sprite2D.SpriteSheet">
             <summary>
             Return sprite sheet.
             Or
             Set sprite sheet.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.SpriteSheet2D">
             <summary>
             Sprite sheet.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.SpriteSheet2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.SpriteSheet2D.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.SpriteSheet2D.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.SpriteSheet2D.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.SpriteSheet2D.SetTexture(Urho.Urho2D.Texture2D)">
             <summary>
             Set texture.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.SpriteSheet2D.DefineSprite(System.String,Urho.IntRect,Urho.Vector2,Urho.IntVector2)">
             <summary>
             Define sprite.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.SpriteSheet2D.GetTexture">
             <summary>
             Return texture.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.SpriteSheet2D.GetSprite(System.String)">
             <summary>
             Return sprite.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.SpriteSheet2D.Texture">
             <summary>
             Return texture.
             
             Or
             Set texture.
             
             </summary>
            </member>
        <member name="T:Urho.StaticModel">
             <summary>
             Static model component.
             </summary>
            </member>
        <member name="M:Urho.StaticModel.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. Drawable must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModel.GetLodGeometry(System.UInt32,System.UInt32)">
             <summary>
             Return the geometry for a specific LOD level.
             </summary>
            </member>
        <member name="M:Urho.StaticModel.GetNumOccluderTriangles">
             <summary>
             Return number of occlusion geometry triangles.
             </summary>
            </member>
        <member name="M:Urho.StaticModel.DrawOcclusion(Urho.OcclusionBuffer)">
             <summary>
             Draw to occlusion buffer. Return true if did not run out of triangles.
             </summary>
            </member>
        <member name="M:Urho.StaticModel.SetModel(Urho.Model)">
             <summary>
             Set model.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModel.SetMaterial(Urho.Material)">
             <summary>
             Set material on all geometries.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModel.SetMaterial(System.UInt32,Urho.Material)">
             <summary>
             Set material on one geometry. Return true if successful.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModel.SetOcclusionLodLevel(System.UInt32)">
             <summary>
             Set occlusion LOD level. By default (M_MAX_UNSIGNED) same as visible.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModel.ApplyMaterialList(System.String)">
             <summary>
             Apply default materials from a material list file. If filename is empty (default), the model's resource name with extension .txt will be used.
             </summary>
            </member>
        <member name="M:Urho.StaticModel.GetModel">
             <summary>
             Return model.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModel.GetNumGeometries">
             <summary>
             Return number of geometries.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModel.GetMaterial">
             <summary>
             Return material from the first geometry, assuming all the geometries use the same material.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModel.GetMaterial(System.UInt32)">
             <summary>
             Return material by geometry index.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModel.GetOcclusionLodLevel">
             <summary>
             Return occlusion LOD level.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModel.IsInside(Urho.Vector3)">
             <summary>
             Determines if the given world space point is within the model geometry.
             </summary>
            </member>
        <member name="M:Urho.StaticModel.IsInsideLocal(Urho.Vector3)">
             <summary>
             Determines if the given local space point is within the model geometry.
             </summary>
            </member>
        <member name="M:Urho.StaticModel.GetModelAttr">
             <summary>
             Return model attribute.
             </summary>
            </member>
        <member name="P:Urho.StaticModel.NumOccluderTriangles">
             <summary>
             Return number of occlusion geometry triangles.
             </summary>
            </member>
        <member name="P:Urho.StaticModel.Model">
             <summary>
             Return model.
             
             Or
             Set model.
             
             </summary>
            </member>
        <member name="P:Urho.StaticModel.Material">
             <summary>
             Return material from the first geometry, assuming all the geometries use the same material.
             
             Or
             Set material on all geometries.
             
             </summary>
            </member>
        <member name="P:Urho.StaticModel.OcclusionLodLevel">
             <summary>
             Return occlusion LOD level.
             
             Or
             Set occlusion LOD level. By default (M_MAX_UNSIGNED) same as visible.
             
             </summary>
            </member>
        <member name="P:Urho.StaticModel.NumGeometries">
             <summary>
             Return number of geometries.
             
             </summary>
            </member>
        <member name="P:Urho.StaticModel.ModelAttr">
             <summary>
             Return model attribute.
             </summary>
            </member>
        <member name="T:Urho.StaticModelGroup">
             <summary>
             Renders several object instances while culling and receiving light as one unit. Can be used as a CPU-side optimization, but note that also regular StaticModels will use instanced rendering if possible.
             </summary>
            </member>
        <member name="M:Urho.StaticModelGroup.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. StaticModel must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModelGroup.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
             </summary>
            </member>
        <member name="M:Urho.StaticModelGroup.GetNumOccluderTriangles">
             <summary>
             Return number of occlusion geometry triangles.
             </summary>
            </member>
        <member name="M:Urho.StaticModelGroup.DrawOcclusion(Urho.OcclusionBuffer)">
             <summary>
             Draw to occlusion buffer. Return true if did not run out of triangles.
             </summary>
            </member>
        <member name="M:Urho.StaticModelGroup.AddInstanceNode(Urho.Node)">
             <summary>
             Add an instance scene node. It does not need any drawable components of its own.
             </summary>
            </member>
        <member name="M:Urho.StaticModelGroup.RemoveInstanceNode(Urho.Node)">
             <summary>
             Remove an instance scene node.
             </summary>
            </member>
        <member name="M:Urho.StaticModelGroup.RemoveAllInstanceNodes">
             <summary>
             Remove all instance scene nodes.
             </summary>
            </member>
        <member name="M:Urho.StaticModelGroup.GetNumInstanceNodes">
             <summary>
             Return number of instance nodes.
             
             </summary>
            </member>
        <member name="M:Urho.StaticModelGroup.GetInstanceNode(System.UInt32)">
             <summary>
             Return instance node by index.
             
             </summary>
            </member>
        <member name="P:Urho.StaticModelGroup.NumOccluderTriangles">
             <summary>
             Return number of occlusion geometry triangles.
             </summary>
            </member>
        <member name="P:Urho.StaticModelGroup.NumInstanceNodes">
             <summary>
             Return number of instance nodes.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.StaticSprite2D">
             <summary>
             Static sprite component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. Drawable2D must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetSprite(Urho.Urho2D.Sprite2D)">
             <summary>
             Set sprite.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetBlendMode(Urho.BlendMode)">
             <summary>
             Set blend mode.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetFlip(System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Set flip.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetFlipX(System.Boolean)">
             <summary>
             Set flip X.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetFlipY(System.Boolean)">
             <summary>
             Set flip Y.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetSwapXY(System.Boolean)">
             <summary>
             Set swap X and Y.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetColor(Urho.Color)">
             <summary>
             Set color.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetAlpha(System.Single)">
             <summary>
             Set alpha.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetUseHotSpot(System.Boolean)">
             <summary>
             Set whether to use custom-defined hot spot.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetUseDrawRect(System.Boolean)">
             <summary>
             Set whether to use custom-defined draw rectangle.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetUseTextureRect(System.Boolean)">
             <summary>
             Set whether to use custom-defined texture rectangle.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetHotSpot(Urho.Vector2)">
             <summary>
             Set hot spot.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.SetCustomMaterial(Urho.Material)">
             <summary>
             Set custom material.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetSprite">
             <summary>
             Return sprite.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetBlendMode">
             <summary>
             Return blend mode.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetFlipX">
             <summary>
             Return flip X.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetFlipY">
             <summary>
             Return flip Y.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetSwapXY">
             <summary>
             Return swap X and Y.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetColor">
             <summary>
             Return color.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetAlpha">
             <summary>
             Return alpha.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetUseHotSpot">
             <summary>
             Return whether to use custom-defined hot spot.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetUseDrawRect">
             <summary>
             Return whether to use custom-defined draw rectangle.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetUseTextureRect">
             <summary>
             Return whether to use custom-defined texture rectangle.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetHotSpot">
             <summary>
             Return hot spot.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetCustomMaterial">
             <summary>
             Return custom material.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetSpriteAttr">
             <summary>
             Return sprite attribute.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.StaticSprite2D.GetCustomMaterialAttr">
             <summary>
             Return custom material attribute.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.Sprite">
             <summary>
             Return sprite.
             
             Or
             Set sprite.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.BlendMode">
             <summary>
             Return blend mode.
             
             Or
             Set blend mode.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.FlipX">
             <summary>
             Return flip X.
             
             Or
             Set flip X.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.FlipY">
             <summary>
             Return flip Y.
             
             Or
             Set flip Y.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.SwapXY">
             <summary>
             Return swap X and Y.
             
             Or
             Set swap X and Y.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.Color">
             <summary>
             Return color.
             
             Or
             Set color.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.Alpha">
             <summary>
             Return alpha.
             
             Or
             Set alpha.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.UseHotSpot">
             <summary>
             Return whether to use custom-defined hot spot.
             
             Or
             Set whether to use custom-defined hot spot.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.UseDrawRect">
             <summary>
             Return whether to use custom-defined draw rectangle.
             
             Or
             Set whether to use custom-defined draw rectangle.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.UseTextureRect">
             <summary>
             Return whether to use custom-defined texture rectangle.
             
             Or
             Set whether to use custom-defined texture rectangle.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.HotSpot">
             <summary>
             Return hot spot.
             
             Or
             Set hot spot.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.CustomMaterial">
             <summary>
             Return custom material.
             
             Or
             Set custom material.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.SpriteAttr">
             <summary>
             Return sprite attribute.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.StaticSprite2D.CustomMaterialAttr">
             <summary>
             Return custom material attribute.
             </summary>
            </member>
        <member name="T:Urho.StencilOp">
             <summary>
             Stencil operation.
             </summary>
            </member>
        <member name="T:Urho.Technique">
             <summary>
             %Material technique. Consists of several passes.
             </summary>
            </member>
        <member name="M:Urho.Technique.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Technique.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Technique.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Technique.SetIsDesktop(System.Boolean)">
             <summary>
             Set whether requires desktop level hardware.
             
             </summary>
            </member>
        <member name="M:Urho.Technique.CreatePass(System.String)">
             <summary>
             Create a new pass.
             </summary>
            </member>
        <member name="M:Urho.Technique.RemovePass(System.String)">
             <summary>
             Remove a pass.
             </summary>
            </member>
        <member name="M:Urho.Technique.ReleaseShaders">
             <summary>
             Reset shader pointers in all passes.
             </summary>
            </member>
        <member name="M:Urho.Technique.Clone(System.String)">
             <summary>
             Clone the technique. Passes will be deep copied to allow independent modification.
             </summary>
            </member>
        <member name="M:Urho.Technique.IsDesktop">
             <summary>
             Return whether requires desktop level hardware.
             
             </summary>
            </member>
        <member name="M:Urho.Technique.IsSupported">
             <summary>
             Return whether technique is supported by the current hardware.
             
             </summary>
            </member>
        <member name="M:Urho.Technique.HasPass(System.UInt32)">
             <summary>
             Return whether has a pass.
             </summary>
            </member>
        <member name="M:Urho.Technique.HasPass(System.String)">
             <summary>
             Return whether has a pass by name. This overload should not be called in time-critical rendering loops; use a pre-acquired pass index instead.
             </summary>
            </member>
        <member name="M:Urho.Technique.GetPass(System.UInt32)">
             <summary>
             Return a pass, or null if not found.
             </summary>
            </member>
        <member name="M:Urho.Technique.GetPass(System.String)">
             <summary>
             Return a pass by name, or null if not found. This overload should not be called in time-critical rendering loops; use a pre-acquired pass index instead.
             </summary>
            </member>
        <member name="M:Urho.Technique.GetSupportedPass(System.UInt32)">
             <summary>
             Return a pass that is supported for rendering, or null if not found.
             </summary>
            </member>
        <member name="M:Urho.Technique.GetSupportedPass(System.String)">
             <summary>
             Return a supported pass by name. This overload should not be called in time-critical rendering loops; use a pre-acquired pass index instead.
             </summary>
            </member>
        <member name="M:Urho.Technique.GetNumPasses">
             <summary>
             Return number of passes.
             
             </summary>
            </member>
        <member name="M:Urho.Technique.CloneWithDefines(System.String,System.String)">
             <summary>
             Return a clone with added shader compilation defines. Called internally by Material.
             </summary>
            </member>
        <member name="M:Urho.Technique.GetPassIndex(System.String)">
             <summary>
             Return a pass type index by name. Allocate new if not used yet.
             </summary>
            </member>
        <member name="P:Urho.Technique.Desktop">
             <summary>
             Return whether requires desktop level hardware.
             
             </summary>
            </member>
        <member name="P:Urho.Technique.Supported">
             <summary>
             Return whether technique is supported by the current hardware.
             
             </summary>
            </member>
        <member name="P:Urho.Technique.NumPasses">
             <summary>
             Return number of passes.
             
             </summary>
            </member>
        <member name="T:Urho.TerrainPatch">
             <summary>
             Individually rendered part of a heightmap terrain.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetUpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetLodGeometry(System.UInt32,System.UInt32)">
             <summary>
             Return the geometry for a specific LOD level.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetNumOccluderTriangles">
             <summary>
             Return number of occlusion geometry triangles.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.DrawOcclusion(Urho.OcclusionBuffer)">
             <summary>
             Draw to occlusion buffer. Return true if did not run out of triangles.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.SetOwner(Urho.Terrain)">
             <summary>
             Set owner terrain.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.SetNeighbors(Urho.TerrainPatch,Urho.TerrainPatch,Urho.TerrainPatch,Urho.TerrainPatch)">
             <summary>
             Set neighbor patches.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.SetMaterial(Urho.Material)">
             <summary>
             Set material.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.SetBoundingBox(Urho.BoundingBox)">
             <summary>
             Set local-space bounding box.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.SetCoordinates(Urho.IntVector2)">
             <summary>
             Set patch coordinates.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.ResetLod">
             <summary>
             Reset to LOD level 0.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetGeometry">
             <summary>
             Return visible geometry.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetMaxLodGeometry">
             <summary>
             Return max LOD geometry. Used for decals.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetOcclusionGeometry">
             <summary>
             Return geometry used for occlusion.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetVertexBuffer">
             <summary>
             Return vertex buffer.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetOwner">
             <summary>
             Return owner terrain.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetNorthPatch">
             <summary>
             Return north neighbor patch.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetSouthPatch">
             <summary>
             Return south neighbor patch.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetWestPatch">
             <summary>
             Return west neighbor patch.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetEastPatch">
             <summary>
             Return east neighbor patch.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetCoordinates">
             <summary>
             Return patch coordinates.
             </summary>
            </member>
        <member name="M:Urho.TerrainPatch.GetLodLevel">
             <summary>
             Return current LOD level.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.UpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.NumOccluderTriangles">
             <summary>
             Return number of occlusion geometry triangles.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.Owner">
             <summary>
             Return owner terrain.
             Or
             Set owner terrain.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.Coordinates">
             <summary>
             Return patch coordinates.
             Or
             Set patch coordinates.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.Geometry">
             <summary>
             Return visible geometry.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.MaxLodGeometry">
             <summary>
             Return max LOD geometry. Used for decals.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.OcclusionGeometry">
             <summary>
             Return geometry used for occlusion.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.VertexBuffer">
             <summary>
             Return vertex buffer.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.NorthPatch">
             <summary>
             Return north neighbor patch.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.SouthPatch">
             <summary>
             Return south neighbor patch.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.WestPatch">
             <summary>
             Return west neighbor patch.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.EastPatch">
             <summary>
             Return east neighbor patch.
             </summary>
            </member>
        <member name="P:Urho.TerrainPatch.LodLevel">
             <summary>
             Return current LOD level.
             </summary>
            </member>
        <member name="T:Urho.Gui.Text">
             <summary>
             %Text %UI element.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.OnResize(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             React to resize.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.OnIndentSet">
             <summary>
             React to indent change.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetFont(System.String,System.Single)">
             <summary>
             Set font by looking from resource cache by name and font size. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetFont(Urho.Gui.Font,System.Single)">
             <summary>
             Set font and font size. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetFontSize(System.Single)">
             <summary>
             Set font size only while retaining the existing font. Return true if successful.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetText(System.String)">
             <summary>
             Set text. Text is assumed to be either ASCII or UTF8-encoded.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetTextAlignment(Urho.Gui.HorizontalAlignment)">
             <summary>
             Set row alignment.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetRowSpacing(System.Single)">
             <summary>
             Set row spacing, 1.0 for original font spacing.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetWordwrap(System.Boolean)">
             <summary>
             Set wordwrap. In wordwrap mode the text element will respect its current width. Otherwise it resizes itself freely.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetAutoLocalizable(System.Boolean)">
             <summary>
             The text will be automatically translated. The text value used as string identifier.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetSelection(System.UInt32,System.UInt32)">
             <summary>
             Set selection. When length is not provided, select until the text ends.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.ClearSelection">
             <summary>
             Clear selection.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetTextEffect(Urho.Gui.TextEffect)">
             <summary>
             Set text effect.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetEffectShadowOffset(Urho.IntVector2)">
             <summary>
             Set shadow offset.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetEffectStrokeThickness(System.Int32)">
             <summary>
             Set stroke thickness.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetEffectRoundStroke(System.Boolean)">
             <summary>
             Set stroke rounding. Corners of the font will be rounded off in the stroke so the stroke won't have corners.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetEffectColor(Urho.Color)">
             <summary>
             Set effect color.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetFont">
             <summary>
             Return font.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetFontSize">
             <summary>
             Return font size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetText">
             <summary>
             Return text.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetTextAlignment">
             <summary>
             Return row alignment.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetRowSpacing">
             <summary>
             Return row spacing.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetWordwrap">
             <summary>
             Return wordwrap mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetAutoLocalizable">
             <summary>
             Return auto localizable mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetSelectionStart">
             <summary>
             Return selection start.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetSelectionLength">
             <summary>
             Return selection length.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetTextEffect">
             <summary>
             Return text effect.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetEffectShadowOffset">
             <summary>
             Return effect shadow offset.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetEffectStrokeThickness">
             <summary>
             Return effect stroke thickness.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetEffectRoundStroke">
             <summary>
             Return effect round stroke.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetEffectColor">
             <summary>
             Return effect color.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetRowHeight">
             <summary>
             Return row height.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetNumRows">
             <summary>
             Return number of rows.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetNumChars">
             <summary>
             Return number of characters.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetRowWidth(System.UInt32)">
             <summary>
             Return width of row by index.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetCharPosition(System.UInt32)">
             <summary>
             Return position of character by index relative to the text element origin.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetCharSize(System.UInt32)">
             <summary>
             Return size of character by index.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetEffectDepthBias(System.Single)">
             <summary>
             Set text effect Z bias. Zero by default, adjusted only in 3D mode.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetEffectDepthBias">
             <summary>
             Return effect Z bias.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetFontAttr">
             <summary>
             Return font attribute.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.SetTextAttr(System.String)">
             <summary>
             Set text attribute.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text.GetTextAttr">
             <summary>
             Return text attribute.
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.FontSize">
             <summary>
             Return font size.
             
             Or
             Set font size only while retaining the existing font. Return true if successful.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.Value">
             <summary>
             Return text.
             
             Or
             Set text. Text is assumed to be either ASCII or UTF8-encoded.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.TextAlignment">
             <summary>
             Return row alignment.
             
             Or
             Set row alignment.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.RowSpacing">
             <summary>
             Return row spacing.
             
             Or
             Set row spacing, 1.0 for original font spacing.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.Wordwrap">
             <summary>
             Return wordwrap mode.
             
             Or
             Set wordwrap. In wordwrap mode the text element will respect its current width. Otherwise it resizes itself freely.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.AutoLocalizable">
             <summary>
             Return auto localizable mode.
             
             Or
             The text will be automatically translated. The text value used as string identifier.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.TextEffect">
             <summary>
             Return text effect.
             
             Or
             Set text effect.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.EffectShadowOffset">
             <summary>
             Return effect shadow offset.
             
             Or
             Set shadow offset.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.EffectStrokeThickness">
             <summary>
             Return effect stroke thickness.
             
             Or
             Set stroke thickness.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.EffectRoundStroke">
             <summary>
             Return effect round stroke.
             
             Or
             Set stroke rounding. Corners of the font will be rounded off in the stroke so the stroke won't have corners.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.EffectColor">
             <summary>
             Return effect color.
             
             Or
             Set effect color.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.Font">
             <summary>
             Return font.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.SelectionStart">
             <summary>
             Return selection start.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.SelectionLength">
             <summary>
             Return selection length.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.RowHeight">
             <summary>
             Return row height.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.NumRows">
             <summary>
             Return number of rows.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.NumChars">
             <summary>
             Return number of characters.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.EffectDepthBias">
             <summary>
             Return effect Z bias.
             Or
             Set text effect Z bias. Zero by default, adjusted only in 3D mode.
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.FontAttr">
             <summary>
             Return font attribute.
             </summary>
            </member>
        <member name="P:Urho.Gui.Text.TextAttr">
             <summary>
             Return text attribute.
             </summary>
            </member>
        <member name="T:Urho.Gui.Text3D">
             <summary>
             3D text component.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. Drawable must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.ApplyAttributes">
             <summary>
             Apply attribute changes that can not be applied immediately.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetUpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetFont(System.String,System.Single)">
             <summary>
             Set font by looking from resource cache by name and font size. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetFont(Urho.Gui.Font,System.Single)">
             <summary>
             Set font and font size. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetFontSize(System.Single)">
             <summary>
             Set font size only while retaining the existing font. Return true if successful.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetMaterial(Urho.Material)">
             <summary>
             Set material.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetText(System.String)">
             <summary>
             Set text. Text is assumed to be either ASCII or UTF8-encoded.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetAlignment(Urho.Gui.HorizontalAlignment,Urho.Gui.VerticalAlignment)">
             <summary>
             Set horizontal and vertical alignment.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetHorizontalAlignment(Urho.Gui.HorizontalAlignment)">
             <summary>
             Set horizontal alignment.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetVerticalAlignment(Urho.Gui.VerticalAlignment)">
             <summary>
             Set vertical alignment.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetTextAlignment(Urho.Gui.HorizontalAlignment)">
             <summary>
             Set row alignment.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetRowSpacing(System.Single)">
             <summary>
             Set row spacing, 1.0 for original font spacing.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetWordwrap(System.Boolean)">
             <summary>
             Set wordwrap. In wordwrap mode the text element will respect its current width. Otherwise it resizes itself freely.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetTextEffect(Urho.Gui.TextEffect)">
             <summary>
             Set text effect.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetEffectShadowOffset(Urho.IntVector2)">
             <summary>
             Set shadow offset.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetEffectStrokeThickness(System.Int32)">
             <summary>
             Set stroke thickness.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetEffectRoundStroke(System.Boolean)">
             <summary>
             Set stroke rounding. Corners of the font will be rounded off in the stroke so the stroke won't have corners.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetEffectColor(Urho.Color)">
             <summary>
             Set effect color.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetEffectDepthBias(System.Single)">
             <summary>
             Set effect Z bias.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetWidth(System.Int32)">
             <summary>
             Set text width. Only has effect in word wrap mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetColor(Urho.Color)">
             <summary>
             Set color on all corners.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetColor(Urho.Gui.Corner,Urho.Color)">
             <summary>
             Set color on one corner.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetOpacity(System.Single)">
             <summary>
             Set opacity.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetFixedScreenSize(System.Boolean)">
             <summary>
             Set whether text has fixed size on screen (pixel-perfect) regardless of distance to camera. Works best when combined with face camera rotation. Default false.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetFaceCameraMode(Urho.FaceCameraMode)">
             <summary>
             Set how the text should rotate in relation to the camera. Default is to not rotate (FC_NONE).
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetFont">
             <summary>
             Return font.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetFontSize">
             <summary>
             Return font size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetMaterial">
             <summary>
             Return material.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetText">
             <summary>
             Return text.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetTextAlignment">
             <summary>
             Return row alignment.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetHorizontalAlignment">
             <summary>
             Return horizontal alignment.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetVerticalAlignment">
             <summary>
             Return vertical alignment.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetRowSpacing">
             <summary>
             Return row spacing.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetWordwrap">
             <summary>
             Return wordwrap mode.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetTextEffect">
             <summary>
             Return text effect.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetEffectShadowOffset">
             <summary>
             Return effect shadow offset.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetEffectStrokeThickness">
             <summary>
             Return effect stroke thickness.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetEffectRoundStroke">
             <summary>
             Return effect round stroke.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetEffectColor">
             <summary>
             Return effect color.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetEffectDepthBias">
             <summary>
             Return effect depth bias.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetWidth">
             <summary>
             Return text width.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetHeight">
             <summary>
             Return text height.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetRowHeight">
             <summary>
             Return row height.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetNumRows">
             <summary>
             Return number of rows.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetNumChars">
             <summary>
             Return number of characters.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetRowWidth(System.UInt32)">
             <summary>
             Return width of row by index.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetCharPosition(System.UInt32)">
             <summary>
             Return position of character by index relative to the text element origin.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetCharSize(System.UInt32)">
             <summary>
             Return size of character by index.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetColor(Urho.Gui.Corner)">
             <summary>
             Return corner color.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetOpacity">
             <summary>
             Return opacity.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.IsFixedScreenSize">
             <summary>
             Return whether text has fixed screen size.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetFaceCameraMode">
             <summary>
             Return how the text rotates in relation to the camera.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetFontAttr">
             <summary>
             Return font attribute.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetMaterialAttr">
             <summary>
             Return material attribute.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.SetTextAttr(System.String)">
             <summary>
             Set text attribute.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetTextAttr">
             <summary>
             Return text attribute.
             </summary>
            </member>
        <member name="M:Urho.Gui.Text3D.GetColorAttr">
             <summary>
             Get color attribute. Uses just the top-left color.
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.UpdateGeometryType">
             <summary>
             Return whether a geometry update is necessary, and if it can happen in a worker thread.
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.FontSize">
             <summary>
             Return font size.
             
             Or
             Set font size only while retaining the existing font. Return true if successful.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.Material">
             <summary>
             Return material.
             
             Or
             Set material.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.Text">
             <summary>
             Return text.
             
             Or
             Set text. Text is assumed to be either ASCII or UTF8-encoded.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.HorizontalAlignment">
             <summary>
             Return horizontal alignment.
             
             Or
             Set horizontal alignment.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.VerticalAlignment">
             <summary>
             Return vertical alignment.
             
             Or
             Set vertical alignment.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.TextAlignment">
             <summary>
             Return row alignment.
             
             Or
             Set row alignment.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.RowSpacing">
             <summary>
             Return row spacing.
             
             Or
             Set row spacing, 1.0 for original font spacing.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.Wordwrap">
             <summary>
             Return wordwrap mode.
             
             Or
             Set wordwrap. In wordwrap mode the text element will respect its current width. Otherwise it resizes itself freely.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.TextEffect">
             <summary>
             Return text effect.
             
             Or
             Set text effect.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.EffectShadowOffset">
             <summary>
             Return effect shadow offset.
             
             Or
             Set shadow offset.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.EffectStrokeThickness">
             <summary>
             Return effect stroke thickness.
             
             Or
             Set stroke thickness.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.EffectRoundStroke">
             <summary>
             Return effect round stroke.
             
             Or
             Set stroke rounding. Corners of the font will be rounded off in the stroke so the stroke won't have corners.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.EffectColor">
             <summary>
             Return effect color.
             
             Or
             Set effect color.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.EffectDepthBias">
             <summary>
             Return effect depth bias.
             
             Or
             Set effect Z bias.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.Width">
             <summary>
             Return text width.
             
             Or
             Set text width. Only has effect in word wrap mode.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.Opacity">
             <summary>
             Return opacity.
             
             Or
             Set opacity.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.FixedScreenSize">
             <summary>
             Return whether text has fixed screen size.
             
             Or
             Set whether text has fixed size on screen (pixel-perfect) regardless of distance to camera. Works best when combined with face camera rotation. Default false.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.FaceCameraMode">
             <summary>
             Return how the text rotates in relation to the camera.
             
             Or
             Set how the text should rotate in relation to the camera. Default is to not rotate (FC_NONE).
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.Font">
             <summary>
             Return font.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.Height">
             <summary>
             Return text height.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.RowHeight">
             <summary>
             Return row height.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.NumRows">
             <summary>
             Return number of rows.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.NumChars">
             <summary>
             Return number of characters.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.FontAttr">
             <summary>
             Return font attribute.
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.MaterialAttr">
             <summary>
             Return material attribute.
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.TextAttr">
             <summary>
             Return text attribute.
             </summary>
            </member>
        <member name="P:Urho.Gui.Text3D.ColorAttr">
             <summary>
             Get color attribute. Uses just the top-left color.
             </summary>
            </member>
        <member name="T:Urho.Gui.TextEffect">
             <summary>
             Text effect.
             </summary>
            </member>
        <member name="T:Urho.Texture">
             <summary>
             Base class for texture resources.
             </summary>
            </member>
        <member name="M:Urho.Texture.SetNumLevels(System.UInt32)">
             <summary>
             Set number of requested mip levels. Needs to be called before setting size.
             The default value (0) allocates as many mip levels as necessary to reach 1x1 size. Set value 1 to disable mipmapping.
             Note that rendertargets need to regenerate mips dynamically after rendering, which may cost performance. Screen buffers
             and shadow maps allocated by Renderer will have mipmaps disabled.
             </summary>
            </member>
        <member name="M:Urho.Texture.SetFilterMode(Urho.TextureFilterMode)">
             <summary>
             Set filtering mode.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.SetAddressMode(Urho.TextureCoordinate,Urho.TextureAddressMode)">
             <summary>
             Set addressing mode by texture coordinate.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.SetAnisotropy(System.UInt32)">
             <summary>
             Set texture max. anisotropy level. No effect if not using anisotropic filtering. Value 0 (default) uses the default setting from Renderer.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.SetShadowCompare(System.Boolean)">
             <summary>
             Set shadow compare mode. Not used on Direct3D9.
             </summary>
            </member>
        <member name="M:Urho.Texture.SetBorderColor(Urho.Color)">
             <summary>
             Set border color for border addressing mode.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.SetSRGB(System.Boolean)">
             <summary>
             Set sRGB sampling and writing mode.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.SetBackupTexture(Urho.Texture)">
             <summary>
             Set backup texture to use when rendering to this texture.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.SetMipsToSkip(Urho.MaterialQuality,System.Int32)">
             <summary>
             Set mip levels to skip on a quality setting when loading. Ensures higher quality levels do not skip more.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetFormat">
             <summary>
             Return API-specific texture format.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.IsCompressed">
             <summary>
             Return whether the texture format is compressed.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetLevels">
             <summary>
             Return number of mip levels.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetWidth">
             <summary>
             Return width.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetHeight">
             <summary>
             Return height.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetDepth">
             <summary>
             Return depth.
             </summary>
            </member>
        <member name="M:Urho.Texture.GetFilterMode">
             <summary>
             Return filtering mode.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetAddressMode(Urho.TextureCoordinate)">
             <summary>
             Return addressing mode by texture coordinate.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetAnisotropy">
             <summary>
             Return texture max. anisotropy level. Value 0 means to use the default value from Renderer.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetShadowCompare">
             <summary>
             Return whether shadow compare is enabled. Not used on Direct3D9.
             </summary>
            </member>
        <member name="M:Urho.Texture.GetBorderColor">
             <summary>
             Return border color.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetSRGB">
             <summary>
             Return whether is using sRGB sampling and writing.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetMultiSample">
             <summary>
             Return texture multisampling level (1 = no multisampling).
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetAutoResolve">
             <summary>
             Return texture multisampling autoresolve mode. When true, the texture is resolved before being sampled on SetTexture(). When false, the texture will not be resolved and must be read as individual samples in the shader.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.IsResolveDirty">
             <summary>
             Return whether multisampled texture needs resolve.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetLevelsDirty">
             <summary>
             Return whether rendertarget mipmap levels need regenration.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetBackupTexture">
             <summary>
             Return backup texture.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetMipsToSkip(Urho.MaterialQuality)">
             <summary>
             Return mip levels to skip on a quality setting when loading.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetLevelWidth(System.UInt32)">
             <summary>
             Return mip level width, or 0 if level does not exist.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetLevelHeight(System.UInt32)">
             <summary>
             Return mip level width, or 0 if level does not exist.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetLevelDepth(System.UInt32)">
             <summary>
             Return mip level depth, or 0 if level does not exist.
             </summary>
            </member>
        <member name="M:Urho.Texture.GetUsage">
             <summary>
             Return texture usage type.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetDataSize(System.Int32,System.Int32)">
             <summary>
             Return data size in bytes for a rectangular region.
             </summary>
            </member>
        <member name="M:Urho.Texture.GetDataSize(System.Int32,System.Int32,System.Int32)">
             <summary>
             Return data size in bytes for a volume region.
             </summary>
            </member>
        <member name="M:Urho.Texture.GetRowDataSize(System.Int32)">
             <summary>
             Return data size in bytes for a pixel or block row.
             </summary>
            </member>
        <member name="M:Urho.Texture.GetComponents">
             <summary>
             Return number of image components required to receive pixel data from GetData(), or 0 for compressed images.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.GetParametersDirty">
             <summary>
             Return whether the parameters are dirty.
             </summary>
            </member>
        <member name="M:Urho.Texture.SetParameters(Urho.Resources.XmlFile)">
             <summary>
             Set additional parameters from an XML file.
             </summary>
            </member>
        <member name="M:Urho.Texture.SetParameters(Urho.Resources.XmlElement)">
             <summary>
             Set additional parameters from an XML element.
             </summary>
            </member>
        <member name="M:Urho.Texture.SetParametersDirty">
             <summary>
             Mark parameters dirty. Called by Graphics.
             </summary>
            </member>
        <member name="M:Urho.Texture.UpdateParameters">
             <summary>
             Update dirty parameters to the texture object. Called by Graphics when assigning the texture.
             </summary>
            </member>
        <member name="M:Urho.Texture.GetShaderResourceView">
             <summary>
             Return shader resource view. Only used on Direct3D11.
             </summary>
            </member>
        <member name="M:Urho.Texture.GetSampler">
             <summary>
             Return sampler state object. Only used on Direct3D11.
             </summary>
            </member>
        <member name="M:Urho.Texture.GetResolveTexture">
             <summary>
             Return resolve texture. Only used on Direct3D11.
             </summary>
            </member>
        <member name="M:Urho.Texture.GetSRGBFormat(System.UInt32)">
             <summary>
             Convert format to sRGB. Not used on Direct3D9.
             
             </summary>
            </member>
        <member name="M:Urho.Texture.SetResolveDirty(System.Boolean)">
             <summary>
             Set or clear the need resolve flag. Called internally by Graphics.
             </summary>
            </member>
        <member name="M:Urho.Texture.SetLevelsDirty">
             <summary>
             Set the mipmap levels dirty flag. Called internally by Graphics.
             </summary>
            </member>
        <member name="M:Urho.Texture.RegenerateLevels">
             <summary>
             Regenerate mipmap levels for a rendertarget after rendering and before sampling. Called internally by Graphics. No-op on Direct3D9. On OpenGL the texture must have been bound to work properly.
             </summary>
            </member>
        <member name="M:Urho.Texture.CheckMaxLevels(System.Int32,System.Int32,System.UInt32)">
             <summary>
             Check maximum allowed mip levels for a specific texture size.
             </summary>
            </member>
        <member name="M:Urho.Texture.CheckMaxLevels(System.Int32,System.Int32,System.Int32,System.UInt32)">
             <summary>
             Check maximum allowed mip levels for a specific 3D texture size.
             </summary>
            </member>
        <member name="P:Urho.Texture.FilterMode">
             <summary>
             Return filtering mode.
             
             Or
             Set filtering mode.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.Anisotropy">
             <summary>
             Return texture max. anisotropy level. Value 0 means to use the default value from Renderer.
             
             Or
             Set texture max. anisotropy level. No effect if not using anisotropic filtering. Value 0 (default) uses the default setting from Renderer.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.ShadowCompare">
             <summary>
             Return whether shadow compare is enabled. Not used on Direct3D9.
             Or
             Set shadow compare mode. Not used on Direct3D9.
             </summary>
            </member>
        <member name="P:Urho.Texture.BorderColor">
             <summary>
             Return border color.
             
             Or
             Set border color for border addressing mode.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.SRGB">
             <summary>
             Return whether is using sRGB sampling and writing.
             
             Or
             Set sRGB sampling and writing mode.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.BackupTexture">
             <summary>
             Return backup texture.
             
             Or
             Set backup texture to use when rendering to this texture.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.Format">
             <summary>
             Return API-specific texture format.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.Compressed">
             <summary>
             Return whether the texture format is compressed.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.Levels">
             <summary>
             Return number of mip levels.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.Width">
             <summary>
             Return width.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.Height">
             <summary>
             Return height.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.Depth">
             <summary>
             Return depth.
             </summary>
            </member>
        <member name="P:Urho.Texture.MultiSample">
             <summary>
             Return texture multisampling level (1 = no multisampling).
             
             </summary>
            </member>
        <member name="P:Urho.Texture.AutoResolve">
             <summary>
             Return texture multisampling autoresolve mode. When true, the texture is resolved before being sampled on SetTexture(). When false, the texture will not be resolved and must be read as individual samples in the shader.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.ResolveDirty">
             <summary>
             Return whether multisampled texture needs resolve.
             
             Or
             Set or clear the need resolve flag. Called internally by Graphics.
             </summary>
            </member>
        <member name="P:Urho.Texture.LevelsDirty">
             <summary>
             Return whether rendertarget mipmap levels need regenration.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.Usage">
             <summary>
             Return texture usage type.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.Components">
             <summary>
             Return number of image components required to receive pixel data from GetData(), or 0 for compressed images.
             
             </summary>
            </member>
        <member name="P:Urho.Texture.ParametersDirty">
             <summary>
             Return whether the parameters are dirty.
             </summary>
            </member>
        <member name="P:Urho.Texture.ShaderResourceView">
             <summary>
             Return shader resource view. Only used on Direct3D11.
             </summary>
            </member>
        <member name="P:Urho.Texture.Sampler">
             <summary>
             Return sampler state object. Only used on Direct3D11.
             </summary>
            </member>
        <member name="P:Urho.Texture.ResolveTexture">
             <summary>
             Return resolve texture. Only used on Direct3D11.
             </summary>
            </member>
        <member name="T:Urho.Texture2DArray">
             <summary>
             2D texture array resource.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.OnDeviceLost">
             <summary>
             Mark the GPU resource destroyed on context destruction.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.OnDeviceReset">
             <summary>
             Recreate the GPU resource and restore data if applicable.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.Release">
             <summary>
             Release the texture.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.SetLayers(System.UInt32)">
             <summary>
             Set the number of layers in the texture. To be used before SetData.
             
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.SetSize(System.UInt32,System.Int32,System.Int32,System.UInt32,Urho.TextureUsage)">
             <summary>
             Set layers, size, format and usage. Set layers to zero to leave them unchanged. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.SetData(System.UInt32,System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Void*)">
             <summary>
             Set data either partially or fully on a layer's mip level. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.SetData(System.UInt32,Urho.IO.File)">
             <summary>
             Set data of one layer from a stream. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.SetData(System.UInt32,Urho.MemoryBuffer)">
             <summary>
             Set data of one layer from a stream. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.SetData(System.UInt32,Urho.Resources.Image,System.Boolean)">
             <summary>
             Set data of one layer from an image. Return true if successful. Optionally make a single channel image alpha-only.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.GetLayers">
             <summary>
             Return number of layers in the texture.
             
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.GetData(System.UInt32,System.UInt32,System.IntPtr)">
             <summary>
             Get data from a mip level. The destination buffer must be big enough. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture2DArray.GetRenderSurface">
             <summary>
             Return render surface.
             
             </summary>
            </member>
        <member name="P:Urho.Texture2DArray.Layers">
             <summary>
             Return number of layers in the texture.
             
             Or
             Set the number of layers in the texture. To be used before SetData.
             
             </summary>
            </member>
        <member name="P:Urho.Texture2DArray.RenderSurface">
             <summary>
             Return render surface.
             
             </summary>
            </member>
        <member name="T:Urho.Texture3D">
             <summary>
             3D texture resource.
             </summary>
            </member>
        <member name="M:Urho.Texture3D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Texture3D.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture3D.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture3D.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture3D.Release">
             <summary>
             Release the texture.
             </summary>
            </member>
        <member name="M:Urho.Texture3D.SetSize(System.Int32,System.Int32,System.Int32,System.UInt32,Urho.TextureUsage)">
             <summary>
             Set size, format and usage. Zero size will follow application window size. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture3D.SetData(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Void*)">
             <summary>
             Set data either partially or fully on a mip level. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Texture3D.SetData(Urho.Resources.Image,System.Boolean)">
             <summary>
             Set data from an image. Return true if successful. Optionally make a single channel image alpha-only.
             </summary>
            </member>
        <member name="M:Urho.Texture3D.GetData(System.UInt32,System.IntPtr)">
             <summary>
             Get data from a mip level. The destination buffer must be big enough. Return true if successful.
             </summary>
            </member>
        <member name="T:Urho.TextureAddressMode">
             <summary>
             Texture addressing mode.
             </summary>
            </member>
        <member name="T:Urho.TextureCoordinate">
             <summary>
             Texture coordinates.
             </summary>
            </member>
        <member name="T:Urho.TextureCube">
             <summary>
             Cube texture resource.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.TextureCube.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.Release">
             <summary>
             Release the texture.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.SetSize(System.Int32,System.UInt32,Urho.TextureUsage,System.Int32)">
             <summary>
             Set size, format, usage and multisampling parameter for rendertargets. Note that cube textures always use autoresolve when multisampled due to lacking support (on all APIs) to multisample them in a shader. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.SetData(Urho.CubeMapFace,System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Void*)">
             <summary>
             Set data either partially or fully on a face's mip level. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.SetData(Urho.CubeMapFace,Urho.IO.File)">
             <summary>
             Set data of one face from a stream. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.SetData(Urho.CubeMapFace,Urho.MemoryBuffer)">
             <summary>
             Set data of one face from a stream. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.SetData(Urho.CubeMapFace,Urho.Resources.Image,System.Boolean)">
             <summary>
             Set data of one face from an image. Return true if successful. Optionally make a single channel image alpha-only.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.GetData(Urho.CubeMapFace,System.UInt32,System.IntPtr)">
             <summary>
             Get data from a face's mip level. The destination buffer must be big enough. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.GetImage(Urho.CubeMapFace)">
             <summary>
             Get image data from a face's zero mip level. Only RGB and RGBA textures are supported.
             </summary>
            </member>
        <member name="M:Urho.TextureCube.GetRenderSurface(Urho.CubeMapFace)">
             <summary>
             Return render surface for one face.
             
             </summary>
            </member>
        <member name="T:Urho.TextureFilterMode">
             <summary>
             Texture filtering mode.
             </summary>
            </member>
        <member name="T:Urho.TextureUnit">
             <summary>
             Texture units.
             </summary>
            </member>
        <member name="T:Urho.TextureUsage">
             <summary>
             Texture usage types.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.Tile2D">
             <summary>
             Tile define.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Tile2D.GetGid">
             <summary>
             Return gid.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Tile2D.GetFlipX">
             <summary>
             Return flip X.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Tile2D.GetFlipY">
             <summary>
             Return flip Y.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Tile2D.GetSwapXY">
             <summary>
             Return swap X and Y.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Tile2D.GetSprite">
             <summary>
             Return sprite.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Tile2D.HasProperty(System.String)">
             <summary>
             Return has property.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.Tile2D.GetProperty(System.String)">
             <summary>
             Return property.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Tile2D.Gid">
             <summary>
             Return gid.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Tile2D.FlipX">
             <summary>
             Return flip X.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Tile2D.FlipY">
             <summary>
             Return flip Y.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Tile2D.SwapXY">
             <summary>
             Return swap X and Y.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.Tile2D.Sprite">
             <summary>
             Return sprite.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.TileMap2D">
             <summary>
             Tile map component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMap2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMap2D.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMap2D.SetTmxFile(Urho.Urho2D.TmxFile2D)">
             <summary>
             Set tmx file.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMap2D.DrawDebugGeometry">
             <summary>
             Add debug geometry to the debug renderer.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMap2D.GetTmxFile">
             <summary>
             Return tmx file.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMap2D.GetInfo">
             <summary>
             Return information.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMap2D.GetNumLayers">
             <summary>
             Return number of layers.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMap2D.GetLayer(System.UInt32)">
             <summary>
             Return tile map layer at index.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMap2D.TileIndexToPosition(System.Int32,System.Int32)">
             <summary>
             Convert tile index to position.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMap2D.PositionToTileIndex(System.Int32@,System.Int32@,Urho.Vector2)">
             <summary>
             Convert position to tile index, if out of map return false.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMap2D.GetTmxFileAttr">
             <summary>
             Return tile map file attribute.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMap2D.TmxFile">
             <summary>
             Return tmx file.
             
             Or
             Set tmx file.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMap2D.Info">
             <summary>
             Return information.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMap2D.NumLayers">
             <summary>
             Return number of layers.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMap2D.TmxFileAttr">
             <summary>
             Return tile map file attribute.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.TileMapLayer2D">
             <summary>
             Tile map component.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Add debug geometry to the debug renderer.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.Initialize(Urho.Urho2D.TileMap2D,Urho.Urho2D.TmxLayer2D)">
             <summary>
             Initialize with tile map and tmx layer.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.SetDrawOrder(System.Int32)">
             <summary>
             Set draw order.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.SetVisible(System.Boolean)">
             <summary>
             Set visible.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetTileMap">
             <summary>
             Return tile map.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetTmxLayer">
             <summary>
             Return tmx layer.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetDrawOrder">
             <summary>
             Return draw order.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.IsVisible">
             <summary>
             Return visible.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.HasProperty(System.String)">
             <summary>
             Return has property.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetProperty(System.String)">
             <summary>
             Return property.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetLayerType">
             <summary>
             Return layer type.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetWidth">
             <summary>
             Return width (for tile layer only).
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetHeight">
             <summary>
             Return height (for tile layer only).
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetTileNode(System.Int32,System.Int32)">
             <summary>
             Return tile node (for tile layer only).
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetTile(System.Int32,System.Int32)">
             <summary>
             Return tile (for tile layer only).
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetNumObjects">
             <summary>
             Return number of tile map objects (for object group only).
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetObject(System.UInt32)">
             <summary>
             Return tile map object (for object group only).
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetObjectNode(System.UInt32)">
             <summary>
             Return object node (for object group only).
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapLayer2D.GetImageNode">
             <summary>
             Return image node (for image layer only).
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapLayer2D.DrawOrder">
             <summary>
             Return draw order.
             
             Or
             Set draw order.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapLayer2D.Visible">
             <summary>
             Return visible.
             
             Or
             Set visible.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapLayer2D.TileMap">
             <summary>
             Return tile map.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapLayer2D.TmxLayer">
             <summary>
             Return tmx layer.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapLayer2D.LayerType">
             <summary>
             Return layer type.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapLayer2D.Width">
             <summary>
             Return width (for tile layer only).
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapLayer2D.Height">
             <summary>
             Return height (for tile layer only).
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapLayer2D.NumObjects">
             <summary>
             Return number of tile map objects (for object group only).
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapLayer2D.ImageNode">
             <summary>
             Return image node (for image layer only).
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.TileMapLayerType2D">
             <summary>
             Tile map layer type.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.TileMapObject2D">
             <summary>
             Tile map object.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetObjectType">
             <summary>
             Return type.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetName">
             <summary>
             Return name.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.UrhoGetType">
             <summary>
             Return type.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetPosition">
             <summary>
             Return position.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetSize">
             <summary>
             Return size (for rectangle and ellipse).
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetNumPoints">
             <summary>
             Return number of points (use for script).
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetPoint(System.UInt32)">
             <summary>
             Return point at index (use for script).
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetTileGid">
             <summary>
             Return tile Gid.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetTileFlipX">
             <summary>
             Return tile flip X.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetTileFlipY">
             <summary>
             Return tile flip Y.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetTileSwapXY">
             <summary>
             Return tile swap X and Y.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetTileSprite">
             <summary>
             Return tile sprite.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.HasProperty(System.String)">
             <summary>
             Return has property.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TileMapObject2D.GetProperty(System.String)">
             <summary>
             Return property value.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapObject2D.ObjectType">
             <summary>
             Return type.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapObject2D.Name">
             <summary>
             Return name.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapObject2D.Type">
             <summary>
             Return type.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapObject2D.Position">
             <summary>
             Return position.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapObject2D.Size">
             <summary>
             Return size (for rectangle and ellipse).
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapObject2D.NumPoints">
             <summary>
             Return number of points (use for script).
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapObject2D.TileGid">
             <summary>
             Return tile Gid.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapObject2D.TileFlipX">
             <summary>
             Return tile flip X.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapObject2D.TileFlipY">
             <summary>
             Return tile flip Y.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapObject2D.TileSwapXY">
             <summary>
             Return tile swap X and Y.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TileMapObject2D.TileSprite">
             <summary>
             Return tile sprite.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.TileMapObjectType2D">
             <summary>
             Tile map object type.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.TmxFile2D">
             <summary>
             Tile map file.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.EndLoad">
             <summary>
             Finish resource loading. Always called from the main thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.SetInfo(Urho.Urho2D.Orientation2D,System.Int32,System.Int32,System.Single,System.Single)">
             <summary>
             Set Tilemap information.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.AddLayer(System.UInt32,Urho.Urho2D.TmxLayer2D)">
             <summary>
             Add layer at index, if index &gt; number of layers then append to end.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.GetInfo">
             <summary>
             Return Tilemap information.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.GetTileSprite(System.UInt32)">
             <summary>
             Return tile sprite by gid, if not exist return 0.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.GetTilePropertySet(System.UInt32)">
             <summary>
             Return tile property set by gid, if not exist return 0.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.GetNumLayers">
             <summary>
             Return number of layers.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.GetLayer(System.UInt32)">
             <summary>
             Return layer at index.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.SetSpriteTextureEdgeOffset(System.Single)">
             <summary>
             Set texture edge offset for all sprites, in pixels.
             
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxFile2D.GetSpriteTextureEdgeOffset">
             <summary>
             Return texture edge offset, in pixels.
             
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxFile2D.Info">
             <summary>
             Return Tilemap information.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxFile2D.NumLayers">
             <summary>
             Return number of layers.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxFile2D.SpriteTextureEdgeOffset">
             <summary>
             Return texture edge offset, in pixels.
             
             Or
             Set texture edge offset for all sprites, in pixels.
             
             </summary>
            </member>
        <member name="T:Urho.Urho2D.TmxImageLayer2D">
             <summary>
             Tmx image layer.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxImageLayer2D.Load(Urho.Resources.XmlElement,Urho.Urho2D.TileMapInfo2D)">
             <summary>
             Load from XML element.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxImageLayer2D.GetPosition">
             <summary>
             Return position.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxImageLayer2D.GetSource">
             <summary>
             Return source.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxImageLayer2D.GetSprite">
             <summary>
             Return sprite.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxImageLayer2D.Position">
             <summary>
             Return position.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxImageLayer2D.Source">
             <summary>
             Return source.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxImageLayer2D.Sprite">
             <summary>
             Return sprite.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.TmxLayer2D">
             <summary>
             Tmx layer.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxLayer2D.GetTmxFile">
             <summary>
             Return tmx file.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxLayer2D.UrhoGetType">
             <summary>
             Return type.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxLayer2D.GetName">
             <summary>
             Return name.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxLayer2D.GetWidth">
             <summary>
             Return width.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxLayer2D.GetHeight">
             <summary>
             Return height.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxLayer2D.IsVisible">
             <summary>
             Return is visible.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxLayer2D.HasProperty(System.String)">
             <summary>
             Return has property (use for script).
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxLayer2D.GetProperty(System.String)">
             <summary>
             Return property value (use for script).
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxLayer2D.TmxFile">
             <summary>
             Return tmx file.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxLayer2D.Type">
             <summary>
             Return type.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxLayer2D.Name">
             <summary>
             Return name.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxLayer2D.Width">
             <summary>
             Return width.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxLayer2D.Height">
             <summary>
             Return height.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxLayer2D.Visible">
             <summary>
             Return is visible.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.TmxObjectGroup2D">
             <summary>
             Tmx objects layer.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxObjectGroup2D.Load(Urho.Resources.XmlElement,Urho.Urho2D.TileMapInfo2D)">
             <summary>
             Load from XML element.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxObjectGroup2D.GetNumObjects">
             <summary>
             Return number of objects.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxObjectGroup2D.GetObject(System.UInt32)">
             <summary>
             Return tile map object at index.
             </summary>
            </member>
        <member name="P:Urho.Urho2D.TmxObjectGroup2D.NumObjects">
             <summary>
             Return number of objects.
             </summary>
            </member>
        <member name="T:Urho.Urho2D.TmxTileLayer2D">
             <summary>
             Tmx tile layer.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxTileLayer2D.Load(Urho.Resources.XmlElement,Urho.Urho2D.TileMapInfo2D)">
             <summary>
             Load from XML element.
             </summary>
            </member>
        <member name="M:Urho.Urho2D.TmxTileLayer2D.GetTile(System.Int32,System.Int32)">
             <summary>
             Return tile.
             </summary>
            </member>
        <member name="T:Urho.Gui.ToolTip">
             <summary>
             Tooltip %UI element.
             </summary>
            </member>
        <member name="M:Urho.Gui.ToolTip.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ToolTip.Update(System.Single)">
             <summary>
             Perform UI element update.
             </summary>
            </member>
        <member name="M:Urho.Gui.ToolTip.Reset">
             <summary>
             Hide tooltip if visible and reset parentage.
             </summary>
            </member>
        <member name="M:Urho.Gui.ToolTip.AddAltTarget(Urho.Gui.UIElement)">
             <summary>
             Add an alternative hover target.
             </summary>
            </member>
        <member name="M:Urho.Gui.ToolTip.SetDelay(System.Single)">
             <summary>
             Set the delay in seconds until the tooltip shows once hovering. Set zero to use the default from the UI subsystem.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.ToolTip.GetDelay">
             <summary>
             Return the delay in seconds until the tooltip shows once hovering.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.ToolTip.Delay">
             <summary>
             Return the delay in seconds until the tooltip shows once hovering.
             
             Or
             Set the delay in seconds until the tooltip shows once hovering. Set zero to use the default from the UI subsystem.
             
             </summary>
            </member>
        <member name="T:Urho.TransformSpace">
             <summary>
             Transform space for translations and rotations.
             </summary>
            </member>
        <member name="T:Urho.Gui.TraversalMode">
             <summary>
             Traversal mode for rendering.
             </summary>
            </member>
        <member name="T:Urho.TriangleMeshData">
             <summary>
             Triangle mesh geometry data.
             </summary>
            </member>
        <member name="T:Urho.Gui.UIBatch">
             <summary>
             %UI rendering draw call.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIBatch.SetColor(Urho.Color,System.Boolean)">
             <summary>
             Set new color for the batch. Overrides gradient.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIBatch.SetDefaultColor">
             <summary>
             Restore UI element's default color.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIBatch.AddQuad(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             Add a quad.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIBatch.AddQuad(Urho.Matrix3x4,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             Add a quad using a transform matrix.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIBatch.AddQuad(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
             <summary>
             Add a quad with tiled texture.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIBatch.AddQuad(Urho.Matrix3x4,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2)">
             <summary>
             Add a quad with freeform points and UVs. Uses the current color, not gradient. Points should be specified in clockwise order.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIBatch.AddQuad(Urho.Matrix3x4,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,Urho.IntVector2,Urho.Color,Urho.Color,Urho.Color,Urho.Color)">
             <summary>
             Add a quad with freeform points, UVs and colors. Points should be specified in clockwise order.
             </summary>
            </member>
        <member name="M:Urho.Gui.UIBatch.GetInterpolatedColor(System.Single,System.Single)">
             <summary>
             Return an interpolated color for the UI element.
             </summary>
            </member>
        <member name="T:Urho.UIComponent">
             <summary>
             Construct.
             </summary>
            </member>
        <member name="M:Urho.UIComponent.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.UIComponent.GetRoot">
             <summary>
             Return UIElement.
             
             </summary>
            </member>
        <member name="M:Urho.UIComponent.GetMaterial">
             <summary>
             Return material which will be used for rendering UI texture.
             
             </summary>
            </member>
        <member name="M:Urho.UIComponent.GetTexture">
             <summary>
             Return texture which will be used for rendering UI to.
             
             </summary>
            </member>
        <member name="M:Urho.UIComponent.SetViewportIndex(System.UInt32)">
             <summary>
             Set index of viewport to be used for screen coordinate translation.
             </summary>
            </member>
        <member name="P:Urho.UIComponent.Root">
             <summary>
             Return UIElement.
             
             </summary>
            </member>
        <member name="P:Urho.UIComponent.Material">
             <summary>
             Return material which will be used for rendering UI texture.
             
             </summary>
            </member>
        <member name="P:Urho.UIComponent.Texture">
             <summary>
             Return texture which will be used for rendering UI to.
             
             </summary>
            </member>
        <member name="T:Urho.UISelectable">
             <summary>
             Construct.
             </summary>
            </member>
        <member name="M:Urho.UISelectable.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.UISelectable.SetSelectionColor(Urho.Color)">
             <summary>
             Set selection background color. Color with 0 alpha (default) disables.
             
             </summary>
            </member>
        <member name="M:Urho.UISelectable.SetHoverColor(Urho.Color)">
             <summary>
             Set hover background color. Color with 0 alpha (default) disables.
             
             </summary>
            </member>
        <member name="M:Urho.UISelectable.GetSelectionColor">
             <summary>
             Return selection background color.
             
             </summary>
            </member>
        <member name="M:Urho.UISelectable.GetHoverColor">
             <summary>
             Return hover background color.
             
             </summary>
            </member>
        <member name="P:Urho.UISelectable.SelectionColor">
             <summary>
             Return selection background color.
             
             Or
             Set selection background color. Color with 0 alpha (default) disables.
             
             </summary>
            </member>
        <member name="P:Urho.UISelectable.HoverColor">
             <summary>
             Return hover background color.
             
             Or
             Set hover background color. Color with 0 alpha (default) disables.
             
             </summary>
            </member>
        <member name="T:Urho.UnknownComponent">
             <summary>
             Placeholder for allowing unregistered components to be loaded
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.UrhoGetType">
             <summary>
             Return type of the stored component.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.GetTypeName">
             <summary>
             Return type name of the stored component.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.Load(Urho.IO.File)">
             <summary>
             Load from binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.Load(Urho.MemoryBuffer)">
             <summary>
             Load from binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.LoadXml(Urho.Resources.XmlElement)">
             <summary>
             Load from XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.Save(Urho.IO.File)">
             <summary>
             Save as binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.Save(Urho.MemoryBuffer)">
             <summary>
             Save as binary data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.SaveXml(Urho.Resources.XmlElement)">
             <summary>
             Save as XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.SetTypeName(System.String)">
             <summary>
             Initialize the type name. Called by Node when loading.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.SetType(Urho.StringHash)">
             <summary>
             Initialize the type hash only when type name not known. Called by Node when loading.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.GetUseXml">
             <summary>
             Return whether was loaded using XML data.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.GetTypeStatic">
             <summary>
             Return static type.
             </summary>
            </member>
        <member name="M:Urho.UnknownComponent.GetTypeNameStatic">
             <summary>
             Return static type name.
             </summary>
            </member>
        <member name="P:Urho.UnknownComponent.Type">
             <summary>
             Return type of the stored component.
             </summary>
            </member>
        <member name="P:Urho.UnknownComponent.TypeName">
             <summary>
             Return type name of the stored component.
             </summary>
            </member>
        <member name="P:Urho.UnknownComponent.UseXML">
             <summary>
             Return whether was loaded using XML data.
             </summary>
            </member>
        <member name="P:Urho.UnknownComponent.TypeStatic">
             <summary>
             Return static type.
             </summary>
            </member>
        <member name="P:Urho.UnknownComponent.TypeNameStatic">
             <summary>
             Return static type name.
             </summary>
            </member>
        <member name="T:Urho.UpdateEvent">
             <summary>
             Bitmask for not using any events.
             </summary>
            </member>
        <member name="T:Urho.UpdateGeometryType">
             <summary>
             Geometry update type.
             </summary>
            </member>
        <member name="T:Urho.VGCanvas">
             <summary>
             Construct.
             </summary>
            </member>
        <member name="M:Urho.VGCanvas.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="T:Urho.VGTextRow">
             <summary>
             Destruct.
             </summary>
            </member>
        <member name="T:Urho.ValueAnimation">
             <summary>
             Value animation class.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.Save(Urho.IO.File)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.Save(Urho.MemoryBuffer)">
             <summary>
             Save resource. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.LoadXml(Urho.Resources.XmlElement)">
             <summary>
             Load from XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SaveXml(Urho.Resources.XmlElement)">
             <summary>
             Save as XML data. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetOwner(System.IntPtr)">
             <summary>
             Set owner.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetInterpolationMethod(Urho.InterpMethod)">
             <summary>
             Set interpolation method.
             
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetSplineTension(System.Single)">
             <summary>
             Set spline tension, should be between 0.0f and 1.0f, but this is not a must.
             
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetValueType(Urho.VariantType)">
             <summary>
             Set value type.
             
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,Urho.Vector3)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,Urho.IntRect)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,Urho.Color)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,Urho.Vector2)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,Urho.Vector4)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,Urho.IntVector2)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,Urho.Quaternion)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,Urho.Matrix4)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,Urho.Matrix3)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,Urho.Matrix3x4)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,System.Int32)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,System.Single)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,System.String)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.SetKeyFrame(System.Single,System.Boolean)">
             <summary>
             Set key frame.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.IsValid">
             <summary>
             Return animation is valid.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.GetOwner">
             <summary>
             Return owner.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.GetInterpolationMethod">
             <summary>
             Return interpolation method.
             
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.GetSplineTension">
             <summary>
             Return spline tension.
             
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.GetValueType">
             <summary>
             Return value type.
             
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.GetBeginTime">
             <summary>
             Return begin time.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.GetEndTime">
             <summary>
             Return end time.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.GetAnimationValue(System.Single)">
             <summary>
             Return animation value.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimation.HasEventFrames">
             <summary>
             Has event frames.
             </summary>
            </member>
        <member name="P:Urho.ValueAnimation.Owner">
             <summary>
             Return owner.
             Or
             Set owner.
             </summary>
            </member>
        <member name="P:Urho.ValueAnimation.InterpolationMethod">
             <summary>
             Return interpolation method.
             
             Or
             Set interpolation method.
             
             </summary>
            </member>
        <member name="P:Urho.ValueAnimation.SplineTension">
             <summary>
             Return spline tension.
             
             Or
             Set spline tension, should be between 0.0f and 1.0f, but this is not a must.
             
             </summary>
            </member>
        <member name="P:Urho.ValueAnimation.ValueType">
             <summary>
             Return value type.
             
             Or
             Set value type.
             
             </summary>
            </member>
        <member name="P:Urho.ValueAnimation.Valid">
             <summary>
             Return animation is valid.
             </summary>
            </member>
        <member name="P:Urho.ValueAnimation.BeginTime">
             <summary>
             Return begin time.
             </summary>
            </member>
        <member name="P:Urho.ValueAnimation.EndTime">
             <summary>
             Return end time.
             </summary>
            </member>
        <member name="T:Urho.ValueAnimationInfo">
             <summary>
             Base class for a value animation instance, which includes animation runtime information and updates the target object's value automatically.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimationInfo.Update(System.Single)">
             <summary>
             Advance time position and apply. Return true when the animation is finished. No-op when the target object is not defined.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimationInfo.SetTime(System.Single)">
             <summary>
             Set time position and apply. Return true when the animation is finished. No-op when the target object is not defined.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimationInfo.SetWrapMode(Urho.WrapMode)">
             <summary>
             Set wrap mode.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimationInfo.SetSpeed(System.Single)">
             <summary>
             Set speed.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimationInfo.GetTarget">
             <summary>
             Return target object.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimationInfo.GetAnimation">
             <summary>
             Return animation.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimationInfo.GetWrapMode">
             <summary>
             Return wrap mode.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimationInfo.GetTime">
             <summary>
             Return time position.
             </summary>
            </member>
        <member name="M:Urho.ValueAnimationInfo.GetSpeed">
             <summary>
             Return speed.
             </summary>
            </member>
        <member name="P:Urho.ValueAnimationInfo.Time">
             <summary>
             Return time position.
             Or
             Set time position and apply. Return true when the animation is finished. No-op when the target object is not defined.
             </summary>
            </member>
        <member name="P:Urho.ValueAnimationInfo.WrapMode">
             <summary>
             Return wrap mode.
             Or
             Set wrap mode.
             </summary>
            </member>
        <member name="P:Urho.ValueAnimationInfo.Speed">
             <summary>
             Return speed.
             Or
             Set speed.
             </summary>
            </member>
        <member name="P:Urho.ValueAnimationInfo.Target">
             <summary>
             Return target object.
             </summary>
            </member>
        <member name="P:Urho.ValueAnimationInfo.Animation">
             <summary>
             Return animation.
             </summary>
            </member>
        <member name="T:Urho.VariantType">
             <summary>
             Variant's supported types.
             </summary>
            </member>
        <member name="T:Urho.VectorGraphics">
             <summary>
             Initialize when screen mode initially set.
             </summary>
            </member>
        <member name="M:Urho.VectorGraphics.Initialize">
             <summary>
             Initialize when screen mode initially set.
             </summary>
            </member>
        <member name="T:Urho.VertexElementSemantic">
             <summary>
             Arbitrary vertex declaration element semantics.
             </summary>
            </member>
        <member name="T:Urho.VertexElementType">
             <summary>
             Arbitrary vertex declaration element datatypes.
             </summary>
            </member>
        <member name="T:Urho.VertexLightVSVariation">
             <summary>
             Per-vertex light vertex shader variations.
             </summary>
            </member>
        <member name="T:Urho.Gui.VerticalAlignment">
             <summary>
             %UI element vertical alignment.
             </summary>
            </member>
        <member name="T:Urho.Gui.View3D">
             <summary>
             %UI element which renders a 3D scene.
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.OnResize(Urho.IntVector2,Urho.IntVector2)">
             <summary>
             React to resize.
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.SetView(Urho.Scene,Urho.Camera,System.Boolean)">
             <summary>
             Define the scene and camera to use in rendering. When ownScene is true the View3D will take ownership of them with shared pointers.
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.SetFormat(System.UInt32)">
             <summary>
             Set render texture pixel format. Default is RGB.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.SetAutoUpdate(System.Boolean)">
             <summary>
             Set render target auto update mode. Default is true.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.QueueUpdate">
             <summary>
             Queue manual update on the render texture.
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.GetFormat">
             <summary>
             Return render texture pixel format.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.GetAutoUpdate">
             <summary>
             Return whether render target updates automatically.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.GetScene">
             <summary>
             Return scene.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.GetCameraNode">
             <summary>
             Return camera scene node.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.GetRenderTexture">
             <summary>
             Return render texture.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.GetDepthTexture">
             <summary>
             Return depth stencil texture.
             
             </summary>
            </member>
        <member name="M:Urho.Gui.View3D.GetViewport">
             <summary>
             Return viewport.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.View3D.Format">
             <summary>
             Return render texture pixel format.
             
             Or
             Set render texture pixel format. Default is RGB.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.View3D.AutoUpdate">
             <summary>
             Return whether render target updates automatically.
             
             Or
             Set render target auto update mode. Default is true.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.View3D.Scene">
             <summary>
             Return scene.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.View3D.CameraNode">
             <summary>
             Return camera scene node.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.View3D.RenderTexture">
             <summary>
             Return render texture.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.View3D.DepthTexture">
             <summary>
             Return depth stencil texture.
             
             </summary>
            </member>
        <member name="P:Urho.Gui.View3D.Viewport">
             <summary>
             Return viewport.
             
             </summary>
            </member>
        <member name="T:Urho.Gui.WindowDragMode">
             <summary>
             %Window movement and resizing modes.
             </summary>
            </member>
        <member name="T:Urho.WrapMode">
             <summary>
             Animation wrap mode.
             </summary>
            </member>
        <member name="T:Urho.Resources.XmlFile">
             <summary>
             XML document resource.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.RegisterObject(Urho.Context)">
             <summary>
             Register object factory.
             
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.BeginLoad(Urho.IO.File)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.BeginLoad(Urho.MemoryBuffer)">
             <summary>
             Load resource from stream. May be called from a worker thread. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.Save(Urho.IO.File)">
             <summary>
             Save resource with default indentation (one tab). Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.Save(Urho.MemoryBuffer)">
             <summary>
             Save resource with default indentation (one tab). Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.Save(Urho.IO.File,System.String)">
             <summary>
             Save resource with user-defined indentation. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.Save(Urho.MemoryBuffer,System.String)">
             <summary>
             Save resource with user-defined indentation. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.FromString(System.String)">
             <summary>
             Deserialize from a string. Return true if successful.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.CreateRoot(System.String)">
             <summary>
             Clear the document and create a root element.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.GetOrCreateRoot(System.String)">
             <summary>
             Get the root element if it has matching name, otherwise create it and clear the document.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.GetRoot(System.String)">
             <summary>
             Return the root element, with optionally specified name. Return null element if not found.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.ToDebugString(System.String)">
             <summary>
             Serialize the XML content to a string.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.Patch(Urho.Resources.XmlFile)">
             <summary>
             Patch the XMLFile with another XMLFile. Based on RFC 5261.
             </summary>
            </member>
        <member name="M:Urho.Resources.XmlFile.Patch(Urho.Resources.XmlElement)">
             <summary>
             Patch the XMLFile with another XMLElement. Based on RFC 5261.
             </summary>
            </member>
        <member name="T:Urho.Zone">
             <summary>
             %Component that describes global rendering properties.
             </summary>
            </member>
        <member name="M:Urho.Zone.RegisterObject(Urho.Context)">
             <summary>
             Register object factory. Drawable must be registered first.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.DrawDebugGeometry(Urho.DebugRenderer,System.Boolean)">
             <summary>
             Visualize the component as debug geometry.
             </summary>
            </member>
        <member name="M:Urho.Zone.SetBoundingBox(Urho.BoundingBox)">
             <summary>
             Set local-space bounding box. Will be used as an oriented bounding box to test whether objects or the camera are inside.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.SetAmbientColor(Urho.Color)">
             <summary>
             Set ambient color.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.SetFogColor(Urho.Color)">
             <summary>
             Set fog color.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.SetFogStart(System.Single)">
             <summary>
             Set fog start distance.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.SetFogEnd(System.Single)">
             <summary>
             Set fog end distance.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.SetFogHeight(System.Single)">
             <summary>
             Set fog height distance relative to the scene node's world position. Effective only in height fog mode.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.SetFogHeightScale(System.Single)">
             <summary>
             Set fog height scale. Effective only in height fog mode.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.SetPriority(System.Int32)">
             <summary>
             Set zone priority. If an object or camera is inside several zones, the one with highest priority is used.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.SetHeightFog(System.Boolean)">
             <summary>
             Set height fog mode.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.SetOverride(System.Boolean)">
             <summary>
             Set override mode. If camera is inside an override zone, that zone will be used for all rendered objects instead of their own zone.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.SetAmbientGradient(System.Boolean)">
             <summary>
             Set ambient gradient mode. In gradient mode ambient color is interpolated from neighbor zones.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.SetZoneTexture(Urho.Texture)">
             <summary>
             Set zone texture. This will be bound to the zone texture unit when rendering objects inside the zone. Note that the default shaders do not use it.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetInverseWorldTransform">
             <summary>
             Return inverse world transform.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetAmbientColor">
             <summary>
             Return zone's own ambient color, disregarding gradient mode.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetAmbientStartColor">
             <summary>
             Return ambient start color. Not safe to call from worker threads due to possible octree query.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetAmbientEndColor">
             <summary>
             Return ambient end color. Not safe to call from worker threads due to possible octree query.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetFogColor">
             <summary>
             Return fog color.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetFogStart">
             <summary>
             Return fog start distance.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetFogEnd">
             <summary>
             Return fog end distance.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetFogHeight">
             <summary>
             Return fog height distance relative to the scene node's world position.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetFogHeightScale">
             <summary>
             Return fog height scale.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetPriority">
             <summary>
             Return zone priority.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetHeightFog">
             <summary>
             Return whether height fog mode is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetOverride">
             <summary>
             Return whether override mode is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetAmbientGradient">
             <summary>
             Return whether ambient gradient mode is enabled.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.GetZoneTexture">
             <summary>
             Return zone texture.
             
             </summary>
            </member>
        <member name="M:Urho.Zone.IsInside(Urho.Vector3)">
             <summary>
             Check whether a point is inside.
             </summary>
            </member>
        <member name="M:Urho.Zone.GetZoneTextureAttr">
             <summary>
             Return zone texture attribute.
             </summary>
            </member>
        <member name="P:Urho.Zone.AmbientColor">
             <summary>
             Return zone's own ambient color, disregarding gradient mode.
             
             Or
             Set ambient color.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.FogColor">
             <summary>
             Return fog color.
             
             Or
             Set fog color.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.FogStart">
             <summary>
             Return fog start distance.
             
             Or
             Set fog start distance.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.FogEnd">
             <summary>
             Return fog end distance.
             
             Or
             Set fog end distance.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.FogHeight">
             <summary>
             Return fog height distance relative to the scene node's world position.
             
             Or
             Set fog height distance relative to the scene node's world position. Effective only in height fog mode.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.FogHeightScale">
             <summary>
             Return fog height scale.
             
             Or
             Set fog height scale. Effective only in height fog mode.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.Priority">
             <summary>
             Return zone priority.
             
             Or
             Set zone priority. If an object or camera is inside several zones, the one with highest priority is used.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.HeightFog">
             <summary>
             Return whether height fog mode is enabled.
             
             Or
             Set height fog mode.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.Override">
             <summary>
             Return whether override mode is enabled.
             
             Or
             Set override mode. If camera is inside an override zone, that zone will be used for all rendered objects instead of their own zone.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.AmbientGradient">
             <summary>
             Return whether ambient gradient mode is enabled.
             
             Or
             Set ambient gradient mode. In gradient mode ambient color is interpolated from neighbor zones.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.ZoneTexture">
             <summary>
             Return zone texture.
             
             Or
             Set zone texture. This will be bound to the zone texture unit when rendering objects inside the zone. Note that the default shaders do not use it.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.InverseWorldTransform">
             <summary>
             Return inverse world transform.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.AmbientStartColor">
             <summary>
             Return ambient start color. Not safe to call from worker threads due to possible octree query.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.AmbientEndColor">
             <summary>
             Return ambient end color. Not safe to call from worker threads due to possible octree query.
             
             </summary>
            </member>
        <member name="P:Urho.Zone.ZoneTextureAttr">
             <summary>
             Return zone texture attribute.
             </summary>
            </member>
    </members>
</doc>
